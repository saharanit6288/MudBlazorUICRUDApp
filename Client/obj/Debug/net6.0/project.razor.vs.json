{"SerializedFilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\obj\\Debug\\net6.0\\project.razor.vs.json","FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\MudBlazorUICRUDApp.Client.csproj","Configuration":{"ConfigurationName":"Default","LanguageVersion":"6.0","Extensions":[]},"ProjectWorkspaceState":{"TagHelpers":[{"HashCode":494369806,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Counter","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Counter"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Counter","Common.TypeNameIdentifier":"Counter","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":-921982025,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Counter","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.Counter"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Counter","Common.TypeNameIdentifier":"Counter","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":615650499,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.ChangePassword","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChangePassword"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.ChangePassword","Common.TypeNameIdentifier":"ChangePassword","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Runtime.Name":"Components.IComponent"}},{"HashCode":-491637766,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.ChangePassword","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.Auth.ChangePassword"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.ChangePassword","Common.TypeNameIdentifier":"ChangePassword","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1052279084,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.UserInfo","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UserInfo"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.UserInfo","Common.TypeNameIdentifier":"UserInfo","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Runtime.Name":"Components.IComponent"}},{"HashCode":-691053974,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.UserInfo","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.Auth.UserInfo"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.UserInfo","Common.TypeNameIdentifier":"UserInfo","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1496375978,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.Login","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Login"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.Login","Common.TypeNameIdentifier":"Login","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Runtime.Name":"Components.IComponent"}},{"HashCode":-1896867513,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.Login","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.Auth.Login"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.Login","Common.TypeNameIdentifier":"Login","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1407695862,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.Logout","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Logout"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.Logout","Common.TypeNameIdentifier":"Logout","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Runtime.Name":"Components.IComponent"}},{"HashCode":1704952963,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.Logout","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.Auth.Logout"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.Logout","Common.TypeNameIdentifier":"Logout","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1366955277,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.ResetPassword","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ResetPassword"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.ResetPassword","Common.TypeNameIdentifier":"ResetPassword","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Runtime.Name":"Components.IComponent"}},{"HashCode":-1612222363,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.ResetPassword","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.Auth.ResetPassword"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.ResetPassword","Common.TypeNameIdentifier":"ResetPassword","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1868753910,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.Register","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Register"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.Register","Common.TypeNameIdentifier":"Register","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Runtime.Name":"Components.IComponent"}},{"HashCode":-123162305,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Auth.Register","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.Auth.Register"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Auth.Register","Common.TypeNameIdentifier":"Register","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Auth","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1378263896,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Students.StudentList","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"StudentList"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Students.StudentList","Common.TypeNameIdentifier":"StudentList","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Students","Runtime.Name":"Components.IComponent"}},{"HashCode":49436406,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Students.StudentList","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.Students.StudentList"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Students.StudentList","Common.TypeNameIdentifier":"StudentList","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Students","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-629676436,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Students.AddEditStudent","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AddEditStudent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.Int32"}}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Students.AddEditStudent","Common.TypeNameIdentifier":"AddEditStudent","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Students","Runtime.Name":"Components.IComponent"}},{"HashCode":-1525676090,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Students.AddEditStudent","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.Students.AddEditStudent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.Int32"}}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Students.AddEditStudent","Common.TypeNameIdentifier":"AddEditStudent","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages.Students","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1621721540,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.FetchData","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FetchData"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.FetchData","Common.TypeNameIdentifier":"FetchData","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":-1593938208,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.FetchData","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.FetchData"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.FetchData","Common.TypeNameIdentifier":"FetchData","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":585983345,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Index","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Index"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Index","Common.TypeNameIdentifier":"Index","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":-912810650,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Pages.Index","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Pages.Index"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Pages.Index","Common.TypeNameIdentifier":"Index","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":164048210,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.App","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"App"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.App","Common.TypeNameIdentifier":"App","Common.TypeNamespace":"MudBlazorUICRUDApp.Client","Runtime.Name":"Components.IComponent"}},{"HashCode":-1792839639,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.App","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.App"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.App","Common.TypeNameIdentifier":"App","Common.TypeNamespace":"MudBlazorUICRUDApp.Client","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":670819906,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Shared.LoginDisplay","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoginDisplay"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Shared.LoginDisplay","Common.TypeNameIdentifier":"LoginDisplay","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":932510805,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Shared.LoginDisplay","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Shared.LoginDisplay"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Shared.LoginDisplay","Common.TypeNameIdentifier":"LoginDisplay","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-755942278,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Shared.SurveyPrompt","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Shared.SurveyPrompt","Common.TypeNameIdentifier":"SurveyPrompt","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":2111105695,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Shared.SurveyPrompt","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Shared.SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Shared.SurveyPrompt","Common.TypeNameIdentifier":"SurveyPrompt","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1338153271,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Shared.NavMenu","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavMenu"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Shared.NavMenu","Common.TypeNameIdentifier":"NavMenu","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":-1783609976,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Shared.NavMenu","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Shared.NavMenu"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Shared.NavMenu","Common.TypeNameIdentifier":"NavMenu","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1551302596,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Shared.MainLayout","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Body","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Shared.MainLayout","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":2022227366,"Kind":"Components.Component","Name":"MudBlazorUICRUDApp.Client.Shared.MainLayout","AssemblyName":"MudBlazorUICRUDApp.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazorUICRUDApp.Client.Shared.MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Body","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Shared.MainLayout","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1148837362,"Kind":"Components.ChildContent","Name":"MudBlazorUICRUDApp.Client.Shared.MainLayout.Body","AssemblyName":"MudBlazorUICRUDApp.Client","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"MainLayout"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Shared.MainLayout.Body","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Shared","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":362520040,"Kind":"Components.ChildContent","Name":"MudBlazorUICRUDApp.Client.Shared.MainLayout.Body","AssemblyName":"MudBlazorUICRUDApp.Client","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"MudBlazorUICRUDApp.Client.Shared.MainLayout"}],"Metadata":{"Common.TypeName":"MudBlazorUICRUDApp.Client.Shared.MainLayout.Body","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"MudBlazorUICRUDApp.Client.Shared","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":600300187,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataAnnotationsValidator"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNameIdentifier":"DataAnnotationsValidator","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":-450791174,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNameIdentifier":"DataAnnotationsValidator","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-192144100,"Kind":"Components.Component","Name":"MudBlazor.MudBooleanInput<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBooleanInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudBooleanInput<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Checked\">\r\n            <summary>\r\n            The state of the component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Checked","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"StopClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.StopClickPropagation\">\r\n            <summary>\r\n            If true will prevent the click from bubbling up the event tree.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StopClickPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.CheckedChanged\">\r\n            <summary>\r\n            Fired when Checked changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.Boolean?>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.Boolean?>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudBooleanInput<T>","Common.TypeNameIdentifier":"MudBooleanInput","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1296781454,"Kind":"Components.Component","Name":"MudBlazor.MudBooleanInput<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudBooleanInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudBooleanInput<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Checked\">\r\n            <summary>\r\n            The state of the component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Checked","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"StopClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.StopClickPropagation\">\r\n            <summary>\r\n            If true will prevent the click from bubbling up the event tree.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StopClickPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.CheckedChanged\">\r\n            <summary>\r\n            Fired when Checked changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.Boolean?>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.Boolean?>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudBooleanInput<T>","Common.TypeNameIdentifier":"MudBooleanInput","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":411477975,"Kind":"Components.Component","Name":"MudBlazor.MudAlert","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudAlert"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ContentAlignment","TypeName":"MudBlazor.HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAlert.ContentAlignment\">\r\n            <summary>\r\n            Sets the position of the text to the start (Left in LTR and right in RTL).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ContentAlignment","Common.GloballyQualifiedTypeName":"global::MudBlazor.HorizontalAlignment"}},{"Kind":"Components.Component","Name":"AlertTextPosition","TypeName":"MudBlazor.AlertTextPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAlert.AlertTextPosition\">\r\n            <summary>\r\n            Sets the position of the text to the start (Left in LTR and right in RTL).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AlertTextPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.AlertTextPosition"}},{"Kind":"Components.Component","Name":"CloseIconClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudAlert>","Documentation":"<member name=\"P:MudBlazor.MudAlert.CloseIconClicked\">\r\n            <summary>\r\n            The callback, when the close button has been clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIconClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudAlert>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAlert.CloseIcon\">\r\n            <summary>\r\n            Define the icon used for the close button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowCloseIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAlert.ShowCloseIcon\">\r\n            <summary>\r\n            Sets if the alert shows a close icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowCloseIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAlert.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAlert.Square\">\r\n            <summary>\r\n            If true, rounded corners are disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAlert.Dense\">\r\n            <summary>\r\n            If true, compact padding will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"NoIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAlert.NoIcon\">\r\n            <summary>\r\n            If true, no alert icon will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Severity","TypeName":"MudBlazor.Severity","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAlert.Severity\">\r\n            <summary>\r\n            The severity of the alert. This defines the color and icon used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Severity","Common.GloballyQualifiedTypeName":"global::MudBlazor.Severity"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAlert.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAlert.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAlert.Icon\">\r\n            <summary>\r\n            Custom icon, leave unset to use the standard icon which depends on the Severity\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudAlert.OnClick\">\r\n            <summary>\r\n            Raised when the alert is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAlert","Common.TypeNameIdentifier":"MudAlert","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1967707964,"Kind":"Components.Component","Name":"MudBlazor.MudAlert","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudAlert"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ContentAlignment","TypeName":"MudBlazor.HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAlert.ContentAlignment\">\r\n            <summary>\r\n            Sets the position of the text to the start (Left in LTR and right in RTL).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ContentAlignment","Common.GloballyQualifiedTypeName":"global::MudBlazor.HorizontalAlignment"}},{"Kind":"Components.Component","Name":"AlertTextPosition","TypeName":"MudBlazor.AlertTextPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAlert.AlertTextPosition\">\r\n            <summary>\r\n            Sets the position of the text to the start (Left in LTR and right in RTL).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AlertTextPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.AlertTextPosition"}},{"Kind":"Components.Component","Name":"CloseIconClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudAlert>","Documentation":"<member name=\"P:MudBlazor.MudAlert.CloseIconClicked\">\r\n            <summary>\r\n            The callback, when the close button has been clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIconClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudAlert>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAlert.CloseIcon\">\r\n            <summary>\r\n            Define the icon used for the close button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowCloseIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAlert.ShowCloseIcon\">\r\n            <summary>\r\n            Sets if the alert shows a close icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowCloseIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAlert.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAlert.Square\">\r\n            <summary>\r\n            If true, rounded corners are disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAlert.Dense\">\r\n            <summary>\r\n            If true, compact padding will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"NoIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAlert.NoIcon\">\r\n            <summary>\r\n            If true, no alert icon will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Severity","TypeName":"MudBlazor.Severity","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAlert.Severity\">\r\n            <summary>\r\n            The severity of the alert. This defines the color and icon used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Severity","Common.GloballyQualifiedTypeName":"global::MudBlazor.Severity"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAlert.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAlert.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAlert.Icon\">\r\n            <summary>\r\n            Custom icon, leave unset to use the standard icon which depends on the Severity\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudAlert.OnClick\">\r\n            <summary>\r\n            Raised when the alert is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAlert","Common.TypeNameIdentifier":"MudAlert","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1441410418,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAlert.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAlert.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudAlert"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAlert.ChildContent","Common.TypeNameIdentifier":"MudAlert","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1008008047,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAlert.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAlert.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudAlert"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAlert.ChildContent","Common.TypeNameIdentifier":"MudAlert","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-509832226,"Kind":"Components.Component","Name":"MudBlazor.MudAppBar","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudAppBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAppBar.Bottom\">\r\n            <summary>\r\n            If true, Appbar will be placed at the bottom of the screen.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bottom","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAppBar.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAppBar.Dense\">\r\n            <summary>\r\n            If true, compact padding will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAppBar.DisableGutters\">\r\n            <summary>\r\n            If true, the left and right padding is removed from from the appbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAppBar.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Fixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAppBar.Fixed\">\r\n            <summary>\r\n            If true, appbar will be Fixed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAppBar.ToolBarClass\">\r\n            <summary>\r\n            User class names, separated by spaces for the nested toolbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAppBar.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAppBar","Common.TypeNameIdentifier":"MudAppBar","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-432605927,"Kind":"Components.Component","Name":"MudBlazor.MudAppBar","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudAppBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAppBar.Bottom\">\r\n            <summary>\r\n            If true, Appbar will be placed at the bottom of the screen.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bottom","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAppBar.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAppBar.Dense\">\r\n            <summary>\r\n            If true, compact padding will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAppBar.DisableGutters\">\r\n            <summary>\r\n            If true, the left and right padding is removed from from the appbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAppBar.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Fixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAppBar.Fixed\">\r\n            <summary>\r\n            If true, appbar will be Fixed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAppBar.ToolBarClass\">\r\n            <summary>\r\n            User class names, separated by spaces for the nested toolbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAppBar.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAppBar","Common.TypeNameIdentifier":"MudAppBar","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":543702676,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAppBar.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAppBar.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudAppBar"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAppBar.ChildContent","Common.TypeNameIdentifier":"MudAppBar","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1395210896,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAppBar.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAppBar.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudAppBar"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAppBar.ChildContent","Common.TypeNameIdentifier":"MudAppBar","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1376778916,"Kind":"Components.Component","Name":"MudBlazor.MudAutocomplete<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudAutocomplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudAutocomplete<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"PopoverClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.PopoverClass\">\r\n            <summary>\r\n            User class names for the popover, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PopoverClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ListClass\">\r\n            <summary>\r\n            User class names for the internal list, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.AnchorOrigin\">\r\n            <summary>\r\n            Set the anchor origin point to determen where the popover will open from.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.TransformOrigin\">\r\n            <summary>\r\n            Sets the transform origin point for the popover.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MudBlazor.Direction","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.Direction\">\r\n            <summary>\r\n            Set the anchor origin point to determen where the popover will open from.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::MudBlazor.Direction"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.OffsetX\">\r\n            <summary>\r\n            If true, the Autocomplete menu will open either before or after the input (left/right).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetX","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.OffsetY\">\r\n            <summary>\r\n            If true, the Autocomplete menu will open either before or after the input (top/bottom).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetY","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all Autocomplete items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OpenIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.OpenIcon\">\r\n            <summary>\r\n            The Open Autocomplete Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.CloseIcon\">\r\n            <summary>\r\n            The Close Autocomplete Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.MaxHeight\">\r\n            <summary>\r\n            The maximum height of the Autocomplete when it is open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ToStringFunc","TypeName":"System.Func<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ToStringFunc\">\r\n            <summary>\r\n            Defines how values are displayed in the drop-down list\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"ToStringFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"ShowProgressIndicator","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ShowProgressIndicator\">\r\n            <summary>\r\n            Whether to show the progress indicator. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowProgressIndicator","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ProgressIndicatorColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ProgressIndicatorColor\">\r\n            <summary>\r\n            The color of the progress indicator. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ProgressIndicatorColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"SearchFuncWithCancel","TypeName":"System.Func<System.String, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.SearchFuncWithCancel\">\r\n            <summary>\r\n            Func that returns a list of items matching the typed text. Provides a cancellation token that\r\n            is marked as cancelled when the user changes the search text or selects a value from the list. \r\n            This can be used to cancel expensive asynchronous work occuring within the SearchFunc itself.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.String, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<global::System.Collections.Generic.IEnumerable<T>>>","Common.PropertyName":"SearchFuncWithCancel","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"SearchFunc","TypeName":"System.Func<System.String, System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.SearchFunc\">\r\n            <summary>\r\n            The SearchFunc returns a list of items matching the typed text\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.String, global::System.Threading.Tasks.Task<global::System.Collections.Generic.IEnumerable<T>>>","Common.PropertyName":"SearchFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"MaxItems","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.MaxItems\">\r\n            <summary>\r\n            Maximum items to display, defaults to 10.\r\n            A null value will display all items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxItems","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinCharacters","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.MinCharacters\">\r\n            <summary>\r\n            Minimum characters to initiate a search\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinCharacters","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ResetValueOnEmptyText","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ResetValueOnEmptyText\">\r\n            <summary>\r\n            Reset value if user deletes the text\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ResetValueOnEmptyText","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.SelectOnClick\">\r\n            <summary>\r\n            If true, clicking the text field will select (highlight) its contents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectOnClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DebounceInterval","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.DebounceInterval\">\r\n            <summary>\r\n            Debounce interval in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DebounceInterval","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemTemplate\">\r\n            <summary>\r\n            Optional presentation template for unselected items\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSelectedTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemSelectedTemplate\">\r\n            <summary>\r\n            Optional presentation template for the selected item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemSelectedTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemDisabledTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemDisabledTemplate\">\r\n            <summary>\r\n            Optional presentation template for disabled item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemDisabledTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MoreItemsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.MoreItemsTemplate\">\r\n            <summary>\r\n            Optional presentation template for when more items were returned from the Search function than the MaxItems limit\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MoreItemsTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NoItemsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.NoItemsTemplate\">\r\n            <summary>\r\n            Optional presentation template for when no items were returned from the Search function\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoItemsTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ProgressIndicatorTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ProgressIndicatorTemplate\">\r\n            <summary>\r\n            Optional template for progress indicator\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ProgressIndicatorTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ProgressIndicatorInPopoverTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ProgressIndicatorInPopoverTemplate\">\r\n            <summary>\r\n            Optional template for showing progress indicator inside the popover\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ProgressIndicatorInPopoverTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CoerceText","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.CoerceText\">\r\n            <summary>\r\n            On drop-down close override Text with selected Value. This makes it clear to the user\r\n            which list value is currently selected and disallows incomplete values in Text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CoerceText","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CoerceValue","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.CoerceValue\">\r\n            <summary>\r\n            If user input is not found by the search func and CoerceValue is set to true the user input\r\n            will be applied to the Value which allows to validate it and display an error message.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CoerceValue","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ItemDisabledFunc","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemDisabledFunc\">\r\n            <summary>\r\n            Function to be invoked when checking whether an item should be disabled or not\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"ItemDisabledFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.IsOpenChanged\">\r\n            <summary>\r\n            An event triggered when the state of IsOpen has changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsOpenChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectValueOnTab","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.SelectValueOnTab\">\r\n            <summary>\r\n            If true, the currently selected item from the drop-down (if it is open) is selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectValueOnTab","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-703793115,"Kind":"Components.Component","Name":"MudBlazor.MudAutocomplete<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudAutocomplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudAutocomplete<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"PopoverClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.PopoverClass\">\r\n            <summary>\r\n            User class names for the popover, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PopoverClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ListClass\">\r\n            <summary>\r\n            User class names for the internal list, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.AnchorOrigin\">\r\n            <summary>\r\n            Set the anchor origin point to determen where the popover will open from.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.TransformOrigin\">\r\n            <summary>\r\n            Sets the transform origin point for the popover.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MudBlazor.Direction","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.Direction\">\r\n            <summary>\r\n            Set the anchor origin point to determen where the popover will open from.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::MudBlazor.Direction"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.OffsetX\">\r\n            <summary>\r\n            If true, the Autocomplete menu will open either before or after the input (left/right).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetX","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.OffsetY\">\r\n            <summary>\r\n            If true, the Autocomplete menu will open either before or after the input (top/bottom).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetY","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all Autocomplete items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OpenIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.OpenIcon\">\r\n            <summary>\r\n            The Open Autocomplete Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.CloseIcon\">\r\n            <summary>\r\n            The Close Autocomplete Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.MaxHeight\">\r\n            <summary>\r\n            The maximum height of the Autocomplete when it is open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ToStringFunc","TypeName":"System.Func<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ToStringFunc\">\r\n            <summary>\r\n            Defines how values are displayed in the drop-down list\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"ToStringFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"ShowProgressIndicator","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ShowProgressIndicator\">\r\n            <summary>\r\n            Whether to show the progress indicator. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowProgressIndicator","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ProgressIndicatorColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ProgressIndicatorColor\">\r\n            <summary>\r\n            The color of the progress indicator. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ProgressIndicatorColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"SearchFuncWithCancel","TypeName":"System.Func<System.String, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.SearchFuncWithCancel\">\r\n            <summary>\r\n            Func that returns a list of items matching the typed text. Provides a cancellation token that\r\n            is marked as cancelled when the user changes the search text or selects a value from the list. \r\n            This can be used to cancel expensive asynchronous work occuring within the SearchFunc itself.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.String, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<global::System.Collections.Generic.IEnumerable<T>>>","Common.PropertyName":"SearchFuncWithCancel","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"SearchFunc","TypeName":"System.Func<System.String, System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.SearchFunc\">\r\n            <summary>\r\n            The SearchFunc returns a list of items matching the typed text\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.String, global::System.Threading.Tasks.Task<global::System.Collections.Generic.IEnumerable<T>>>","Common.PropertyName":"SearchFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"MaxItems","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.MaxItems\">\r\n            <summary>\r\n            Maximum items to display, defaults to 10.\r\n            A null value will display all items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxItems","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinCharacters","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.MinCharacters\">\r\n            <summary>\r\n            Minimum characters to initiate a search\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinCharacters","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ResetValueOnEmptyText","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ResetValueOnEmptyText\">\r\n            <summary>\r\n            Reset value if user deletes the text\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ResetValueOnEmptyText","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.SelectOnClick\">\r\n            <summary>\r\n            If true, clicking the text field will select (highlight) its contents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectOnClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DebounceInterval","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.DebounceInterval\">\r\n            <summary>\r\n            Debounce interval in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DebounceInterval","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemTemplate\">\r\n            <summary>\r\n            Optional presentation template for unselected items\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSelectedTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemSelectedTemplate\">\r\n            <summary>\r\n            Optional presentation template for the selected item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemSelectedTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemDisabledTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemDisabledTemplate\">\r\n            <summary>\r\n            Optional presentation template for disabled item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemDisabledTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MoreItemsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.MoreItemsTemplate\">\r\n            <summary>\r\n            Optional presentation template for when more items were returned from the Search function than the MaxItems limit\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MoreItemsTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NoItemsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.NoItemsTemplate\">\r\n            <summary>\r\n            Optional presentation template for when no items were returned from the Search function\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoItemsTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ProgressIndicatorTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ProgressIndicatorTemplate\">\r\n            <summary>\r\n            Optional template for progress indicator\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ProgressIndicatorTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ProgressIndicatorInPopoverTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ProgressIndicatorInPopoverTemplate\">\r\n            <summary>\r\n            Optional template for showing progress indicator inside the popover\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ProgressIndicatorInPopoverTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CoerceText","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.CoerceText\">\r\n            <summary>\r\n            On drop-down close override Text with selected Value. This makes it clear to the user\r\n            which list value is currently selected and disallows incomplete values in Text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CoerceText","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CoerceValue","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.CoerceValue\">\r\n            <summary>\r\n            If user input is not found by the search func and CoerceValue is set to true the user input\r\n            will be applied to the Value which allows to validate it and display an error message.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CoerceValue","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ItemDisabledFunc","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemDisabledFunc\">\r\n            <summary>\r\n            Function to be invoked when checking whether an item should be disabled or not\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"ItemDisabledFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.IsOpenChanged\">\r\n            <summary>\r\n            An event triggered when the state of IsOpen has changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsOpenChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectValueOnTab","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.SelectValueOnTab\">\r\n            <summary>\r\n            If true, the currently selected item from the drop-down (if it is open) is selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectValueOnTab","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-322815292,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.ItemTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemTemplate\">\r\n            <summary>\r\n            Optional presentation template for unselected items\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MudAutocomplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.ItemTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-11169997,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.ItemTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemTemplate\">\r\n            <summary>\r\n            Optional presentation template for unselected items\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MudBlazor.MudAutocomplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.ItemTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-725309874,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.ItemSelectedTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemSelectedTemplate\">\r\n            <summary>\r\n            Optional presentation template for the selected item\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemSelectedTemplate","ParentTag":"MudAutocomplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemSelectedTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.ItemSelectedTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-215467338,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.ItemSelectedTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemSelectedTemplate\">\r\n            <summary>\r\n            Optional presentation template for the selected item\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemSelectedTemplate","ParentTag":"MudBlazor.MudAutocomplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemSelectedTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.ItemSelectedTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-996988711,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.ItemDisabledTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemDisabledTemplate\">\r\n            <summary>\r\n            Optional presentation template for disabled item\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemDisabledTemplate","ParentTag":"MudAutocomplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemDisabledTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.ItemDisabledTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":60647694,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.ItemDisabledTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ItemDisabledTemplate\">\r\n            <summary>\r\n            Optional presentation template for disabled item\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemDisabledTemplate","ParentTag":"MudBlazor.MudAutocomplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemDisabledTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.ItemDisabledTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":248042643,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.MoreItemsTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.MoreItemsTemplate\">\r\n            <summary>\r\n            Optional presentation template for when more items were returned from the Search function than the MaxItems limit\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MoreItemsTemplate","ParentTag":"MudAutocomplete"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.MoreItemsTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1388806682,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.MoreItemsTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.MoreItemsTemplate\">\r\n            <summary>\r\n            Optional presentation template for when more items were returned from the Search function than the MaxItems limit\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MoreItemsTemplate","ParentTag":"MudBlazor.MudAutocomplete"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.MoreItemsTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1549301483,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.NoItemsTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.NoItemsTemplate\">\r\n            <summary>\r\n            Optional presentation template for when no items were returned from the Search function\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoItemsTemplate","ParentTag":"MudAutocomplete"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.NoItemsTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1972696194,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.NoItemsTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.NoItemsTemplate\">\r\n            <summary>\r\n            Optional presentation template for when no items were returned from the Search function\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoItemsTemplate","ParentTag":"MudBlazor.MudAutocomplete"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.NoItemsTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-209731351,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.ProgressIndicatorTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ProgressIndicatorTemplate\">\r\n            <summary>\r\n            Optional template for progress indicator\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ProgressIndicatorTemplate","ParentTag":"MudAutocomplete"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.ProgressIndicatorTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1419633099,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.ProgressIndicatorTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ProgressIndicatorTemplate\">\r\n            <summary>\r\n            Optional template for progress indicator\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ProgressIndicatorTemplate","ParentTag":"MudBlazor.MudAutocomplete"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.ProgressIndicatorTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":477388795,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.ProgressIndicatorInPopoverTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ProgressIndicatorInPopoverTemplate\">\r\n            <summary>\r\n            Optional template for showing progress indicator inside the popover\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ProgressIndicatorInPopoverTemplate","ParentTag":"MudAutocomplete"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.ProgressIndicatorInPopoverTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1652337701,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAutocomplete<T>.ProgressIndicatorInPopoverTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAutocomplete`1.ProgressIndicatorInPopoverTemplate\">\r\n            <summary>\r\n            Optional template for showing progress indicator inside the popover\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ProgressIndicatorInPopoverTemplate","ParentTag":"MudBlazor.MudAutocomplete"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>.ProgressIndicatorInPopoverTemplate","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2079044752,"Kind":"Components.Component","Name":"MudBlazor.MudAvatar","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudAvatar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAvatar.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAvatar.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAvatar.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to the themes default value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Image","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAvatar.Image\">\r\n            <summary>\r\n            Link to image, if set a image will be displayed instead of text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Image","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Alt","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAvatar.Alt\">\r\n            <summary>\r\n            If set (and Image is also set), will add an alt property to the img element\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Alt","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatar.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatar.Size\">\r\n            <summary>\r\n            The Size of the MudAvatar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatar.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAvatar.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAvatar","Common.TypeNameIdentifier":"MudAvatar","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1452069187,"Kind":"Components.Component","Name":"MudBlazor.MudAvatar","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudAvatar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAvatar.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAvatar.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAvatar.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to the themes default value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Image","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAvatar.Image\">\r\n            <summary>\r\n            Link to image, if set a image will be displayed instead of text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Image","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Alt","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAvatar.Alt\">\r\n            <summary>\r\n            If set (and Image is also set), will add an alt property to the img element\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Alt","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatar.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatar.Size\">\r\n            <summary>\r\n            The Size of the MudAvatar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatar.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAvatar.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAvatar","Common.TypeNameIdentifier":"MudAvatar","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1641055940,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAvatar.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAvatar.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudAvatar"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAvatar.ChildContent","Common.TypeNameIdentifier":"MudAvatar","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-584548371,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAvatar.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAvatar.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudAvatar"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAvatar.ChildContent","Common.TypeNameIdentifier":"MudAvatar","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1486653913,"Kind":"Components.Component","Name":"MudBlazor.MudAvatarGroup","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudAvatarGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Spacing","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.Spacing\">\r\n            <summary>\r\n            Spacing between avatars where 0 is none and 16 max.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Spacing","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.Outlined\">\r\n            <summary>\r\n            Outlines the grouped avatars to distinguish them, useful when avatars are the same color or uses images.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OutlineColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.OutlineColor\">\r\n            <summary>\r\n            Sets the color of the outline if its used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OutlineColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"MaxElevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxElevation\">\r\n            <summary>\r\n            Elevation of the MaxAvatar the higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxElevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MaxSquare","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxSquare\">\r\n            <summary>\r\n            If true, MaxAvatar border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxSquare","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxRounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxRounded\">\r\n            <summary>\r\n            If true, MaxAvatar will be rounded.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxRounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxColor\">\r\n            <summary>\r\n            Color for the MaxAvatar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"MaxSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxSize\">\r\n            <summary>\r\n            Size of the MaxAvatar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"MaxVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxVariant\">\r\n            <summary>\r\n            Variant of the MaxAvatar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.Max\">\r\n            <summary>\r\n            Max avatars to show before showing +x avatar, default value 0 has no max.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MaxAvatarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxAvatarClass\">\r\n            <summary>\r\n            Custom class/classes for MaxAvatar\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxAvatarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAvatarGroup","Common.TypeNameIdentifier":"MudAvatarGroup","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":695854606,"Kind":"Components.Component","Name":"MudBlazor.MudAvatarGroup","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudAvatarGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Spacing","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.Spacing\">\r\n            <summary>\r\n            Spacing between avatars where 0 is none and 16 max.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Spacing","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.Outlined\">\r\n            <summary>\r\n            Outlines the grouped avatars to distinguish them, useful when avatars are the same color or uses images.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OutlineColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.OutlineColor\">\r\n            <summary>\r\n            Sets the color of the outline if its used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OutlineColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"MaxElevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxElevation\">\r\n            <summary>\r\n            Elevation of the MaxAvatar the higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxElevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MaxSquare","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxSquare\">\r\n            <summary>\r\n            If true, MaxAvatar border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxSquare","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxRounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxRounded\">\r\n            <summary>\r\n            If true, MaxAvatar will be rounded.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxRounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxColor\">\r\n            <summary>\r\n            Color for the MaxAvatar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"MaxSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxSize\">\r\n            <summary>\r\n            Size of the MaxAvatar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"MaxVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxVariant\">\r\n            <summary>\r\n            Variant of the MaxAvatar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.Max\">\r\n            <summary>\r\n            Max avatars to show before showing +x avatar, default value 0 has no max.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MaxAvatarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.MaxAvatarClass\">\r\n            <summary>\r\n            Custom class/classes for MaxAvatar\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxAvatarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAvatarGroup","Common.TypeNameIdentifier":"MudAvatarGroup","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1615584511,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAvatarGroup.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudAvatarGroup"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAvatarGroup.ChildContent","Common.TypeNameIdentifier":"MudAvatarGroup","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1445724496,"Kind":"Components.ChildContent","Name":"MudBlazor.MudAvatarGroup.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudAvatarGroup.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudAvatarGroup"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAvatarGroup.ChildContent","Common.TypeNameIdentifier":"MudAvatarGroup","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1840779000,"Kind":"Components.Component","Name":"MudBlazor.MudBadge","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBadge"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Origin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBadge.Origin\">\r\n            <summary>\r\n            The placement of the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Origin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBadge.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Visible\">\r\n            <summary>\r\n            The visibility of the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBadge.Color\">\r\n            <summary>\r\n            The color of the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Bottom\">\r\n            <summary>\r\n            Aligns the badge to bottom.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bottom","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Left\">\r\n            <summary>\r\n            Aligns the badge to left.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Left","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Start","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Start\">\r\n            <summary>\r\n            Aligns the badge to the start (Left in LTR and right in RTL).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Start","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dot","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Dot\">\r\n            <summary>\r\n            Reduces the size of the badge and hide any of its content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dot","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Overlap","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Overlap\">\r\n            <summary>\r\n            Overlaps the childcontent on top of the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Overlap","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Bordered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Bordered\">\r\n            <summary>\r\n            Applies a border around the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bordered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBadge.Icon\">\r\n            <summary>\r\n            Sets the Icon to use in the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBadge.Max\">\r\n            <summary>\r\n            Max value to show when content is integer type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBadge.Content\">\r\n            <summary>\r\n            Content you want inside the badge. Supported types are string and integer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"BadgeClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBadge.BadgeClass\">\r\n            <summary>\r\n            Badge class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BadgeClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBadge.ChildContent\">\r\n            <summary>\r\n            Child content of component, the content that the badge will apply to.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBadge.OnClick\">\r\n            <summary>\r\n            Button click event if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudBadge","Common.TypeNameIdentifier":"MudBadge","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-740443931,"Kind":"Components.Component","Name":"MudBlazor.MudBadge","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudBadge"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Origin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBadge.Origin\">\r\n            <summary>\r\n            The placement of the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Origin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBadge.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Visible\">\r\n            <summary>\r\n            The visibility of the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBadge.Color\">\r\n            <summary>\r\n            The color of the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Bottom\">\r\n            <summary>\r\n            Aligns the badge to bottom.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bottom","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Left\">\r\n            <summary>\r\n            Aligns the badge to left.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Left","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Start","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Start\">\r\n            <summary>\r\n            Aligns the badge to the start (Left in LTR and right in RTL).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Start","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dot","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Dot\">\r\n            <summary>\r\n            Reduces the size of the badge and hide any of its content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dot","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Overlap","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Overlap\">\r\n            <summary>\r\n            Overlaps the childcontent on top of the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Overlap","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Bordered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBadge.Bordered\">\r\n            <summary>\r\n            Applies a border around the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bordered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBadge.Icon\">\r\n            <summary>\r\n            Sets the Icon to use in the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBadge.Max\">\r\n            <summary>\r\n            Max value to show when content is integer type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBadge.Content\">\r\n            <summary>\r\n            Content you want inside the badge. Supported types are string and integer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"BadgeClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBadge.BadgeClass\">\r\n            <summary>\r\n            Badge class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BadgeClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBadge.ChildContent\">\r\n            <summary>\r\n            Child content of component, the content that the badge will apply to.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBadge.OnClick\">\r\n            <summary>\r\n            Button click event if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudBadge","Common.TypeNameIdentifier":"MudBadge","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1581866664,"Kind":"Components.ChildContent","Name":"MudBlazor.MudBadge.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBadge.ChildContent\">\r\n            <summary>\r\n            Child content of component, the content that the badge will apply to.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBadge"}],"Metadata":{"Common.TypeName":"MudBlazor.MudBadge.ChildContent","Common.TypeNameIdentifier":"MudBadge","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1547161472,"Kind":"Components.ChildContent","Name":"MudBlazor.MudBadge.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBadge.ChildContent\">\r\n            <summary>\r\n            Child content of component, the content that the badge will apply to.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudBadge"}],"Metadata":{"Common.TypeName":"MudBlazor.MudBadge.ChildContent","Common.TypeNameIdentifier":"MudBadge","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":882142727,"Kind":"Components.Component","Name":"MudBlazor.MudBreadcrumbs","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBreadcrumbs"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<MudBlazor.BreadcrumbItem>","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.Items\">\r\n            <summary>\r\n            A list of breadcrumb items/links.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.BreadcrumbItem>"}},{"Kind":"Components.Component","Name":"Separator","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.Separator\">\r\n            <summary>\r\n            Specifies the separator between the items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Separator","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SeparatorTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.SeparatorTemplate\">\r\n            <summary>\r\n            Specifies a RenderFragment to use as the separator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SeparatorTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.BreadcrumbItem>","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.ItemTemplate\">\r\n            <summary>\r\n            Specifies a RenderFragment to use as the items' contents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.BreadcrumbItem>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaxItems","TypeName":"System.Byte?","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.MaxItems\">\r\n            <summary>\r\n            Controls when (and if) the breadcrumbs will automatically collapse.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxItems","Common.GloballyQualifiedTypeName":"global::System.Byte?"}},{"Kind":"Components.Component","Name":"ExpanderIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.ExpanderIcon\">\r\n            <summary>\r\n            Custom expander icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpanderIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudBreadcrumbs","Common.TypeNameIdentifier":"MudBreadcrumbs","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":351258119,"Kind":"Components.Component","Name":"MudBlazor.MudBreadcrumbs","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudBreadcrumbs"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<MudBlazor.BreadcrumbItem>","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.Items\">\r\n            <summary>\r\n            A list of breadcrumb items/links.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.BreadcrumbItem>"}},{"Kind":"Components.Component","Name":"Separator","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.Separator\">\r\n            <summary>\r\n            Specifies the separator between the items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Separator","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SeparatorTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.SeparatorTemplate\">\r\n            <summary>\r\n            Specifies a RenderFragment to use as the separator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SeparatorTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.BreadcrumbItem>","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.ItemTemplate\">\r\n            <summary>\r\n            Specifies a RenderFragment to use as the items' contents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.BreadcrumbItem>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaxItems","TypeName":"System.Byte?","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.MaxItems\">\r\n            <summary>\r\n            Controls when (and if) the breadcrumbs will automatically collapse.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxItems","Common.GloballyQualifiedTypeName":"global::System.Byte?"}},{"Kind":"Components.Component","Name":"ExpanderIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.ExpanderIcon\">\r\n            <summary>\r\n            Custom expander icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpanderIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudBreadcrumbs","Common.TypeNameIdentifier":"MudBreadcrumbs","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1653622453,"Kind":"Components.ChildContent","Name":"MudBlazor.MudBreadcrumbs.SeparatorTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.SeparatorTemplate\">\r\n            <summary>\r\n            Specifies a RenderFragment to use as the separator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SeparatorTemplate","ParentTag":"MudBreadcrumbs"}],"Metadata":{"Common.TypeName":"MudBlazor.MudBreadcrumbs.SeparatorTemplate","Common.TypeNameIdentifier":"MudBreadcrumbs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1541236964,"Kind":"Components.ChildContent","Name":"MudBlazor.MudBreadcrumbs.SeparatorTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.SeparatorTemplate\">\r\n            <summary>\r\n            Specifies a RenderFragment to use as the separator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SeparatorTemplate","ParentTag":"MudBlazor.MudBreadcrumbs"}],"Metadata":{"Common.TypeName":"MudBlazor.MudBreadcrumbs.SeparatorTemplate","Common.TypeNameIdentifier":"MudBreadcrumbs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1615989156,"Kind":"Components.ChildContent","Name":"MudBlazor.MudBreadcrumbs.ItemTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.ItemTemplate\">\r\n            <summary>\r\n            Specifies a RenderFragment to use as the items' contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MudBreadcrumbs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudBreadcrumbs.ItemTemplate","Common.TypeNameIdentifier":"MudBreadcrumbs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1967103786,"Kind":"Components.ChildContent","Name":"MudBlazor.MudBreadcrumbs.ItemTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBreadcrumbs.ItemTemplate\">\r\n            <summary>\r\n            Specifies a RenderFragment to use as the items' contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MudBlazor.MudBreadcrumbs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudBreadcrumbs.ItemTemplate","Common.TypeNameIdentifier":"MudBreadcrumbs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-309994770,"Kind":"Components.Component","Name":"MudBlazor.MudBreakpointProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBreakpointProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBreakpointChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Breakpoint>","Metadata":{"Common.PropertyName":"OnBreakpointChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Breakpoint>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudBreakpointProvider","Common.TypeNameIdentifier":"MudBreakpointProvider","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":77932156,"Kind":"Components.Component","Name":"MudBlazor.MudBreakpointProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudBreakpointProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBreakpointChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Breakpoint>","Metadata":{"Common.PropertyName":"OnBreakpointChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Breakpoint>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudBreakpointProvider","Common.TypeNameIdentifier":"MudBreakpointProvider","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1895049214,"Kind":"Components.ChildContent","Name":"MudBlazor.MudBreakpointProvider.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBreakpointProvider"}],"Metadata":{"Common.TypeName":"MudBlazor.MudBreakpointProvider.ChildContent","Common.TypeNameIdentifier":"MudBreakpointProvider","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1177672813,"Kind":"Components.ChildContent","Name":"MudBlazor.MudBreakpointProvider.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudBreakpointProvider"}],"Metadata":{"Common.TypeName":"MudBlazor.MudBreakpointProvider.ChildContent","Common.TypeNameIdentifier":"MudBreakpointProvider","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":48016223,"Kind":"Components.Component","Name":"MudBlazor.MudButton","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"StartIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudButton.StartIcon\">\r\n            <summary>\r\n            Icon placed before the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StartIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudButton.EndIcon\">\r\n            <summary>\r\n            Icon placed after the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButton.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudButton.IconClass\">\r\n            <summary>\r\n            Icon class names, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButton.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButton.Size\">\r\n            <summary>\r\n            The Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButton.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudButton.FullWidth\">\r\n            <summary>\r\n            If true, the button will take up 100% of available width.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudButton.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlTag","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.HtmlTag\">\r\n            <summary>\r\n            The HTML element that will be rendered in the root by the component\r\n            By default, is a button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlTag","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ButtonType","TypeName":"MudBlazor.ButtonType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseButton.ButtonType\">\r\n            <summary>\r\n            The button Type (Button, Submit, Refresh)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ButtonType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ButtonType"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Href\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Link\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where (Obsolete replaced by Href)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Target\">\r\n            <summary>\r\n            The target attribute specifies where to open the link, if Link is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.OnClick\">\r\n            <summary>\r\n            Button click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudButton","Common.TypeNameIdentifier":"MudButton","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-908471847,"Kind":"Components.Component","Name":"MudBlazor.MudButton","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"StartIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudButton.StartIcon\">\r\n            <summary>\r\n            Icon placed before the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StartIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudButton.EndIcon\">\r\n            <summary>\r\n            Icon placed after the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButton.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudButton.IconClass\">\r\n            <summary>\r\n            Icon class names, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButton.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButton.Size\">\r\n            <summary>\r\n            The Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButton.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudButton.FullWidth\">\r\n            <summary>\r\n            If true, the button will take up 100% of available width.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudButton.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlTag","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.HtmlTag\">\r\n            <summary>\r\n            The HTML element that will be rendered in the root by the component\r\n            By default, is a button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlTag","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ButtonType","TypeName":"MudBlazor.ButtonType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseButton.ButtonType\">\r\n            <summary>\r\n            The button Type (Button, Submit, Refresh)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ButtonType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ButtonType"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Href\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Link\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where (Obsolete replaced by Href)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Target\">\r\n            <summary>\r\n            The target attribute specifies where to open the link, if Link is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.OnClick\">\r\n            <summary>\r\n            Button click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudButton","Common.TypeNameIdentifier":"MudButton","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-129276406,"Kind":"Components.ChildContent","Name":"MudBlazor.MudButton.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudButton.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudButton"}],"Metadata":{"Common.TypeName":"MudBlazor.MudButton.ChildContent","Common.TypeNameIdentifier":"MudButton","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-206544909,"Kind":"Components.ChildContent","Name":"MudBlazor.MudButton.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudButton.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudButton"}],"Metadata":{"Common.TypeName":"MudBlazor.MudButton.ChildContent","Common.TypeNameIdentifier":"MudButton","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-184866302,"Kind":"Components.Component","Name":"MudBlazor.MudFab","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudFab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudFab.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudFab.Size\">\r\n            <summary>\r\n            The Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFab.Icon\">\r\n            <summary>\r\n            If applied Icon will be added at the start of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"StartIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFab.StartIcon\">\r\n            <summary>\r\n            If applied Icon will be added at the start of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StartIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFab.EndIcon\">\r\n            <summary>\r\n            If applied Icon will be added at the end of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudFab.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudFab.IconSize\">\r\n            <summary>\r\n            The size of the icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFab.Label\">\r\n            <summary>\r\n            If applied the text will be added to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFab.Title\">\r\n            <summary>\r\n            Title of the icon used for accessibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HtmlTag","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.HtmlTag\">\r\n            <summary>\r\n            The HTML element that will be rendered in the root by the component\r\n            By default, is a button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlTag","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ButtonType","TypeName":"MudBlazor.ButtonType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseButton.ButtonType\">\r\n            <summary>\r\n            The button Type (Button, Submit, Refresh)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ButtonType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ButtonType"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Href\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Link\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where (Obsolete replaced by Href)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Target\">\r\n            <summary>\r\n            The target attribute specifies where to open the link, if Link is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.OnClick\">\r\n            <summary>\r\n            Button click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudFab","Common.TypeNameIdentifier":"MudFab","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-855183346,"Kind":"Components.Component","Name":"MudBlazor.MudFab","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudFab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudFab.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudFab.Size\">\r\n            <summary>\r\n            The Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFab.Icon\">\r\n            <summary>\r\n            If applied Icon will be added at the start of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"StartIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFab.StartIcon\">\r\n            <summary>\r\n            If applied Icon will be added at the start of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StartIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFab.EndIcon\">\r\n            <summary>\r\n            If applied Icon will be added at the end of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudFab.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudFab.IconSize\">\r\n            <summary>\r\n            The size of the icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFab.Label\">\r\n            <summary>\r\n            If applied the text will be added to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFab.Title\">\r\n            <summary>\r\n            Title of the icon used for accessibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HtmlTag","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.HtmlTag\">\r\n            <summary>\r\n            The HTML element that will be rendered in the root by the component\r\n            By default, is a button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlTag","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ButtonType","TypeName":"MudBlazor.ButtonType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseButton.ButtonType\">\r\n            <summary>\r\n            The button Type (Button, Submit, Refresh)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ButtonType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ButtonType"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Href\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Link\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where (Obsolete replaced by Href)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Target\">\r\n            <summary>\r\n            The target attribute specifies where to open the link, if Link is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.OnClick\">\r\n            <summary>\r\n            Button click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudFab","Common.TypeNameIdentifier":"MudFab","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1679492619,"Kind":"Components.Component","Name":"MudBlazor.MudIconButton","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudIconButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudIconButton.Icon\">\r\n            <summary>\r\n            The Icon that will be used in the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudIconButton.Title\">\r\n            <summary>\r\n            Title of the icon used for accessibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIconButton.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIconButton.Size\">\r\n            <summary>\r\n            The Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Edge","TypeName":"MudBlazor.Edge","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIconButton.Edge\">\r\n            <summary>\r\n            If set uses a negative margin.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Edge","Common.GloballyQualifiedTypeName":"global::MudBlazor.Edge"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudIconButton.ChildContent\">\r\n            <summary>\r\n            Child content of component, only shows if Icon is null or Empty.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIconButton.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"HtmlTag","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.HtmlTag\">\r\n            <summary>\r\n            The HTML element that will be rendered in the root by the component\r\n            By default, is a button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlTag","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ButtonType","TypeName":"MudBlazor.ButtonType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseButton.ButtonType\">\r\n            <summary>\r\n            The button Type (Button, Submit, Refresh)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ButtonType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ButtonType"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Href\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Link\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where (Obsolete replaced by Href)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Target\">\r\n            <summary>\r\n            The target attribute specifies where to open the link, if Link is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.OnClick\">\r\n            <summary>\r\n            Button click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudIconButton","Common.TypeNameIdentifier":"MudIconButton","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1026690924,"Kind":"Components.Component","Name":"MudBlazor.MudIconButton","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudIconButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudIconButton.Icon\">\r\n            <summary>\r\n            The Icon that will be used in the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudIconButton.Title\">\r\n            <summary>\r\n            Title of the icon used for accessibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIconButton.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIconButton.Size\">\r\n            <summary>\r\n            The Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Edge","TypeName":"MudBlazor.Edge","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIconButton.Edge\">\r\n            <summary>\r\n            If set uses a negative margin.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Edge","Common.GloballyQualifiedTypeName":"global::MudBlazor.Edge"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudIconButton.ChildContent\">\r\n            <summary>\r\n            Child content of component, only shows if Icon is null or Empty.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIconButton.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"HtmlTag","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.HtmlTag\">\r\n            <summary>\r\n            The HTML element that will be rendered in the root by the component\r\n            By default, is a button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlTag","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ButtonType","TypeName":"MudBlazor.ButtonType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseButton.ButtonType\">\r\n            <summary>\r\n            The button Type (Button, Submit, Refresh)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ButtonType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ButtonType"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Href\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Link\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where (Obsolete replaced by Href)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Target\">\r\n            <summary>\r\n            The target attribute specifies where to open the link, if Link is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseButton.OnClick\">\r\n            <summary>\r\n            Button click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudIconButton","Common.TypeNameIdentifier":"MudIconButton","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":60580984,"Kind":"Components.ChildContent","Name":"MudBlazor.MudIconButton.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudIconButton.ChildContent\">\r\n            <summary>\r\n            Child content of component, only shows if Icon is null or Empty.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudIconButton"}],"Metadata":{"Common.TypeName":"MudBlazor.MudIconButton.ChildContent","Common.TypeNameIdentifier":"MudIconButton","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1078689307,"Kind":"Components.ChildContent","Name":"MudBlazor.MudIconButton.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudIconButton.ChildContent\">\r\n            <summary>\r\n            Child content of component, only shows if Icon is null or Empty.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudIconButton"}],"Metadata":{"Common.TypeName":"MudBlazor.MudIconButton.ChildContent","Common.TypeNameIdentifier":"MudIconButton","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":142632976,"Kind":"Components.Component","Name":"MudBlazor.MudToggleIconButton","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudToggleIconButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Toggled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Toggled\">\r\n            <summary>\r\n            The toggled value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Toggled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToggledChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.ToggledChanged\">\r\n            <summary>\r\n            Fires whenever toggled is changed. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToggledChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Icon\">\r\n            <summary>\r\n            The Icon that will be used in the untoggled state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ToggledIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.ToggledIcon\">\r\n            <summary>\r\n            The Icon that will be used in the toggled state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToggledIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Title\">\r\n            <summary>\r\n            Title of the icon used for accessibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ToggledTitle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.ToggledTitle\">\r\n            <summary>\r\n            Title used in toggled state, if different.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToggledTitle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Color\">\r\n            <summary>\r\n            The color of the icon in the untoggled state. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ToggledColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.ToggledColor\">\r\n            <summary>\r\n            The color of the icon in the toggled state. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToggledColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Size\">\r\n            <summary>\r\n            The Size of the component in the untoggled state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"ToggledSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.ToggledSize\">\r\n            <summary>\r\n            The Size of the component in the toggled state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToggledSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Edge","TypeName":"MudBlazor.Edge","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Edge\">\r\n            <summary>\r\n            If set uses a negative margin.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Edge","Common.GloballyQualifiedTypeName":"global::MudBlazor.Edge"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudToggleIconButton","Common.TypeNameIdentifier":"MudToggleIconButton","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1462655873,"Kind":"Components.Component","Name":"MudBlazor.MudToggleIconButton","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudToggleIconButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Toggled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Toggled\">\r\n            <summary>\r\n            The toggled value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Toggled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToggledChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.ToggledChanged\">\r\n            <summary>\r\n            Fires whenever toggled is changed. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToggledChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Icon\">\r\n            <summary>\r\n            The Icon that will be used in the untoggled state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ToggledIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.ToggledIcon\">\r\n            <summary>\r\n            The Icon that will be used in the toggled state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToggledIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Title\">\r\n            <summary>\r\n            Title of the icon used for accessibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ToggledTitle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.ToggledTitle\">\r\n            <summary>\r\n            Title used in toggled state, if different.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToggledTitle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Color\">\r\n            <summary>\r\n            The color of the icon in the untoggled state. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ToggledColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.ToggledColor\">\r\n            <summary>\r\n            The color of the icon in the toggled state. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToggledColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Size\">\r\n            <summary>\r\n            The Size of the component in the untoggled state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"ToggledSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.ToggledSize\">\r\n            <summary>\r\n            The Size of the component in the toggled state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToggledSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Edge","TypeName":"MudBlazor.Edge","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Edge\">\r\n            <summary>\r\n            If set uses a negative margin.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Edge","Common.GloballyQualifiedTypeName":"global::MudBlazor.Edge"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudToggleIconButton.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudToggleIconButton","Common.TypeNameIdentifier":"MudToggleIconButton","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1467507492,"Kind":"Components.Component","Name":"MudBlazor.MudButtonGroup","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudButtonGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OverrideStyles","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.OverrideStyles\">\r\n            <summary>\r\n            If true, the button group will override the styles of the individual buttons.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverrideStyles","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"VerticalAlign","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.VerticalAlign\">\r\n            <summary>\r\n            If true, the button group will be displayed vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VerticalAlign","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.Size\">\r\n            <summary>\r\n            The size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudButtonGroup","Common.TypeNameIdentifier":"MudButtonGroup","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1487108446,"Kind":"Components.Component","Name":"MudBlazor.MudButtonGroup","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudButtonGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OverrideStyles","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.OverrideStyles\">\r\n            <summary>\r\n            If true, the button group will override the styles of the individual buttons.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverrideStyles","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"VerticalAlign","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.VerticalAlign\">\r\n            <summary>\r\n            If true, the button group will be displayed vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VerticalAlign","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.Size\">\r\n            <summary>\r\n            The size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudButtonGroup","Common.TypeNameIdentifier":"MudButtonGroup","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1167165568,"Kind":"Components.ChildContent","Name":"MudBlazor.MudButtonGroup.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudButtonGroup"}],"Metadata":{"Common.TypeName":"MudBlazor.MudButtonGroup.ChildContent","Common.TypeNameIdentifier":"MudButtonGroup","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2144583653,"Kind":"Components.ChildContent","Name":"MudBlazor.MudButtonGroup.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudButtonGroup.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudButtonGroup"}],"Metadata":{"Common.TypeName":"MudBlazor.MudButtonGroup.ChildContent","Common.TypeNameIdentifier":"MudButtonGroup","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-842773595,"Kind":"Components.Component","Name":"MudBlazor.MudCard","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCard"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudCard.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCard.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCard.Outlined\">\r\n            <summary>\r\n            If true, card will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCard.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCard","Common.TypeNameIdentifier":"MudCard","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-661880807,"Kind":"Components.Component","Name":"MudBlazor.MudCard","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCard"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudCard.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCard.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCard.Outlined\">\r\n            <summary>\r\n            If true, card will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCard.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCard","Common.TypeNameIdentifier":"MudCard","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1776043546,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCard.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCard.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudCard"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCard.ChildContent","Common.TypeNameIdentifier":"MudCard","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":302540371,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCard.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCard.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudCard"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCard.ChildContent","Common.TypeNameIdentifier":"MudCard","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1286488928,"Kind":"Components.Component","Name":"MudBlazor.MudCardActions","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCardActions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardActions.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardActions","Common.TypeNameIdentifier":"MudCardActions","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1309144133,"Kind":"Components.Component","Name":"MudBlazor.MudCardActions","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCardActions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardActions.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardActions","Common.TypeNameIdentifier":"MudCardActions","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":85522267,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardActions.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardActions.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudCardActions"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardActions.ChildContent","Common.TypeNameIdentifier":"MudCardActions","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":796066094,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardActions.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardActions.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudCardActions"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardActions.ChildContent","Common.TypeNameIdentifier":"MudCardActions","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2083048485,"Kind":"Components.Component","Name":"MudBlazor.MudCardContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCardContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardContent.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardContent","Common.TypeNameIdentifier":"MudCardContent","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-120433680,"Kind":"Components.Component","Name":"MudBlazor.MudCardContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCardContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardContent.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardContent","Common.TypeNameIdentifier":"MudCardContent","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1639019411,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardContent.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardContent.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudCardContent"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardContent.ChildContent","Common.TypeNameIdentifier":"MudCardContent","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":19351382,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardContent.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardContent.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudCardContent"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardContent.ChildContent","Common.TypeNameIdentifier":"MudCardContent","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":382219642,"Kind":"Components.Component","Name":"MudBlazor.MudCardHeader","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCardHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CardHeaderAvatar","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderAvatar\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderAvatar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CardHeaderAvatar","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CardHeaderContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderContent\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CardHeaderContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CardHeaderActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderActions\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderActions.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CardHeaderActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.ChildContent\">\r\n            <summary>\r\n            Optional child content\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardHeader","Common.TypeNameIdentifier":"MudCardHeader","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":913317971,"Kind":"Components.Component","Name":"MudBlazor.MudCardHeader","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCardHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CardHeaderAvatar","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderAvatar\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderAvatar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CardHeaderAvatar","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CardHeaderContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderContent\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CardHeaderContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CardHeaderActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderActions\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderActions.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CardHeaderActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.ChildContent\">\r\n            <summary>\r\n            Optional child content\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardHeader","Common.TypeNameIdentifier":"MudCardHeader","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":264595826,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardHeader.CardHeaderAvatar","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderAvatar\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderAvatar.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardHeaderAvatar","ParentTag":"MudCardHeader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardHeader.CardHeaderAvatar","Common.TypeNameIdentifier":"MudCardHeader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-513817293,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardHeader.CardHeaderAvatar","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderAvatar\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderAvatar.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardHeaderAvatar","ParentTag":"MudBlazor.MudCardHeader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardHeader.CardHeaderAvatar","Common.TypeNameIdentifier":"MudCardHeader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1011405901,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardHeader.CardHeaderContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderContent\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderContent.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardHeaderContent","ParentTag":"MudCardHeader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardHeader.CardHeaderContent","Common.TypeNameIdentifier":"MudCardHeader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1924286939,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardHeader.CardHeaderContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderContent\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderContent.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardHeaderContent","ParentTag":"MudBlazor.MudCardHeader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardHeader.CardHeaderContent","Common.TypeNameIdentifier":"MudCardHeader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-413468923,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardHeader.CardHeaderActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderActions\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderActions.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardHeaderActions","ParentTag":"MudCardHeader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardHeader.CardHeaderActions","Common.TypeNameIdentifier":"MudCardHeader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1453050928,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardHeader.CardHeaderActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.CardHeaderActions\">\r\n            <summary>\r\n            If used renders child content of the CardHeaderActions.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardHeaderActions","ParentTag":"MudBlazor.MudCardHeader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardHeader.CardHeaderActions","Common.TypeNameIdentifier":"MudCardHeader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-785302279,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardHeader.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.ChildContent\">\r\n            <summary>\r\n            Optional child content\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudCardHeader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardHeader.ChildContent","Common.TypeNameIdentifier":"MudCardHeader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2001910049,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCardHeader.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCardHeader.ChildContent\">\r\n            <summary>\r\n            Optional child content\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudCardHeader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardHeader.ChildContent","Common.TypeNameIdentifier":"MudCardHeader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1235973464,"Kind":"Components.Component","Name":"MudBlazor.MudCardMedia","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCardMedia"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCardMedia.Title\">\r\n            <summary>\r\n            Title of the image used for accessibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Image","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCardMedia.Image\">\r\n            <summary>\r\n            Specifies the path to the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Image","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudCardMedia.Height\">\r\n            <summary>\r\n            Specifies the height of the image in px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardMedia","Common.TypeNameIdentifier":"MudCardMedia","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-288156492,"Kind":"Components.Component","Name":"MudBlazor.MudCardMedia","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCardMedia"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCardMedia.Title\">\r\n            <summary>\r\n            Title of the image used for accessibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Image","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCardMedia.Image\">\r\n            <summary>\r\n            Specifies the path to the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Image","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudCardMedia.Height\">\r\n            <summary>\r\n            Specifies the height of the image in px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCardMedia","Common.TypeNameIdentifier":"MudCardMedia","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":371600377,"Kind":"Components.Component","Name":"MudBlazor.MudCarousel<TData>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCarousel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TData","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TData","MudBlazor.MudCarousel<TData>"]},"Metadata":{"Common.PropertyName":"TData","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ShowArrows","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.ShowArrows\">\r\n            <summary>\r\n            Gets or Sets if 'Next' and 'Previous' arrows must be visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowArrows","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ArrowsPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.ArrowsPosition\">\r\n            <summary>\r\n            Sets the position of the arrows. By default, the position is the Center position\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ArrowsPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"ShowBullets","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.ShowBullets\">\r\n            <summary>\r\n            Gets or Sets if bar with Bullets must be visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowBullets","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"BulletsPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.BulletsPosition\">\r\n            <summary>\r\n            Sets the position of the bullets. By default, the position is the Bottom position\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BulletsPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"BulletsColor","TypeName":"MudBlazor.Color?","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.BulletsColor\">\r\n            <summary>\r\n            Gets or Sets the Bullets color.\r\n            If not set, the color is determined based on the <see cref=\"P:MudBlazor.MudCarouselItem.Color\" /> property of the active child.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BulletsColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color?"}},{"Kind":"Components.Component","Name":"ShowDelimiters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.ShowDelimiters\">\r\n            <summary>\r\n            Gets or Sets if bottom bar with Delimiters must be visible.\r\n            Deprecated, use ShowBullets instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowDelimiters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DelimitersColor","TypeName":"MudBlazor.Color?","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.DelimitersColor\">\r\n            <summary>\r\n            Gets or Sets the Delimiters color.\r\n            If not set, the color is determined based on the <see cref=\"P:MudBlazor.MudCarouselItem.Color\" /> property of the active child.\r\n            Deprecated, use BulletsColor instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DelimitersColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color?"}},{"Kind":"Components.Component","Name":"AutoCycle","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.AutoCycle\">\r\n            <summary>\r\n            Gets or Sets automatic cycle on item collection.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoCycle","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoCycleTime","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.AutoCycleTime\">\r\n            <summary>\r\n            Gets or Sets the Auto Cycle time\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoCycleTime","Common.GloballyQualifiedTypeName":"global::System.TimeSpan"}},{"Kind":"Components.Component","Name":"NavigationButtonsClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.NavigationButtonsClass\">\r\n            <summary>\r\n            Gets or Sets custom class(es) for 'Next' and 'Previous' arrows\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NavigationButtonsClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BulletsClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.BulletsClass\">\r\n            <summary>\r\n            Gets or Sets custom class(es) for Bullets buttons\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BulletsClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DelimitersClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.DelimitersClass\">\r\n            <summary>\r\n            Gets or Sets custom class(es) for Delimiters buttons.\r\n            Deprecated, use BulletsClass instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DelimitersClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PreviousIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.PreviousIcon\">\r\n            <summary>\r\n            Custom previous navigation icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreviousIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.CheckedIcon\">\r\n            <summary>\r\n            Custom selected bullet icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UncheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.UncheckedIcon\">\r\n            <summary>\r\n            Custom unselected bullet icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UncheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.NextIcon\">\r\n            <summary>\r\n            Custom next navigation icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextButtonTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.NextButtonTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for the Left Arrow\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextButtonTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PreviousButtonTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.PreviousButtonTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for the Right Arrow\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreviousButtonTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BulletTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.BulletTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for Bullets\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BulletTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Boolean>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EnableSwipeGesture","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.EnableSwipeGesture\">\r\n            <summary>\r\n            Gets or Sets if swipe gestures are allowed for touch devices.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableSwipeGesture","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DelimiterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.DelimiterTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for Delimiters.\r\n            Deprecated, use BulletsTemplate instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DelimiterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Boolean>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.Generic.IEnumerable<TData>","Documentation":"<member name=\"P:MudBlazor.MudBaseBindableItemsControl`2.ItemsSource\">\r\n            <summary>\r\n            Items Collection - For databinding usage\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemsSource","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TData>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TData>","Documentation":"<member name=\"P:MudBlazor.MudBaseBindableItemsControl`2.ItemTemplate\">\r\n            <summary>\r\n            Template for each Item in ItemsSource collection\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TData>","Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.ChildContent\">\r\n            <summary>\r\n            Collection of T\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.SelectedIndex\">\r\n            <summary>\r\n            Selected Item's index\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1119019951,"Kind":"Components.Component","Name":"MudBlazor.MudCarousel<TData>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCarousel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TData","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TData","MudBlazor.MudCarousel<TData>"]},"Metadata":{"Common.PropertyName":"TData","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ShowArrows","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.ShowArrows\">\r\n            <summary>\r\n            Gets or Sets if 'Next' and 'Previous' arrows must be visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowArrows","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ArrowsPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.ArrowsPosition\">\r\n            <summary>\r\n            Sets the position of the arrows. By default, the position is the Center position\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ArrowsPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"ShowBullets","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.ShowBullets\">\r\n            <summary>\r\n            Gets or Sets if bar with Bullets must be visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowBullets","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"BulletsPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.BulletsPosition\">\r\n            <summary>\r\n            Sets the position of the bullets. By default, the position is the Bottom position\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BulletsPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"BulletsColor","TypeName":"MudBlazor.Color?","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.BulletsColor\">\r\n            <summary>\r\n            Gets or Sets the Bullets color.\r\n            If not set, the color is determined based on the <see cref=\"P:MudBlazor.MudCarouselItem.Color\" /> property of the active child.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BulletsColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color?"}},{"Kind":"Components.Component","Name":"ShowDelimiters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.ShowDelimiters\">\r\n            <summary>\r\n            Gets or Sets if bottom bar with Delimiters must be visible.\r\n            Deprecated, use ShowBullets instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowDelimiters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DelimitersColor","TypeName":"MudBlazor.Color?","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.DelimitersColor\">\r\n            <summary>\r\n            Gets or Sets the Delimiters color.\r\n            If not set, the color is determined based on the <see cref=\"P:MudBlazor.MudCarouselItem.Color\" /> property of the active child.\r\n            Deprecated, use BulletsColor instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DelimitersColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color?"}},{"Kind":"Components.Component","Name":"AutoCycle","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.AutoCycle\">\r\n            <summary>\r\n            Gets or Sets automatic cycle on item collection.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoCycle","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoCycleTime","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.AutoCycleTime\">\r\n            <summary>\r\n            Gets or Sets the Auto Cycle time\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoCycleTime","Common.GloballyQualifiedTypeName":"global::System.TimeSpan"}},{"Kind":"Components.Component","Name":"NavigationButtonsClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.NavigationButtonsClass\">\r\n            <summary>\r\n            Gets or Sets custom class(es) for 'Next' and 'Previous' arrows\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NavigationButtonsClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BulletsClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.BulletsClass\">\r\n            <summary>\r\n            Gets or Sets custom class(es) for Bullets buttons\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BulletsClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DelimitersClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.DelimitersClass\">\r\n            <summary>\r\n            Gets or Sets custom class(es) for Delimiters buttons.\r\n            Deprecated, use BulletsClass instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DelimitersClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PreviousIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.PreviousIcon\">\r\n            <summary>\r\n            Custom previous navigation icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreviousIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.CheckedIcon\">\r\n            <summary>\r\n            Custom selected bullet icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UncheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.UncheckedIcon\">\r\n            <summary>\r\n            Custom unselected bullet icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UncheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.NextIcon\">\r\n            <summary>\r\n            Custom next navigation icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextButtonTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.NextButtonTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for the Left Arrow\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextButtonTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PreviousButtonTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.PreviousButtonTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for the Right Arrow\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreviousButtonTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BulletTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.BulletTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for Bullets\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BulletTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Boolean>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EnableSwipeGesture","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.EnableSwipeGesture\">\r\n            <summary>\r\n            Gets or Sets if swipe gestures are allowed for touch devices.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableSwipeGesture","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DelimiterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.DelimiterTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for Delimiters.\r\n            Deprecated, use BulletsTemplate instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DelimiterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Boolean>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.Generic.IEnumerable<TData>","Documentation":"<member name=\"P:MudBlazor.MudBaseBindableItemsControl`2.ItemsSource\">\r\n            <summary>\r\n            Items Collection - For databinding usage\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemsSource","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TData>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TData>","Documentation":"<member name=\"P:MudBlazor.MudBaseBindableItemsControl`2.ItemTemplate\">\r\n            <summary>\r\n            Template for each Item in ItemsSource collection\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TData>","Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.ChildContent\">\r\n            <summary>\r\n            Collection of T\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.SelectedIndex\">\r\n            <summary>\r\n            Selected Item's index\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1156939502,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.NextButtonTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.NextButtonTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for the Left Arrow\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextButtonTemplate","ParentTag":"MudCarousel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.NextButtonTemplate","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":361753219,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.NextButtonTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.NextButtonTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for the Left Arrow\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextButtonTemplate","ParentTag":"MudBlazor.MudCarousel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.NextButtonTemplate","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1667614827,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.PreviousButtonTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.PreviousButtonTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for the Right Arrow\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PreviousButtonTemplate","ParentTag":"MudCarousel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.PreviousButtonTemplate","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1310049123,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.PreviousButtonTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.PreviousButtonTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for the Right Arrow\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PreviousButtonTemplate","ParentTag":"MudBlazor.MudCarousel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.PreviousButtonTemplate","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-8889011,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.BulletTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.BulletTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for Bullets\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BulletTemplate","ParentTag":"MudCarousel"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["BulletTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.BulletTemplate","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1043664774,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.BulletTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.BulletTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for Bullets\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BulletTemplate","ParentTag":"MudBlazor.MudCarousel"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["BulletTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.BulletTemplate","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1617522288,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.DelimiterTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.DelimiterTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for Delimiters.\r\n            Deprecated, use BulletsTemplate instead.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DelimiterTemplate","ParentTag":"MudCarousel"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["DelimiterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.DelimiterTemplate","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-513986772,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.DelimiterTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCarousel`1.DelimiterTemplate\">\r\n            <summary>\r\n            Gets or Sets the Template for Delimiters.\r\n            Deprecated, use BulletsTemplate instead.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DelimiterTemplate","ParentTag":"MudBlazor.MudCarousel"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["DelimiterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.DelimiterTemplate","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1941895366,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.ItemTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBaseBindableItemsControl`2.ItemTemplate\">\r\n            <summary>\r\n            Template for each Item in ItemsSource collection\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MudCarousel"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.ItemTemplate","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1703997847,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.ItemTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBaseBindableItemsControl`2.ItemTemplate\">\r\n            <summary>\r\n            Template for each Item in ItemsSource collection\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MudBlazor.MudCarousel"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.ItemTemplate","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1936611964,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.ChildContent\">\r\n            <summary>\r\n            Collection of T\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudCarousel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.ChildContent","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":790379047,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarousel<TData>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.ChildContent\">\r\n            <summary>\r\n            Collection of T\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudCarousel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>.ChildContent","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":283313603,"Kind":"Components.Component","Name":"MudBlazor.MudCarouselItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCarouselItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCarouselItem.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Transition","TypeName":"MudBlazor.Transition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCarouselItem.Transition\">\r\n            <summary>\r\n            The transition effect of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Transition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Transition"}},{"Kind":"Components.Component","Name":"CustomTransitionEnter","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarouselItem.CustomTransitionEnter\">\r\n            <summary>\r\n            The name of custom transition on entrance time\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomTransitionEnter","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CustomTransitionExit","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarouselItem.CustomTransitionExit\">\r\n            <summary>\r\n            The name of custom transition on exiting time\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomTransitionExit","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarouselItem","Common.TypeNameIdentifier":"MudCarouselItem","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1676999038,"Kind":"Components.Component","Name":"MudBlazor.MudCarouselItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCarouselItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCarouselItem.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Transition","TypeName":"MudBlazor.Transition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCarouselItem.Transition\">\r\n            <summary>\r\n            The transition effect of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Transition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Transition"}},{"Kind":"Components.Component","Name":"CustomTransitionEnter","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarouselItem.CustomTransitionEnter\">\r\n            <summary>\r\n            The name of custom transition on entrance time\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomTransitionEnter","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CustomTransitionExit","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCarouselItem.CustomTransitionExit\">\r\n            <summary>\r\n            The name of custom transition on exiting time\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomTransitionExit","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarouselItem","Common.TypeNameIdentifier":"MudCarouselItem","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":641064499,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarouselItem.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudCarouselItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarouselItem.ChildContent","Common.TypeNameIdentifier":"MudCarouselItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":317839040,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCarouselItem.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudCarouselItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarouselItem.ChildContent","Common.TypeNameIdentifier":"MudCarouselItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-455498298,"Kind":"Components.Component","Name":"MudBlazor.MudCheckBox<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudCheckBox<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"UnCheckedColor","TypeName":"MudBlazor.Color?","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.UnCheckedColor\">\r\n            <summary>\r\n            The base color of the component in its none active/unchecked state. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UnCheckedColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.Label\">\r\n            <summary>\r\n            The text/label will be displayed next to the checkbox if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"MudBlazor.LabelPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.LabelPosition\">\r\n            <summary>\r\n            The position of the text/label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LabelPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.LabelPosition"}},{"Kind":"Components.Component","Name":"KeyboardEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.KeyboardEnabled\">\r\n            <summary>\r\n            If true, the checkbox can be controlled with the keyboard.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyboardEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.Dense\">\r\n            <summary>\r\n            If true, compact padding will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.Size\">\r\n            <summary>\r\n            The Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.CheckedIcon\">\r\n            <summary>\r\n            Custom checked icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UncheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.UncheckedIcon\">\r\n            <summary>\r\n            Custom unchecked icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UncheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IndeterminateIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.IndeterminateIcon\">\r\n            <summary>\r\n            Custom indeterminate icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IndeterminateIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TriState","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.TriState\">\r\n            <summary>\r\n            Define if the checkbox can cycle again through indeterminate status.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TriState","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Checked\">\r\n            <summary>\r\n            The state of the component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Checked","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"StopClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.StopClickPropagation\">\r\n            <summary>\r\n            If true will prevent the click from bubbling up the event tree.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StopClickPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.CheckedChanged\">\r\n            <summary>\r\n            Fired when Checked changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.Boolean?>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.Boolean?>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCheckBox<T>","Common.TypeNameIdentifier":"MudCheckBox","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-707427703,"Kind":"Components.Component","Name":"MudBlazor.MudCheckBox<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudCheckBox<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"UnCheckedColor","TypeName":"MudBlazor.Color?","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.UnCheckedColor\">\r\n            <summary>\r\n            The base color of the component in its none active/unchecked state. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UnCheckedColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.Label\">\r\n            <summary>\r\n            The text/label will be displayed next to the checkbox if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"MudBlazor.LabelPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.LabelPosition\">\r\n            <summary>\r\n            The position of the text/label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LabelPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.LabelPosition"}},{"Kind":"Components.Component","Name":"KeyboardEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.KeyboardEnabled\">\r\n            <summary>\r\n            If true, the checkbox can be controlled with the keyboard.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyboardEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.Dense\">\r\n            <summary>\r\n            If true, compact padding will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.Size\">\r\n            <summary>\r\n            The Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.CheckedIcon\">\r\n            <summary>\r\n            Custom checked icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UncheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.UncheckedIcon\">\r\n            <summary>\r\n            Custom unchecked icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UncheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IndeterminateIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.IndeterminateIcon\">\r\n            <summary>\r\n            Custom indeterminate icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IndeterminateIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TriState","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.TriState\">\r\n            <summary>\r\n            Define if the checkbox can cycle again through indeterminate status.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TriState","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Checked\">\r\n            <summary>\r\n            The state of the component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Checked","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"StopClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.StopClickPropagation\">\r\n            <summary>\r\n            If true will prevent the click from bubbling up the event tree.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StopClickPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.CheckedChanged\">\r\n            <summary>\r\n            Fired when Checked changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.Boolean?>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.Boolean?>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCheckBox<T>","Common.TypeNameIdentifier":"MudCheckBox","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1575678724,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCheckBox<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudCheckBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCheckBox<T>.ChildContent","Common.TypeNameIdentifier":"MudCheckBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1513142955,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCheckBox<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCheckBox`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudCheckBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCheckBox<T>.ChildContent","Common.TypeNameIdentifier":"MudCheckBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":506582932,"Kind":"Components.Component","Name":"MudBlazor.MudChip","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudChip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChip.Color\">\r\n            <summary>\r\n            The color of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChip.Size\">\r\n            <summary>\r\n            The size of the button. small is equivalent to the dense button styling.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChip.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"SelectedColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChip.SelectedColor\">\r\n            <summary>\r\n            The selected color to use when selected, only works together with ChipSet, Color.Inherit for default value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Avatar","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Avatar\">\r\n            <summary>\r\n            Avatar Icon, Overrides the regular Icon if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Avatar","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AvatarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.AvatarClass\">\r\n            <summary>\r\n            Avatar CSS Class, appends to Chips default avatar classes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AvatarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChip.Label\">\r\n            <summary>\r\n            Removes circle edges and applies theme default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChip.Disabled\">\r\n            <summary>\r\n            If true, the chip will be displayed in disabled state and no events possible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Icon\">\r\n            <summary>\r\n            Sets the Icon to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.CheckedIcon\">\r\n            <summary>\r\n            Custom checked icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChip.IconColor\">\r\n            <summary>\r\n            The color of the icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.CloseIcon\">\r\n            <summary>\r\n            Overrides the default close icon, only shown if OnClose is set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChip.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect, ripple effect is only applied to clickable chips.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChip.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Link\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where (Obsolete replaced by Href)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Href\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Target\">\r\n            <summary>\r\n            The target attribute specifies where to open the link, if Href is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Text\">\r\n            <summary>\r\n            A string you want to associate with the chip. If the ChildContent is not set this will be shown as chip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudChip.Value\">\r\n            <summary>\r\n            A value that should be managed in the SelectedValues collection.\r\n            Note: do not change the value during the chip's lifetime\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChip.ForceLoad\">\r\n            <summary>\r\n            If true, force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Default","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.MudChip.Default\">\r\n            <summary>\r\n            If true, this chip is selected by default if used in a ChipSet.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Default","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudChip.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudChip.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudChip.OnClick\">\r\n            <summary>\r\n            Chip click event, if set the chip focus, hover and click effects are applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip>","Documentation":"<member name=\"P:MudBlazor.MudChip.OnClose\">\r\n            <summary>\r\n            Chip delete event, if set the delete icon will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClose","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudChip>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudChip","Common.TypeNameIdentifier":"MudChip","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1163040066,"Kind":"Components.Component","Name":"MudBlazor.MudChip","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudChip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChip.Color\">\r\n            <summary>\r\n            The color of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChip.Size\">\r\n            <summary>\r\n            The size of the button. small is equivalent to the dense button styling.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChip.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"SelectedColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChip.SelectedColor\">\r\n            <summary>\r\n            The selected color to use when selected, only works together with ChipSet, Color.Inherit for default value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Avatar","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Avatar\">\r\n            <summary>\r\n            Avatar Icon, Overrides the regular Icon if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Avatar","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AvatarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.AvatarClass\">\r\n            <summary>\r\n            Avatar CSS Class, appends to Chips default avatar classes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AvatarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChip.Label\">\r\n            <summary>\r\n            Removes circle edges and applies theme default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChip.Disabled\">\r\n            <summary>\r\n            If true, the chip will be displayed in disabled state and no events possible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Icon\">\r\n            <summary>\r\n            Sets the Icon to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.CheckedIcon\">\r\n            <summary>\r\n            Custom checked icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChip.IconColor\">\r\n            <summary>\r\n            The color of the icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.CloseIcon\">\r\n            <summary>\r\n            Overrides the default close icon, only shown if OnClose is set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChip.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect, ripple effect is only applied to clickable chips.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChip.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Link\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where (Obsolete replaced by Href)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Href\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Target\">\r\n            <summary>\r\n            The target attribute specifies where to open the link, if Href is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChip.Text\">\r\n            <summary>\r\n            A string you want to associate with the chip. If the ChildContent is not set this will be shown as chip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudChip.Value\">\r\n            <summary>\r\n            A value that should be managed in the SelectedValues collection.\r\n            Note: do not change the value during the chip's lifetime\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChip.ForceLoad\">\r\n            <summary>\r\n            If true, force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Default","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.MudChip.Default\">\r\n            <summary>\r\n            If true, this chip is selected by default if used in a ChipSet.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Default","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudChip.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudChip.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudChip.OnClick\">\r\n            <summary>\r\n            Chip click event, if set the chip focus, hover and click effects are applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip>","Documentation":"<member name=\"P:MudBlazor.MudChip.OnClose\">\r\n            <summary>\r\n            Chip delete event, if set the delete icon will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClose","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudChip>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudChip","Common.TypeNameIdentifier":"MudChip","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-789769533,"Kind":"Components.ChildContent","Name":"MudBlazor.MudChip.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChip.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudChip"}],"Metadata":{"Common.TypeName":"MudBlazor.MudChip.ChildContent","Common.TypeNameIdentifier":"MudChip","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1563030225,"Kind":"Components.ChildContent","Name":"MudBlazor.MudChip.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChip.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudChip"}],"Metadata":{"Common.TypeName":"MudBlazor.MudChip.ChildContent","Common.TypeNameIdentifier":"MudChip","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1137915730,"Kind":"Components.Component","Name":"MudBlazor.MudChipSet","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudChipSet"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChipSet.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChipSet.MultiSelection\">\r\n            <summary>\r\n            Allows to select more than one chip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Mandatory","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChipSet.Mandatory\">\r\n            <summary>\r\n            Will not allow to deselect the selected chip in single selection mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mandatory","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllClosable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChipSet.AllClosable\">\r\n            <summary>\r\n            Will make all chips closable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllClosable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Filter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChipSet.Filter\">\r\n            <summary>\r\n             Will show a check-mark for the selected components.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Filter","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChipSet.ReadOnly\">\r\n            <summary>\r\n             Will make all chips read only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectedChip","TypeName":"MudBlazor.MudChip","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedChip\">\r\n            <summary>\r\n            The currently selected chip in Choice mode\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChip","Common.GloballyQualifiedTypeName":"global::MudBlazor.MudChip"}},{"Kind":"Components.Component","Name":"SelectedChipChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedChipChanged\">\r\n            <summary>\r\n            Called when the selected chip changes, in Choice mode\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChipChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudChip>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedChips","TypeName":"MudBlazor.MudChip[]","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedChips\">\r\n            <summary>\r\n            The currently selected chips in Filter mode\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChips","Common.GloballyQualifiedTypeName":"global::MudBlazor.MudChip[]"}},{"Kind":"Components.Component","Name":"Comparer","TypeName":"System.Collections.Generic.IEqualityComparer<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.Comparer\">\r\n            <summary>\r\n            The Comparer to use for comparing selected values internally.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Comparer","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEqualityComparer<global::System.Object>"}},{"Kind":"Components.Component","Name":"SelectedChipsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip[]>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedChipsChanged\">\r\n            <summary>\r\n            Called when the selection changed, in Filter mode\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChipsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudChip[]>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedValues","TypeName":"System.Collections.Generic.ICollection<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedValues\">\r\n            <summary>\r\n            The current selected value.\r\n            Note: make the list Clickable for item selection to work.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValues","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<global::System.Object>"}},{"Kind":"Components.Component","Name":"SelectedValuesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.ICollection<System.Object>>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedValuesChanged\">\r\n            <summary>\r\n            Called whenever the selection changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValuesChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.ICollection<global::System.Object>>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.OnClose\">\r\n            <summary>\r\n            Called when a Chip was deleted (by click on the close icon)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClose","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudChip>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudChipSet","Common.TypeNameIdentifier":"MudChipSet","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1311883826,"Kind":"Components.Component","Name":"MudBlazor.MudChipSet","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudChipSet"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChipSet.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChipSet.MultiSelection\">\r\n            <summary>\r\n            Allows to select more than one chip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Mandatory","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChipSet.Mandatory\">\r\n            <summary>\r\n            Will not allow to deselect the selected chip in single selection mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mandatory","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllClosable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChipSet.AllClosable\">\r\n            <summary>\r\n            Will make all chips closable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllClosable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Filter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChipSet.Filter\">\r\n            <summary>\r\n             Will show a check-mark for the selected components.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Filter","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudChipSet.ReadOnly\">\r\n            <summary>\r\n             Will make all chips read only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectedChip","TypeName":"MudBlazor.MudChip","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedChip\">\r\n            <summary>\r\n            The currently selected chip in Choice mode\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChip","Common.GloballyQualifiedTypeName":"global::MudBlazor.MudChip"}},{"Kind":"Components.Component","Name":"SelectedChipChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedChipChanged\">\r\n            <summary>\r\n            Called when the selected chip changes, in Choice mode\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChipChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudChip>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedChips","TypeName":"MudBlazor.MudChip[]","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedChips\">\r\n            <summary>\r\n            The currently selected chips in Filter mode\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChips","Common.GloballyQualifiedTypeName":"global::MudBlazor.MudChip[]"}},{"Kind":"Components.Component","Name":"Comparer","TypeName":"System.Collections.Generic.IEqualityComparer<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.Comparer\">\r\n            <summary>\r\n            The Comparer to use for comparing selected values internally.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Comparer","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEqualityComparer<global::System.Object>"}},{"Kind":"Components.Component","Name":"SelectedChipsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip[]>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedChipsChanged\">\r\n            <summary>\r\n            Called when the selection changed, in Filter mode\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChipsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudChip[]>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedValues","TypeName":"System.Collections.Generic.ICollection<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedValues\">\r\n            <summary>\r\n            The current selected value.\r\n            Note: make the list Clickable for item selection to work.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValues","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<global::System.Object>"}},{"Kind":"Components.Component","Name":"SelectedValuesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.ICollection<System.Object>>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.SelectedValuesChanged\">\r\n            <summary>\r\n            Called whenever the selection changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValuesChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.ICollection<global::System.Object>>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip>","Documentation":"<member name=\"P:MudBlazor.MudChipSet.OnClose\">\r\n            <summary>\r\n            Called when a Chip was deleted (by click on the close icon)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClose","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudChip>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudChipSet","Common.TypeNameIdentifier":"MudChipSet","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":633855596,"Kind":"Components.ChildContent","Name":"MudBlazor.MudChipSet.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChipSet.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudChipSet"}],"Metadata":{"Common.TypeName":"MudBlazor.MudChipSet.ChildContent","Common.TypeNameIdentifier":"MudChipSet","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1019868965,"Kind":"Components.ChildContent","Name":"MudBlazor.MudChipSet.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChipSet.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudChipSet"}],"Metadata":{"Common.TypeName":"MudBlazor.MudChipSet.ChildContent","Common.TypeNameIdentifier":"MudChipSet","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-134358020,"Kind":"Components.Component","Name":"MudBlazor.MudCollapse","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCollapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCollapse.Expanded\">\r\n            <summary>\r\n            If true, expands the panel, otherwise collapse it. Setting this prop enables control over the panel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudCollapse.MaxHeight\">\r\n            <summary>\r\n            Explicitly sets the height for the Collapse element to override the css default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCollapse.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnAnimationEnd","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAnimationEnd","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"ExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCollapse","Common.TypeNameIdentifier":"MudCollapse","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1374126794,"Kind":"Components.Component","Name":"MudBlazor.MudCollapse","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCollapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudCollapse.Expanded\">\r\n            <summary>\r\n            If true, expands the panel, otherwise collapse it. Setting this prop enables control over the panel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudCollapse.MaxHeight\">\r\n            <summary>\r\n            Explicitly sets the height for the Collapse element to override the css default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudCollapse.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnAnimationEnd","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAnimationEnd","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"ExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudCollapse","Common.TypeNameIdentifier":"MudCollapse","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1760522507,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCollapse.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCollapse.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudCollapse"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCollapse.ChildContent","Common.TypeNameIdentifier":"MudCollapse","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":216374972,"Kind":"Components.ChildContent","Name":"MudBlazor.MudCollapse.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudCollapse.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudCollapse"}],"Metadata":{"Common.TypeName":"MudBlazor.MudCollapse.ChildContent","Common.TypeNameIdentifier":"MudCollapse","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":24749571,"Kind":"Components.Component","Name":"MudBlazor.MudColorPicker","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudColorPicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DisableAlpha","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableAlpha\">\r\n            <summary>\r\n            If true, Alpha options will not be displayed and color output will be RGB, HSL or HEX and not RGBA, HSLA or HEXA.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableAlpha","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableColorField","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableColorField\">\r\n            <summary>\r\n            If true, the color field will not be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableColorField","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableModeSwitch","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableModeSwitch\">\r\n            <summary>\r\n            If true, the switch to change color mode will not be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableModeSwitch","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableInputs","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableInputs\">\r\n            <summary>\r\n            If true, textfield inputs and color mode switch will not be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableInputs","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableSliders","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableSliders\">\r\n            <summary>\r\n            If true, hue and alpha sliders will not be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableSliders","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisablePreview","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisablePreview\">\r\n            <summary>\r\n            If true, the preview color box will not be displayed, note that the preview color functions as a button as well for collection colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisablePreview","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ColorPickerMode","TypeName":"MudBlazor.ColorPickerMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudColorPicker.ColorPickerMode\">\r\n            <summary>\r\n            The initial mode (RGB, HSL or HEX) the picker should open. Defaults to RGB \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ColorPickerMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.ColorPickerMode"}},{"Kind":"Components.Component","Name":"ColorPickerView","TypeName":"MudBlazor.ColorPickerView","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudColorPicker.ColorPickerView\">\r\n            <summary>\r\n            The initial view of the picker. Views can be changed if toolbar is enabled. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ColorPickerView","Common.GloballyQualifiedTypeName":"global::MudBlazor.ColorPickerView"}},{"Kind":"Components.Component","Name":"UpdateBindingIfOnlyHSLChanged","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.UpdateBindingIfOnlyHSLChanged\">\r\n            <summary>\r\n            If true, binding changes occurred also when HSL values changed without a corresponding RGB change \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UpdateBindingIfOnlyHSLChanged","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Value","TypeName":"MudBlazor.Utilities.MudColor","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.Value\">\r\n            <summary>\r\n            A two-way bindable property representing the selected value. MudColor is a utility class that can be used to get the value as RGB, HSL, hex or other value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::MudBlazor.Utilities.MudColor"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Utilities.MudColor>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Utilities.MudColor>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Palette","TypeName":"System.Collections.Generic.IEnumerable<MudBlazor.Utilities.MudColor>","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.Palette\">\r\n            <summary>\r\n            MudColor list of predefined colors. The first five colors will show up as the quick colors on preview dot click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Palette","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::MudBlazor.Utilities.MudColor>"}},{"Kind":"Components.Component","Name":"DisableDragEffect","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableDragEffect\">\r\n            <summary>\r\n            When set to true, no mouse move events in the spectrum mode will be captured, so the selector circle won't fellow the mouse. \r\n            Under some conditions like long latency the visual representation might not reflect the user behaviour anymore. So, it can be disabled \r\n            Enabled by default\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableDragEffect","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.CloseIcon\">\r\n            <summary>\r\n            Custom close icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SpectrumIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.SpectrumIcon\">\r\n            <summary>\r\n            Custom spectrum icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SpectrumIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GridIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.GridIcon\">\r\n            <summary>\r\n            Custom grid icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GridIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PaletteIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.PaletteIcon\">\r\n            <summary>\r\n            Custom palette icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PaletteIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ImportExportIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.ImportExportIcon\">\r\n            <summary>\r\n            Custom import/export icont.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ImportExportIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            Sets the aria-label of the input text field icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerOpened","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerOpened\">\r\n            <summary>\r\n            Fired when the dropdown / dialog opens\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerOpened","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PickerClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerClosed\">\r\n            <summary>\r\n            Fired when the dropdown / dialog closes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0 this is set to true automatically in static mode but can be overridden with Rounded bool.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ReadOnly\">\r\n            <summary>\r\n            If true, no date or time can be defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to theme default when in Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperText\">\r\n            <summary>\r\n            If string has value, HelperText will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Disabled\">\r\n            <summary>\r\n            If true, the picker will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Editable\">\r\n            <summary>\r\n            If true, the picker will be editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.DisableToolbar\">\r\n            <summary>\r\n            Hide toolbar and show only date/time views.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ToolBarClass\">\r\n            <summary>\r\n            User class names for picker's ToolBar, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerVariant","TypeName":"MudBlazor.PickerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerVariant\">\r\n            <summary>\r\n            Picker container option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.PickerVariant"}},{"Kind":"Components.Component","Name":"InputVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputVariant\">\r\n            <summary>\r\n             Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Variant\">\r\n            <summary>\r\n            Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Adornment\">\r\n            <summary>\r\n            Sets if the icon will be att start or end, set to false to disable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Orientation\">\r\n            <summary>\r\n            What orientation to render in when in PickerVariant Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Color\">\r\n            <summary>\r\n            The color of the toolbar, selected and active. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AllowKeyboardInput","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AllowKeyboardInput\">\r\n            <summary>\r\n            Changes the cursor appearance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowKeyboardInput","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Text\">\r\n            <summary>\r\n            The currently selected string value (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudPicker<MudBlazor.Utilities.MudColor>>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudPicker<global::MudBlazor.Utilities.MudColor>>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Mask\">\r\n            <summary>\r\n            A mask for structured input of the date (requires Editable to be true).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AnchorOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's anchor. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TransformOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's transform. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<MudBlazor.Utilities.MudColor, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::MudBlazor.Utilities.MudColor, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<MudBlazor.Utilities.MudColor>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::MudBlazor.Utilities.MudColor>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudColorPicker","Common.TypeNameIdentifier":"MudColorPicker","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":940400107,"Kind":"Components.Component","Name":"MudBlazor.MudColorPicker","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudColorPicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DisableAlpha","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableAlpha\">\r\n            <summary>\r\n            If true, Alpha options will not be displayed and color output will be RGB, HSL or HEX and not RGBA, HSLA or HEXA.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableAlpha","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableColorField","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableColorField\">\r\n            <summary>\r\n            If true, the color field will not be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableColorField","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableModeSwitch","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableModeSwitch\">\r\n            <summary>\r\n            If true, the switch to change color mode will not be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableModeSwitch","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableInputs","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableInputs\">\r\n            <summary>\r\n            If true, textfield inputs and color mode switch will not be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableInputs","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableSliders","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableSliders\">\r\n            <summary>\r\n            If true, hue and alpha sliders will not be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableSliders","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisablePreview","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisablePreview\">\r\n            <summary>\r\n            If true, the preview color box will not be displayed, note that the preview color functions as a button as well for collection colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisablePreview","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ColorPickerMode","TypeName":"MudBlazor.ColorPickerMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudColorPicker.ColorPickerMode\">\r\n            <summary>\r\n            The initial mode (RGB, HSL or HEX) the picker should open. Defaults to RGB \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ColorPickerMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.ColorPickerMode"}},{"Kind":"Components.Component","Name":"ColorPickerView","TypeName":"MudBlazor.ColorPickerView","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudColorPicker.ColorPickerView\">\r\n            <summary>\r\n            The initial view of the picker. Views can be changed if toolbar is enabled. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ColorPickerView","Common.GloballyQualifiedTypeName":"global::MudBlazor.ColorPickerView"}},{"Kind":"Components.Component","Name":"UpdateBindingIfOnlyHSLChanged","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.UpdateBindingIfOnlyHSLChanged\">\r\n            <summary>\r\n            If true, binding changes occurred also when HSL values changed without a corresponding RGB change \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UpdateBindingIfOnlyHSLChanged","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Value","TypeName":"MudBlazor.Utilities.MudColor","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.Value\">\r\n            <summary>\r\n            A two-way bindable property representing the selected value. MudColor is a utility class that can be used to get the value as RGB, HSL, hex or other value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::MudBlazor.Utilities.MudColor"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Utilities.MudColor>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Utilities.MudColor>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Palette","TypeName":"System.Collections.Generic.IEnumerable<MudBlazor.Utilities.MudColor>","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.Palette\">\r\n            <summary>\r\n            MudColor list of predefined colors. The first five colors will show up as the quick colors on preview dot click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Palette","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::MudBlazor.Utilities.MudColor>"}},{"Kind":"Components.Component","Name":"DisableDragEffect","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.DisableDragEffect\">\r\n            <summary>\r\n            When set to true, no mouse move events in the spectrum mode will be captured, so the selector circle won't fellow the mouse. \r\n            Under some conditions like long latency the visual representation might not reflect the user behaviour anymore. So, it can be disabled \r\n            Enabled by default\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableDragEffect","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.CloseIcon\">\r\n            <summary>\r\n            Custom close icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SpectrumIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.SpectrumIcon\">\r\n            <summary>\r\n            Custom spectrum icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SpectrumIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GridIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.GridIcon\">\r\n            <summary>\r\n            Custom grid icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GridIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PaletteIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.PaletteIcon\">\r\n            <summary>\r\n            Custom palette icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PaletteIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ImportExportIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColorPicker.ImportExportIcon\">\r\n            <summary>\r\n            Custom import/export icont.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ImportExportIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            Sets the aria-label of the input text field icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerOpened","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerOpened\">\r\n            <summary>\r\n            Fired when the dropdown / dialog opens\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerOpened","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PickerClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerClosed\">\r\n            <summary>\r\n            Fired when the dropdown / dialog closes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0 this is set to true automatically in static mode but can be overridden with Rounded bool.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ReadOnly\">\r\n            <summary>\r\n            If true, no date or time can be defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to theme default when in Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperText\">\r\n            <summary>\r\n            If string has value, HelperText will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Disabled\">\r\n            <summary>\r\n            If true, the picker will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Editable\">\r\n            <summary>\r\n            If true, the picker will be editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.DisableToolbar\">\r\n            <summary>\r\n            Hide toolbar and show only date/time views.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ToolBarClass\">\r\n            <summary>\r\n            User class names for picker's ToolBar, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerVariant","TypeName":"MudBlazor.PickerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerVariant\">\r\n            <summary>\r\n            Picker container option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.PickerVariant"}},{"Kind":"Components.Component","Name":"InputVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputVariant\">\r\n            <summary>\r\n             Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Variant\">\r\n            <summary>\r\n            Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Adornment\">\r\n            <summary>\r\n            Sets if the icon will be att start or end, set to false to disable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Orientation\">\r\n            <summary>\r\n            What orientation to render in when in PickerVariant Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Color\">\r\n            <summary>\r\n            The color of the toolbar, selected and active. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AllowKeyboardInput","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AllowKeyboardInput\">\r\n            <summary>\r\n            Changes the cursor appearance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowKeyboardInput","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Text\">\r\n            <summary>\r\n            The currently selected string value (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudPicker<MudBlazor.Utilities.MudColor>>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudPicker<global::MudBlazor.Utilities.MudColor>>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Mask\">\r\n            <summary>\r\n            A mask for structured input of the date (requires Editable to be true).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AnchorOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's anchor. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TransformOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's transform. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<MudBlazor.Utilities.MudColor, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::MudBlazor.Utilities.MudColor, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<MudBlazor.Utilities.MudColor>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::MudBlazor.Utilities.MudColor>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudColorPicker","Common.TypeNameIdentifier":"MudColorPicker","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":582383438,"Kind":"Components.ChildContent","Name":"MudBlazor.MudColorPicker.PickerActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PickerActions","ParentTag":"MudColorPicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PickerActions"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudColorPicker.PickerActions","Common.TypeNameIdentifier":"MudColorPicker","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1973900075,"Kind":"Components.ChildContent","Name":"MudBlazor.MudColorPicker.PickerActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PickerActions","ParentTag":"MudBlazor.MudColorPicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PickerActions"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudColorPicker.PickerActions","Common.TypeNameIdentifier":"MudColorPicker","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1295040577,"Kind":"Components.Component","Name":"MudBlazor.Column<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Column"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.Column<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.Column`1.Field\">\r\n            <summary>\r\n            Specifies the name of the object's property bound to the column\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FieldType","TypeName":"System.Type","Metadata":{"Common.PropertyName":"FieldType","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HideSmall","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"HideSmall","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FooterColSpan","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"FooterColSpan","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"HeaderColSpan","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"HeaderColSpan","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.HeaderContext<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.HeaderContext<T>>","Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.CellContext<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.CellContext<T>>","Common.PropertyName":"CellTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.FooterContext<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.FooterContext<T>>","Common.PropertyName":"FooterTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.GroupDefinition<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.GroupDefinition<T>>","Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.Func<T, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Object>","Common.PropertyName":"GroupBy","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"HeaderClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderClassFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"HeaderClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderStyleFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"HeaderStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Sortable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.Column`1.Sortable\">\r\n            <summary>\r\n            Determines whether this columns data can be sorted. This overrides the Sortable parameter on the DataGrid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Sortable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Resizable","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"Resizable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Filterable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.Column`1.Filterable\">\r\n            <summary>\r\n            Determines whether this columns data can be filtered. This overrides the Filterable parameter on the DataGrid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Filterable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ShowFilterIcon","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"ShowFilterIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Hideable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.Column`1.Hideable\">\r\n            <summary>\r\n            Determines whether this column can be hidden. This overrides the Hideable parameter on the DataGrid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hideable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Hidden","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HiddenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"HiddenChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowColumnOptions","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.Column`1.ShowColumnOptions\">\r\n            <summary>\r\n            Determines whether to show or hide column options. This overrides the ShowColumnOptions parameter on the DataGrid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowColumnOptions","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SortBy","TypeName":"System.Func<T, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Object>","Common.PropertyName":"SortBy","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"InitialDirection","TypeName":"MudBlazor.SortDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"InitialDirection","Common.GloballyQualifiedTypeName":"global::MudBlazor.SortDirection"}},{"Kind":"Components.Component","Name":"SortIcon","TypeName":"System.String","Metadata":{"Common.PropertyName":"SortIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Groupable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.Column`1.Groupable\">\r\n            <summary>\r\n            Specifies whether the column can be grouped.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Groupable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Grouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.Column`1.Grouping\">\r\n            <summary>\r\n            Specifies whether the column is grouped.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Grouping","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"StickyLeft","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.Column`1.StickyLeft\">\r\n            <summary>\r\n            Specifies whether the column is sticky.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StickyLeft","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"StickyRight","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"StickyRight","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FilterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.FilterContext<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.FilterContext<T>>","Common.PropertyName":"FilterTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.Column`1.Culture\">\r\n            <summary>\r\n            The culture used to represent this column and by the filtering input field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"CellClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CellClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CellClassFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"CellClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"CellStyle","TypeName":"System.String","Metadata":{"Common.PropertyName":"CellStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CellStyleFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"CellStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EditTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.CellContext<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.CellContext<T>>","Common.PropertyName":"EditTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterClassFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"FooterClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"FooterStyle","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterStyleFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"FooterStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"EnableFooterSelection","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableFooterSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AggregateDefinition","TypeName":"MudBlazor.AggregateDefinition<T>","Metadata":{"Common.PropertyName":"AggregateDefinition","Common.GloballyQualifiedTypeName":"global::MudBlazor.AggregateDefinition<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":266818966,"Kind":"Components.Component","Name":"MudBlazor.Column<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Column"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.Column<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.Column`1.Field\">\r\n            <summary>\r\n            Specifies the name of the object's property bound to the column\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FieldType","TypeName":"System.Type","Metadata":{"Common.PropertyName":"FieldType","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HideSmall","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"HideSmall","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FooterColSpan","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"FooterColSpan","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"HeaderColSpan","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"HeaderColSpan","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.HeaderContext<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.HeaderContext<T>>","Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.CellContext<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.CellContext<T>>","Common.PropertyName":"CellTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.FooterContext<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.FooterContext<T>>","Common.PropertyName":"FooterTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.GroupDefinition<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.GroupDefinition<T>>","Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.Func<T, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Object>","Common.PropertyName":"GroupBy","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"HeaderClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderClassFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"HeaderClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderStyleFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"HeaderStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Sortable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.Column`1.Sortable\">\r\n            <summary>\r\n            Determines whether this columns data can be sorted. This overrides the Sortable parameter on the DataGrid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Sortable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Resizable","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"Resizable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Filterable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.Column`1.Filterable\">\r\n            <summary>\r\n            Determines whether this columns data can be filtered. This overrides the Filterable parameter on the DataGrid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Filterable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ShowFilterIcon","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"ShowFilterIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Hideable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.Column`1.Hideable\">\r\n            <summary>\r\n            Determines whether this column can be hidden. This overrides the Hideable parameter on the DataGrid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hideable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Hidden","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HiddenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"HiddenChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowColumnOptions","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.Column`1.ShowColumnOptions\">\r\n            <summary>\r\n            Determines whether to show or hide column options. This overrides the ShowColumnOptions parameter on the DataGrid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowColumnOptions","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SortBy","TypeName":"System.Func<T, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Object>","Common.PropertyName":"SortBy","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"InitialDirection","TypeName":"MudBlazor.SortDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"InitialDirection","Common.GloballyQualifiedTypeName":"global::MudBlazor.SortDirection"}},{"Kind":"Components.Component","Name":"SortIcon","TypeName":"System.String","Metadata":{"Common.PropertyName":"SortIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Groupable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.Column`1.Groupable\">\r\n            <summary>\r\n            Specifies whether the column can be grouped.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Groupable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Grouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.Column`1.Grouping\">\r\n            <summary>\r\n            Specifies whether the column is grouped.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Grouping","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"StickyLeft","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.Column`1.StickyLeft\">\r\n            <summary>\r\n            Specifies whether the column is sticky.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StickyLeft","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"StickyRight","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"StickyRight","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FilterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.FilterContext<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.FilterContext<T>>","Common.PropertyName":"FilterTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.Column`1.Culture\">\r\n            <summary>\r\n            The culture used to represent this column and by the filtering input field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"CellClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CellClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CellClassFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"CellClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"CellStyle","TypeName":"System.String","Metadata":{"Common.PropertyName":"CellStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CellStyleFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"CellStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EditTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.CellContext<T>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.CellContext<T>>","Common.PropertyName":"EditTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterClassFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"FooterClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"FooterStyle","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterStyleFunc","TypeName":"System.Func<T, System.String>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"FooterStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"EnableFooterSelection","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableFooterSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AggregateDefinition","TypeName":"MudBlazor.AggregateDefinition<T>","Metadata":{"Common.PropertyName":"AggregateDefinition","Common.GloballyQualifiedTypeName":"global::MudBlazor.AggregateDefinition<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":992450611,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Column"}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.ChildContent","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1499544730,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.Column"}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.ChildContent","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":22116262,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.HeaderTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["HeaderTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.HeaderTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1579659422,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.HeaderTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"MudBlazor.Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["HeaderTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.HeaderTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1980305877,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.CellTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["CellTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.CellTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-665163006,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.CellTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"MudBlazor.Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["CellTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.CellTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2018165692,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.FooterTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["FooterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.FooterTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1695740537,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.FooterTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"MudBlazor.Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["FooterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.FooterTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-110253447,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.GroupTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["GroupTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.GroupTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-694409905,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.GroupTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"MudBlazor.Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["GroupTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.GroupTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1785294956,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.FilterTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterTemplate","ParentTag":"Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["FilterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.FilterTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-434280675,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.FilterTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterTemplate","ParentTag":"MudBlazor.Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["FilterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.FilterTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":442836541,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.EditTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditTemplate","ParentTag":"Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["EditTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.EditTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-11734185,"Kind":"Components.ChildContent","Name":"MudBlazor.Column<T>.EditTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditTemplate","ParentTag":"MudBlazor.Column"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["EditTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>.EditTemplate","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":232704424,"Kind":"Components.Component","Name":"MudBlazor.FilterHeaderCell<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterHeaderCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.FilterHeaderCell<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Column","TypeName":"MudBlazor.Column<T>","Metadata":{"Common.PropertyName":"Column","Common.GloballyQualifiedTypeName":"global::MudBlazor.Column<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.FilterHeaderCell<T>","Common.TypeNameIdentifier":"FilterHeaderCell","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-2050331341,"Kind":"Components.Component","Name":"MudBlazor.FilterHeaderCell<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.FilterHeaderCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.FilterHeaderCell<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Column","TypeName":"MudBlazor.Column<T>","Metadata":{"Common.PropertyName":"Column","Common.GloballyQualifiedTypeName":"global::MudBlazor.Column<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.FilterHeaderCell<T>","Common.TypeNameIdentifier":"FilterHeaderCell","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-155012570,"Kind":"Components.ChildContent","Name":"MudBlazor.FilterHeaderCell<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FilterHeaderCell"}],"Metadata":{"Common.TypeName":"MudBlazor.FilterHeaderCell<T>.ChildContent","Common.TypeNameIdentifier":"FilterHeaderCell","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1073548802,"Kind":"Components.ChildContent","Name":"MudBlazor.FilterHeaderCell<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.FilterHeaderCell"}],"Metadata":{"Common.TypeName":"MudBlazor.FilterHeaderCell<T>.ChildContent","Common.TypeNameIdentifier":"FilterHeaderCell","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2060195317,"Kind":"Components.Component","Name":"MudBlazor.FooterCell<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.FooterCell<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Column","TypeName":"MudBlazor.Column<T>","Metadata":{"Common.PropertyName":"Column","Common.GloballyQualifiedTypeName":"global::MudBlazor.Column<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CurrentItems","TypeName":"System.Collections.Generic.IEnumerable<T>","Metadata":{"Common.PropertyName":"CurrentItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.FooterCell<T>","Common.TypeNameIdentifier":"FooterCell","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1849905231,"Kind":"Components.Component","Name":"MudBlazor.FooterCell<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.FooterCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.FooterCell<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Column","TypeName":"MudBlazor.Column<T>","Metadata":{"Common.PropertyName":"Column","Common.GloballyQualifiedTypeName":"global::MudBlazor.Column<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CurrentItems","TypeName":"System.Collections.Generic.IEnumerable<T>","Metadata":{"Common.PropertyName":"CurrentItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.FooterCell<T>","Common.TypeNameIdentifier":"FooterCell","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1475404989,"Kind":"Components.ChildContent","Name":"MudBlazor.FooterCell<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FooterCell"}],"Metadata":{"Common.TypeName":"MudBlazor.FooterCell<T>.ChildContent","Common.TypeNameIdentifier":"FooterCell","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1320578144,"Kind":"Components.ChildContent","Name":"MudBlazor.FooterCell<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.FooterCell"}],"Metadata":{"Common.TypeName":"MudBlazor.FooterCell<T>.ChildContent","Common.TypeNameIdentifier":"FooterCell","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-185713334,"Kind":"Components.Component","Name":"MudBlazor.HeaderCell<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.HeaderCell<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Column","TypeName":"MudBlazor.Column<T>","Metadata":{"Common.PropertyName":"Column","Common.GloballyQualifiedTypeName":"global::MudBlazor.Column<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortDirection","TypeName":"MudBlazor.SortDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"SortDirection","Common.GloballyQualifiedTypeName":"global::MudBlazor.SortDirection"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.HeaderCell<T>","Common.TypeNameIdentifier":"HeaderCell","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-1233134744,"Kind":"Components.Component","Name":"MudBlazor.HeaderCell<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.HeaderCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.HeaderCell<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Column","TypeName":"MudBlazor.Column<T>","Metadata":{"Common.PropertyName":"Column","Common.GloballyQualifiedTypeName":"global::MudBlazor.Column<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortDirection","TypeName":"MudBlazor.SortDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"SortDirection","Common.GloballyQualifiedTypeName":"global::MudBlazor.SortDirection"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.HeaderCell<T>","Common.TypeNameIdentifier":"HeaderCell","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1410942035,"Kind":"Components.ChildContent","Name":"MudBlazor.HeaderCell<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HeaderCell"}],"Metadata":{"Common.TypeName":"MudBlazor.HeaderCell<T>.ChildContent","Common.TypeNameIdentifier":"HeaderCell","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1075708299,"Kind":"Components.ChildContent","Name":"MudBlazor.HeaderCell<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.HeaderCell"}],"Metadata":{"Common.TypeName":"MudBlazor.HeaderCell<T>.ChildContent","Common.TypeNameIdentifier":"HeaderCell","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-907307881,"Kind":"Components.Component","Name":"MudBlazor.MudDataGrid<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDataGrid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudDataGrid<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SelectedItemChanged\">\r\n            <summary>\r\n            Callback is called when a row has been clicked and returns the selected item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItemsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<T>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SelectedItemsChanged\">\r\n            <summary>\r\n            Callback is called whenever items are selected or deselected in multi selection mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.HashSet<T>>","Common.PropertyName":"SelectedItemsChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"RowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.DataGridRowClickEventArgs<T>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowClick\">\r\n            <summary>\r\n            Callback is called whenever a row is clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.DataGridRowClickEventArgs<T>>","Common.PropertyName":"RowClick","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"StartedEditingItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.StartedEditingItem\">\r\n            <summary>\r\n            Callback is called when an item has begun to be edited. Returns the item being edited.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"StartedEditingItem","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CanceledEditingItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.CanceledEditingItem\">\r\n            <summary>\r\n            Callback is called when the process of editing an item has been canceled. Returns the item which was previously in edit mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CanceledEditingItem","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CancelledEditingItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.CancelledEditingItem\">\r\n            <summary>\r\n            Callback is called when the process of editing an item has been canceled. Returns the item which was previously in edit mode.\r\n            NOTE: Obsolete, use CanceledEditingItem instead\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CancelledEditingItem","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CommittedItemChanges","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.CommittedItemChanges\">\r\n            <summary>\r\n            Callback is called when the changes to an item are committed. Returns the item whose changes were committed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CommittedItemChanges","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FormFieldChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Utilities.FormFieldChangedEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.FormFieldChanged\">\r\n            <summary>\r\n            Callback is called when a field changes in the dialog MudForm. Only works in EditMode.Form\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FormFieldChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Utilities.FormFieldChangedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SortMode","TypeName":"MudBlazor.SortMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SortMode\">\r\n            <summary>\r\n            Controls whether data in the DataGrid can be sorted. This is overridable by each column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SortMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.SortMode"}},{"Kind":"Components.Component","Name":"Filterable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Filterable\">\r\n            <summary>\r\n            Controls whether data in the DataGrid can be filtered. This is overridable by each column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Filterable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Hideable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Hideable\">\r\n            <summary>\r\n            Controls whether columns in the DataGrid can be hidden. This is overridable by each column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hideable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowColumnOptions","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ShowColumnOptions\">\r\n            <summary>\r\n            Controls whether to hide or show the column options. This is overridable by each column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowColumnOptions","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MudBlazor.Breakpoint","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Breakpoint\">\r\n            <summary>\r\n            At what breakpoint the table should switch to mobile layout. Takes None, Xs, Sm, Md, Lg and Xl the default behavior is breaking on Xs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Breakpoint","Common.GloballyQualifiedTypeName":"global::MudBlazor.Breakpoint"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Square\">\r\n            <summary>\r\n            Set true to disable rounded corners\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Outlined\">\r\n            <summary>\r\n            If true, table will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Bordered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Bordered\">\r\n            <summary>\r\n            If true, table's cells will have left/right borders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bordered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ColGroup","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ColGroup\">\r\n            <summary>\r\n            Specifies a group of one or more columns in a table for formatting.\r\n            Ex:\r\n            table\r\n                colgroup\r\n                   col span=\"2\" style=\"background-color:red\"\r\n                   col style=\"background-color:yellow\"\r\n                 colgroup\r\n                 header\r\n                 body\r\n            table\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ColGroup","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Dense\">\r\n            <summary>\r\n            Set true for rows with a narrow height\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Hover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Hover\">\r\n            <summary>\r\n            Set true to see rows hover on mouse-over.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Striped\">\r\n            <summary>\r\n            If true, striped table rows will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FixedHeader","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.FixedHeader\">\r\n            <summary>\r\n            When true, the header will stay in place when the table is scrolled. Note: set Height to make the table scrollable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixedHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FixedFooter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.FixedFooter\">\r\n            <summary>\r\n            When true, the footer will be visible is not scrolled to the bottom. Note: set Height to make the table scrollable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixedFooter","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowFilterIcons","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowFilterIcons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FilterMode","TypeName":"MudBlazor.DataGridFilterMode","IsEnum":true,"Metadata":{"Common.PropertyName":"FilterMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.DataGridFilterMode"}},{"Kind":"Components.Component","Name":"FilterCaseSensitivity","TypeName":"MudBlazor.DataGridFilterCaseSensitivity","IsEnum":true,"Metadata":{"Common.PropertyName":"FilterCaseSensitivity","Common.GloballyQualifiedTypeName":"global::MudBlazor.DataGridFilterCaseSensitivity"}},{"Kind":"Components.Component","Name":"FilterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Collections.Generic.List<MudBlazor.FilterDefinition<T>>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Collections.Generic.List<global::MudBlazor.FilterDefinition<T>>>","Common.PropertyName":"FilterTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FilterDefinitions","TypeName":"System.Collections.Generic.List<MudBlazor.FilterDefinition<T>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.FilterDefinitions\">\r\n            <summary>\r\n            The list of FilterDefinitions that have been added to the data grid. FilterDefinitions are managed by the data\r\n            grid automatically when using the built in filter UI. You can also programmatically manage these definitions\r\n            through this collection.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FilterDefinitions","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.FilterDefinition<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SortDefinitions","TypeName":"System.Collections.Generic.Dictionary<System.String, MudBlazor.SortDefinition<T>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SortDefinitions\">\r\n            <summary>\r\n            The list of SortDefinitions that have been added to the data grid. SortDefinitions are managed by the data\r\n            grid automatically when using the built in filter UI. You can also programmatically manage these definitions\r\n            through this collection.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SortDefinitions","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::MudBlazor.SortDefinition<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Virtualize","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Virtualize\">\r\n            <summary>\r\n            If true, the results are displayed in a Virtualize component, allowing a boost in rendering speed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Virtualize","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            Only used for virtualization.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"RowClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowClass\">\r\n            <summary>\r\n            CSS class for the table rows. Note, many CSS settings are overridden by MudTd though\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RowStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowStyle\">\r\n            <summary>\r\n            CSS styles for the table rows. Note, many CSS settings are overridden by MudTd though\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RowClassFunc","TypeName":"System.Func<T, System.Int32, System.String>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowClassFunc\">\r\n            <summary>\r\n            Returns the class that will get joined with RowClass. Takes the current item and row index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Int32, global::System.String>","Common.PropertyName":"RowClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"RowStyleFunc","TypeName":"System.Func<T, System.Int32, System.String>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowStyleFunc\">\r\n            <summary>\r\n            Returns the class that will get joined with RowClass. Takes the current item and row index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Int32, global::System.String>","Common.PropertyName":"RowStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"MultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.MultiSelection\">\r\n            <summary>\r\n            Set to true to enable selection of multiple rows.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EditMode","TypeName":"MudBlazor.DataGridEditMode?","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.EditMode\">\r\n            <summary>\r\n            When the grid is not read only, you can specify what type of editing mode to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.DataGridEditMode?"}},{"Kind":"Components.Component","Name":"EditTrigger","TypeName":"MudBlazor.DataGridEditTrigger?","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.EditTrigger\">\r\n            <summary>\r\n            Allows you to specify the action that will trigger an edit when the EditMode is Form.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditTrigger","Common.GloballyQualifiedTypeName":"global::MudBlazor.DataGridEditTrigger?"}},{"Kind":"Components.Component","Name":"EditDialogOptions","TypeName":"MudBlazor.DialogOptions","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.EditDialogOptions\">\r\n            <summary>\r\n            Fine tune the edit dialog.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditDialogOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.DialogOptions"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Items\">\r\n             <summary>\r\n             The data to display in the table. MudTable will render one row per item\r\n             </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Loading","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Loading\">\r\n            <summary>\r\n            Show a loading animation, if true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Loading","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CanCancelEdit","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.CanCancelEdit\">\r\n            <summary>\r\n            Define if Cancel button is present or not for inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanCancelEdit","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LoadingProgressColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.LoadingProgressColor\">\r\n            <summary>\r\n            The color of the loading progress if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingProgressColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ToolBarContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ToolBarContent\">\r\n            <summary>\r\n            Optional. Add any kind of toolbar to this render fragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HorizontalScrollbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.HorizontalScrollbar\">\r\n            <summary>\r\n            Defines if the table has a horizontal scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HorizontalScrollbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ColumnResizeMode","TypeName":"MudBlazor.ResizeMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ColumnResizeMode\">\r\n            <summary>\r\n            Defines if columns of the grid can be resized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ColumnResizeMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.ResizeMode"}},{"Kind":"Components.Component","Name":"HeaderClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.HeaderClass\">\r\n            <summary>\r\n            Add a class to the thead tag\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Height\">\r\n            <summary>\r\n            Setting a height will allow to scroll the table. If not set, it will try to grow in height. You can set this to any CSS value that the\r\n            attribute 'height' accepts, i.e. 500px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.FooterClass\">\r\n            <summary>\r\n            Add a class to the tfoot tag\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"QuickFilter","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.QuickFilter\">\r\n            <summary>\r\n            A function that returns whether or not an item should be displayed in the table. You can use this to implement your own search function.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"QuickFilter","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Header\">\r\n            <summary>\r\n            Allows adding a custom header beyond that specified in the Column component. Add HeaderCell\r\n            components to add a custom header.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Header","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Columns\">\r\n            <summary>\r\n            The Columns that make up the data grid. Add Column components to this RenderFragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Columns","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Culture\">\r\n            <summary>\r\n            The culture used to represent numeric columns and his filtering input fields.\r\n            Each column can override this DataGrid Culture.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"ChildRowContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.CellContext<T>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ChildRowContent\">\r\n            <summary>\r\n            Row Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.CellContext<T>>","Common.PropertyName":"ChildRowContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.NoRecordsContent\">\r\n            <summary>\r\n            Defines the table body content when there are no matching records found\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoRecordsContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadingContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.LoadingContent\">\r\n            <summary>\r\n            Defines the table body content  the table has no rows and is loading\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PagerContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.PagerContent\">\r\n            <summary>\r\n            Add MudTablePager here to enable breaking the rows in to multiple pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PagerContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ServerData","TypeName":"System.Func<MudBlazor.GridState<T>, System.Threading.Tasks.Task<MudBlazor.GridData<T>>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ServerData\">\r\n            <summary>\r\n            Supply an async function which (re)loads filtered, paginated and sorted data from server.\r\n            Table will await this func and update based on the returned TableData.\r\n            Used only with ServerData\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::MudBlazor.GridState<T>, global::System.Threading.Tasks.Task<global::MudBlazor.GridData<T>>>","Common.PropertyName":"ServerData","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"RowsPerPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowsPerPage\">\r\n            <summary>\r\n            If the table has more items than this number, it will break the rows into pages of said size.\r\n            Note: requires a MudTablePager in PagerContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowsPerPage","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CurrentPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.CurrentPage\">\r\n            <summary>\r\n            The page index of the currently displayed page (Zero based). Usually called by MudTablePager.\r\n            Note: requires a MudTablePager in PagerContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CurrentPage","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ReadOnly\">\r\n            <summary>\r\n            Locks Inline Edit mode, if true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectedItems","TypeName":"System.Collections.Generic.HashSet<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SelectedItems\">\r\n            <summary>\r\n            If MultiSelection is true, this returns the currently selected items. You can bind this property and the initial content of the HashSet you bind it to will cause these rows to be selected initially.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SelectedItem\">\r\n            <summary>\r\n            Returns the item which was last clicked on in single selection mode (that is, if MultiSelection is false)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItem","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Groupable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Groupable\">\r\n            <summary>\r\n            Determines whether grouping of columns is allowed in the data grid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Groupable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"GroupExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.GroupExpanded\">\r\n            <summary>\r\n            If set, a grouped column will be expanded by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"GroupClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.GroupClass\">\r\n            <summary>\r\n            CSS class for the groups.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.GroupStyle\">\r\n            <summary>\r\n            CSS styles for the groups.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupClassFunc","TypeName":"System.Func<MudBlazor.GroupDefinition<T>, System.String>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.GroupClassFunc\">\r\n            <summary>\r\n            Returns the class that will get joined with GroupClass.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::MudBlazor.GroupDefinition<T>, global::System.String>","Common.PropertyName":"GroupClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"GroupStyleFunc","TypeName":"System.Func<MudBlazor.GroupDefinition<T>, System.String>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.GroupStyleFunc\">\r\n            <summary>\r\n            Returns the class that will get joined with GroupStyle.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::MudBlazor.GroupDefinition<T>, global::System.String>","Common.PropertyName":"GroupStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"ShowMenuIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ShowMenuIcon\">\r\n            <summary>\r\n            When true, displays the built-in menu icon in the header of the data grid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowMenuIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":655544227,"Kind":"Components.Component","Name":"MudBlazor.MudDataGrid<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDataGrid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudDataGrid<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SelectedItemChanged\">\r\n            <summary>\r\n            Callback is called when a row has been clicked and returns the selected item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItemsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<T>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SelectedItemsChanged\">\r\n            <summary>\r\n            Callback is called whenever items are selected or deselected in multi selection mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.HashSet<T>>","Common.PropertyName":"SelectedItemsChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"RowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.DataGridRowClickEventArgs<T>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowClick\">\r\n            <summary>\r\n            Callback is called whenever a row is clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.DataGridRowClickEventArgs<T>>","Common.PropertyName":"RowClick","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"StartedEditingItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.StartedEditingItem\">\r\n            <summary>\r\n            Callback is called when an item has begun to be edited. Returns the item being edited.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"StartedEditingItem","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CanceledEditingItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.CanceledEditingItem\">\r\n            <summary>\r\n            Callback is called when the process of editing an item has been canceled. Returns the item which was previously in edit mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CanceledEditingItem","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CancelledEditingItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.CancelledEditingItem\">\r\n            <summary>\r\n            Callback is called when the process of editing an item has been canceled. Returns the item which was previously in edit mode.\r\n            NOTE: Obsolete, use CanceledEditingItem instead\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CancelledEditingItem","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CommittedItemChanges","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.CommittedItemChanges\">\r\n            <summary>\r\n            Callback is called when the changes to an item are committed. Returns the item whose changes were committed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CommittedItemChanges","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FormFieldChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Utilities.FormFieldChangedEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.FormFieldChanged\">\r\n            <summary>\r\n            Callback is called when a field changes in the dialog MudForm. Only works in EditMode.Form\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FormFieldChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Utilities.FormFieldChangedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SortMode","TypeName":"MudBlazor.SortMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SortMode\">\r\n            <summary>\r\n            Controls whether data in the DataGrid can be sorted. This is overridable by each column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SortMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.SortMode"}},{"Kind":"Components.Component","Name":"Filterable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Filterable\">\r\n            <summary>\r\n            Controls whether data in the DataGrid can be filtered. This is overridable by each column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Filterable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Hideable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Hideable\">\r\n            <summary>\r\n            Controls whether columns in the DataGrid can be hidden. This is overridable by each column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hideable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowColumnOptions","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ShowColumnOptions\">\r\n            <summary>\r\n            Controls whether to hide or show the column options. This is overridable by each column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowColumnOptions","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MudBlazor.Breakpoint","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Breakpoint\">\r\n            <summary>\r\n            At what breakpoint the table should switch to mobile layout. Takes None, Xs, Sm, Md, Lg and Xl the default behavior is breaking on Xs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Breakpoint","Common.GloballyQualifiedTypeName":"global::MudBlazor.Breakpoint"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Square\">\r\n            <summary>\r\n            Set true to disable rounded corners\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Outlined\">\r\n            <summary>\r\n            If true, table will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Bordered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Bordered\">\r\n            <summary>\r\n            If true, table's cells will have left/right borders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bordered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ColGroup","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ColGroup\">\r\n            <summary>\r\n            Specifies a group of one or more columns in a table for formatting.\r\n            Ex:\r\n            table\r\n                colgroup\r\n                   col span=\"2\" style=\"background-color:red\"\r\n                   col style=\"background-color:yellow\"\r\n                 colgroup\r\n                 header\r\n                 body\r\n            table\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ColGroup","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Dense\">\r\n            <summary>\r\n            Set true for rows with a narrow height\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Hover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Hover\">\r\n            <summary>\r\n            Set true to see rows hover on mouse-over.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Striped\">\r\n            <summary>\r\n            If true, striped table rows will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FixedHeader","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.FixedHeader\">\r\n            <summary>\r\n            When true, the header will stay in place when the table is scrolled. Note: set Height to make the table scrollable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixedHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FixedFooter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.FixedFooter\">\r\n            <summary>\r\n            When true, the footer will be visible is not scrolled to the bottom. Note: set Height to make the table scrollable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixedFooter","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowFilterIcons","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowFilterIcons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FilterMode","TypeName":"MudBlazor.DataGridFilterMode","IsEnum":true,"Metadata":{"Common.PropertyName":"FilterMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.DataGridFilterMode"}},{"Kind":"Components.Component","Name":"FilterCaseSensitivity","TypeName":"MudBlazor.DataGridFilterCaseSensitivity","IsEnum":true,"Metadata":{"Common.PropertyName":"FilterCaseSensitivity","Common.GloballyQualifiedTypeName":"global::MudBlazor.DataGridFilterCaseSensitivity"}},{"Kind":"Components.Component","Name":"FilterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Collections.Generic.List<MudBlazor.FilterDefinition<T>>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Collections.Generic.List<global::MudBlazor.FilterDefinition<T>>>","Common.PropertyName":"FilterTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FilterDefinitions","TypeName":"System.Collections.Generic.List<MudBlazor.FilterDefinition<T>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.FilterDefinitions\">\r\n            <summary>\r\n            The list of FilterDefinitions that have been added to the data grid. FilterDefinitions are managed by the data\r\n            grid automatically when using the built in filter UI. You can also programmatically manage these definitions\r\n            through this collection.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FilterDefinitions","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.FilterDefinition<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SortDefinitions","TypeName":"System.Collections.Generic.Dictionary<System.String, MudBlazor.SortDefinition<T>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SortDefinitions\">\r\n            <summary>\r\n            The list of SortDefinitions that have been added to the data grid. SortDefinitions are managed by the data\r\n            grid automatically when using the built in filter UI. You can also programmatically manage these definitions\r\n            through this collection.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SortDefinitions","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::MudBlazor.SortDefinition<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Virtualize","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Virtualize\">\r\n            <summary>\r\n            If true, the results are displayed in a Virtualize component, allowing a boost in rendering speed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Virtualize","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            Only used for virtualization.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"RowClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowClass\">\r\n            <summary>\r\n            CSS class for the table rows. Note, many CSS settings are overridden by MudTd though\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RowStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowStyle\">\r\n            <summary>\r\n            CSS styles for the table rows. Note, many CSS settings are overridden by MudTd though\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RowClassFunc","TypeName":"System.Func<T, System.Int32, System.String>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowClassFunc\">\r\n            <summary>\r\n            Returns the class that will get joined with RowClass. Takes the current item and row index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Int32, global::System.String>","Common.PropertyName":"RowClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"RowStyleFunc","TypeName":"System.Func<T, System.Int32, System.String>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowStyleFunc\">\r\n            <summary>\r\n            Returns the class that will get joined with RowClass. Takes the current item and row index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Int32, global::System.String>","Common.PropertyName":"RowStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"MultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.MultiSelection\">\r\n            <summary>\r\n            Set to true to enable selection of multiple rows.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EditMode","TypeName":"MudBlazor.DataGridEditMode?","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.EditMode\">\r\n            <summary>\r\n            When the grid is not read only, you can specify what type of editing mode to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.DataGridEditMode?"}},{"Kind":"Components.Component","Name":"EditTrigger","TypeName":"MudBlazor.DataGridEditTrigger?","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.EditTrigger\">\r\n            <summary>\r\n            Allows you to specify the action that will trigger an edit when the EditMode is Form.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditTrigger","Common.GloballyQualifiedTypeName":"global::MudBlazor.DataGridEditTrigger?"}},{"Kind":"Components.Component","Name":"EditDialogOptions","TypeName":"MudBlazor.DialogOptions","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.EditDialogOptions\">\r\n            <summary>\r\n            Fine tune the edit dialog.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditDialogOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.DialogOptions"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Items\">\r\n             <summary>\r\n             The data to display in the table. MudTable will render one row per item\r\n             </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Loading","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Loading\">\r\n            <summary>\r\n            Show a loading animation, if true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Loading","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CanCancelEdit","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.CanCancelEdit\">\r\n            <summary>\r\n            Define if Cancel button is present or not for inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanCancelEdit","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LoadingProgressColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.LoadingProgressColor\">\r\n            <summary>\r\n            The color of the loading progress if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingProgressColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ToolBarContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ToolBarContent\">\r\n            <summary>\r\n            Optional. Add any kind of toolbar to this render fragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HorizontalScrollbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.HorizontalScrollbar\">\r\n            <summary>\r\n            Defines if the table has a horizontal scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HorizontalScrollbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ColumnResizeMode","TypeName":"MudBlazor.ResizeMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ColumnResizeMode\">\r\n            <summary>\r\n            Defines if columns of the grid can be resized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ColumnResizeMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.ResizeMode"}},{"Kind":"Components.Component","Name":"HeaderClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.HeaderClass\">\r\n            <summary>\r\n            Add a class to the thead tag\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Height\">\r\n            <summary>\r\n            Setting a height will allow to scroll the table. If not set, it will try to grow in height. You can set this to any CSS value that the\r\n            attribute 'height' accepts, i.e. 500px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.FooterClass\">\r\n            <summary>\r\n            Add a class to the tfoot tag\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"QuickFilter","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.QuickFilter\">\r\n            <summary>\r\n            A function that returns whether or not an item should be displayed in the table. You can use this to implement your own search function.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"QuickFilter","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Header\">\r\n            <summary>\r\n            Allows adding a custom header beyond that specified in the Column component. Add HeaderCell\r\n            components to add a custom header.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Header","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Columns\">\r\n            <summary>\r\n            The Columns that make up the data grid. Add Column components to this RenderFragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Columns","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Culture\">\r\n            <summary>\r\n            The culture used to represent numeric columns and his filtering input fields.\r\n            Each column can override this DataGrid Culture.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"ChildRowContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.CellContext<T>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ChildRowContent\">\r\n            <summary>\r\n            Row Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.CellContext<T>>","Common.PropertyName":"ChildRowContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.NoRecordsContent\">\r\n            <summary>\r\n            Defines the table body content when there are no matching records found\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoRecordsContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadingContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.LoadingContent\">\r\n            <summary>\r\n            Defines the table body content  the table has no rows and is loading\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PagerContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.PagerContent\">\r\n            <summary>\r\n            Add MudTablePager here to enable breaking the rows in to multiple pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PagerContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ServerData","TypeName":"System.Func<MudBlazor.GridState<T>, System.Threading.Tasks.Task<MudBlazor.GridData<T>>>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ServerData\">\r\n            <summary>\r\n            Supply an async function which (re)loads filtered, paginated and sorted data from server.\r\n            Table will await this func and update based on the returned TableData.\r\n            Used only with ServerData\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::MudBlazor.GridState<T>, global::System.Threading.Tasks.Task<global::MudBlazor.GridData<T>>>","Common.PropertyName":"ServerData","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"RowsPerPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.RowsPerPage\">\r\n            <summary>\r\n            If the table has more items than this number, it will break the rows into pages of said size.\r\n            Note: requires a MudTablePager in PagerContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowsPerPage","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CurrentPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.CurrentPage\">\r\n            <summary>\r\n            The page index of the currently displayed page (Zero based). Usually called by MudTablePager.\r\n            Note: requires a MudTablePager in PagerContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CurrentPage","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ReadOnly\">\r\n            <summary>\r\n            Locks Inline Edit mode, if true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectedItems","TypeName":"System.Collections.Generic.HashSet<T>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SelectedItems\">\r\n            <summary>\r\n            If MultiSelection is true, this returns the currently selected items. You can bind this property and the initial content of the HashSet you bind it to will cause these rows to be selected initially.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.SelectedItem\">\r\n            <summary>\r\n            Returns the item which was last clicked on in single selection mode (that is, if MultiSelection is false)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItem","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Groupable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Groupable\">\r\n            <summary>\r\n            Determines whether grouping of columns is allowed in the data grid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Groupable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"GroupExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.GroupExpanded\">\r\n            <summary>\r\n            If set, a grouped column will be expanded by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"GroupClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.GroupClass\">\r\n            <summary>\r\n            CSS class for the groups.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.GroupStyle\">\r\n            <summary>\r\n            CSS styles for the groups.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupClassFunc","TypeName":"System.Func<MudBlazor.GroupDefinition<T>, System.String>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.GroupClassFunc\">\r\n            <summary>\r\n            Returns the class that will get joined with GroupClass.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::MudBlazor.GroupDefinition<T>, global::System.String>","Common.PropertyName":"GroupClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"GroupStyleFunc","TypeName":"System.Func<MudBlazor.GroupDefinition<T>, System.String>","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.GroupStyleFunc\">\r\n            <summary>\r\n            Returns the class that will get joined with GroupStyle.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::MudBlazor.GroupDefinition<T>, global::System.String>","Common.PropertyName":"GroupStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"ShowMenuIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ShowMenuIcon\">\r\n            <summary>\r\n            When true, displays the built-in menu icon in the header of the data grid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowMenuIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":132039783,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.ColGroup","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ColGroup\">\r\n            <summary>\r\n            Specifies a group of one or more columns in a table for formatting.\r\n            Ex:\r\n            table\r\n                colgroup\r\n                   col span=\"2\" style=\"background-color:red\"\r\n                   col style=\"background-color:yellow\"\r\n                 colgroup\r\n                 header\r\n                 body\r\n            table\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColGroup","ParentTag":"MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.ColGroup","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1383848200,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.ColGroup","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ColGroup\">\r\n            <summary>\r\n            Specifies a group of one or more columns in a table for formatting.\r\n            Ex:\r\n            table\r\n                colgroup\r\n                   col span=\"2\" style=\"background-color:red\"\r\n                   col style=\"background-color:yellow\"\r\n                 colgroup\r\n                 header\r\n                 body\r\n            table\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColGroup","ParentTag":"MudBlazor.MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.ColGroup","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":60555257,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.FilterTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterTemplate","ParentTag":"MudDataGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["FilterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.FilterTemplate","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-732773591,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.FilterTemplate","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterTemplate","ParentTag":"MudBlazor.MudDataGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["FilterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.FilterTemplate","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":80440930,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.ToolBarContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ToolBarContent\">\r\n            <summary>\r\n            Optional. Add any kind of toolbar to this render fragment.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToolBarContent","ParentTag":"MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.ToolBarContent","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1417526212,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.ToolBarContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ToolBarContent\">\r\n            <summary>\r\n            Optional. Add any kind of toolbar to this render fragment.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToolBarContent","ParentTag":"MudBlazor.MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.ToolBarContent","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":30833685,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.Header","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Header\">\r\n            <summary>\r\n            Allows adding a custom header beyond that specified in the Column component. Add HeaderCell\r\n            components to add a custom header.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.Header","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1760776605,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.Header","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Header\">\r\n            <summary>\r\n            Allows adding a custom header beyond that specified in the Column component. Add HeaderCell\r\n            components to add a custom header.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"MudBlazor.MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.Header","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1681579787,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.Columns","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Columns\">\r\n            <summary>\r\n            The Columns that make up the data grid. Add Column components to this RenderFragment.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Columns","ParentTag":"MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.Columns","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-998877531,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.Columns","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.Columns\">\r\n            <summary>\r\n            The Columns that make up the data grid. Add Column components to this RenderFragment.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Columns","ParentTag":"MudBlazor.MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.Columns","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1155278014,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.ChildRowContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ChildRowContent\">\r\n            <summary>\r\n            Row Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildRowContent","ParentTag":"MudDataGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildRowContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.ChildRowContent","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1605227981,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.ChildRowContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.ChildRowContent\">\r\n            <summary>\r\n            Row Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildRowContent","ParentTag":"MudBlazor.MudDataGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildRowContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.ChildRowContent","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-33958998,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.NoRecordsContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.NoRecordsContent\">\r\n            <summary>\r\n            Defines the table body content when there are no matching records found\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsContent","ParentTag":"MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.NoRecordsContent","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1028264001,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.NoRecordsContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.NoRecordsContent\">\r\n            <summary>\r\n            Defines the table body content when there are no matching records found\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsContent","ParentTag":"MudBlazor.MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.NoRecordsContent","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-713410339,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.LoadingContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.LoadingContent\">\r\n            <summary>\r\n            Defines the table body content  the table has no rows and is loading\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoadingContent","ParentTag":"MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.LoadingContent","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1809414262,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.LoadingContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.LoadingContent\">\r\n            <summary>\r\n            Defines the table body content  the table has no rows and is loading\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoadingContent","ParentTag":"MudBlazor.MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.LoadingContent","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1918434972,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.PagerContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.PagerContent\">\r\n            <summary>\r\n            Add MudTablePager here to enable breaking the rows in to multiple pages.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PagerContent","ParentTag":"MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.PagerContent","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1421643581,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDataGrid<T>.PagerContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDataGrid`1.PagerContent\">\r\n            <summary>\r\n            Add MudTablePager here to enable breaking the rows in to multiple pages.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PagerContent","ParentTag":"MudBlazor.MudDataGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>.PagerContent","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-117418848,"Kind":"Components.Component","Name":"MudBlazor.MudDataGridPager<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDataGridPager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudDataGridPager<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DisableRowsPerPage","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGridPager`1.DisableRowsPerPage\">\r\n            <summary>\r\n            Set true to hide the part of the pager which allows to change the page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRowsPerPage","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGridPager`1.Disabled\">\r\n            <summary>\r\n            Set true to disable user interaction with the backward/forward buttons\r\n            and the part of the pager which allows to change the page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Int32[]","Documentation":"<member name=\"P:MudBlazor.MudDataGridPager`1.PageSizeOptions\">\r\n            <summary>\r\n            Define a list of available page size options for the user to choose from\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PageSizeOptions","Common.GloballyQualifiedTypeName":"global::System.Int32[]"}},{"Kind":"Components.Component","Name":"InfoFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGridPager`1.InfoFormat\">\r\n            <summary>\r\n            Format string for the display of the current page, which you can localize to your language. Available variables are:\r\n            {first_item}, {last_item} and {all_items} which will replaced with the indices of the page's first and last item, as well as the total number of items.\r\n            Default: \"{first_item}-{last_item} of {all_items}\" which is transformed into \"0-25 of 77\". \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InfoFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RowsPerPageString","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGridPager`1.RowsPerPageString\">\r\n            <summary>\r\n            The localizable \"Rows per page:\" text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowsPerPageString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGridPager<T>","Common.TypeNameIdentifier":"MudDataGridPager","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1674276572,"Kind":"Components.Component","Name":"MudBlazor.MudDataGridPager<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDataGridPager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudDataGridPager<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DisableRowsPerPage","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGridPager`1.DisableRowsPerPage\">\r\n            <summary>\r\n            Set true to hide the part of the pager which allows to change the page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRowsPerPage","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDataGridPager`1.Disabled\">\r\n            <summary>\r\n            Set true to disable user interaction with the backward/forward buttons\r\n            and the part of the pager which allows to change the page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Int32[]","Documentation":"<member name=\"P:MudBlazor.MudDataGridPager`1.PageSizeOptions\">\r\n            <summary>\r\n            Define a list of available page size options for the user to choose from\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PageSizeOptions","Common.GloballyQualifiedTypeName":"global::System.Int32[]"}},{"Kind":"Components.Component","Name":"InfoFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGridPager`1.InfoFormat\">\r\n            <summary>\r\n            Format string for the display of the current page, which you can localize to your language. Available variables are:\r\n            {first_item}, {last_item} and {all_items} which will replaced with the indices of the page's first and last item, as well as the total number of items.\r\n            Default: \"{first_item}-{last_item} of {all_items}\" which is transformed into \"0-25 of 77\". \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InfoFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RowsPerPageString","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDataGridPager`1.RowsPerPageString\">\r\n            <summary>\r\n            The localizable \"Rows per page:\" text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowsPerPageString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGridPager<T>","Common.TypeNameIdentifier":"MudDataGridPager","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-226225215,"Kind":"Components.Component","Name":"MudBlazor.Row","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Row"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Row","Common.TypeNameIdentifier":"Row","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":835552481,"Kind":"Components.Component","Name":"MudBlazor.Row","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Row"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Row","Common.TypeNameIdentifier":"Row","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1598766808,"Kind":"Components.ChildContent","Name":"MudBlazor.Row.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Row"}],"Metadata":{"Common.TypeName":"MudBlazor.Row.ChildContent","Common.TypeNameIdentifier":"Row","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":387996676,"Kind":"Components.ChildContent","Name":"MudBlazor.Row.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.Row"}],"Metadata":{"Common.TypeName":"MudBlazor.Row.ChildContent","Common.TypeNameIdentifier":"Row","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1887206913,"Kind":"Components.Component","Name":"MudBlazor.MudDatePicker","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDatePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:MudBlazor.MudDatePicker.DateChanged\">\r\n            <summary>\r\n            Fired when the DateFormat changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTime?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Date","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudDatePicker.Date\">\r\n            <summary>\r\n            The currently selected date (two-way bindable). If null, then nothing was selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Date","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MaxDate\">\r\n            <summary>\r\n            Max selectable date.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MinDate\">\r\n            <summary>\r\n            Min selectable date.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"OpenTo","TypeName":"MudBlazor.OpenTo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.OpenTo\">\r\n            <summary>\r\n            First view to show in the MudDatePicker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenTo","Common.GloballyQualifiedTypeName":"global::MudBlazor.OpenTo"}},{"Kind":"Components.Component","Name":"DateFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.DateFormat\">\r\n            <summary>\r\n            String Format for selected date view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FirstDayOfWeek","TypeName":"System.DayOfWeek?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FirstDayOfWeek\">\r\n            <summary>\r\n            Defines on which day the week starts. Depends on the value of Culture. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FirstDayOfWeek","Common.GloballyQualifiedTypeName":"global::System.DayOfWeek?"}},{"Kind":"Components.Component","Name":"PickerMonth","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PickerMonth\">\r\n            <summary>\r\n            The current month of the date picker (two-way bindable). This changes when the user browses through the calender.\r\n            The month is represented as a DateTime which is always the first day of that month. You can also set this to define which month is initially shown. If not set, the current month is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"PickerMonthChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PickerMonthChanged\">\r\n            <summary>\r\n            Fired when the date changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerMonthChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTime?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClosingDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.ClosingDelay\">\r\n            <summary>\r\n            Sets the amount of time in milliseconds to wait before closing the picker. This helps the user see that the date was selected before the popover disappears.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClosingDelay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"DisplayMonths","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.DisplayMonths\">\r\n            <summary>\r\n            Number of months to display in the calendar\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayMonths","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MaxMonthColumns","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MaxMonthColumns\">\r\n            <summary>\r\n            Maximum number of months in one row\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxMonthColumns","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"StartMonth","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.StartMonth\">\r\n            <summary>\r\n            Start month when opening the picker. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StartMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"ShowWeekNumbers","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.ShowWeekNumbers\">\r\n            <summary>\r\n            Display week numbers according to the Culture parameter. If no culture is defined, CultureInfo.CurrentCulture will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowWeekNumbers","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TitleDateFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.TitleDateFormat\">\r\n            <summary>\r\n            Format of the selected date in the title. By default, this is \"ddd, dd MMM\" which abbreviates day and month names. \r\n            For instance, display the long names like this \"dddd, dd. MMMM\". \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TitleDateFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.AutoClose\">\r\n            <summary>\r\n            If AutoClose is set to true and PickerActions are defined, selecting a day will close the MudDatePicker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDateDisabledFunc","TypeName":"System.Func<System.DateTime, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.IsDateDisabledFunc\">\r\n            <summary>\r\n            Function to determine whether a date is disabled\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.DateTime, global::System.Boolean>","Common.PropertyName":"IsDateDisabledFunc","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"AdditionalDateClassesFunc","TypeName":"System.Func<System.DateTime, System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.AdditionalDateClassesFunc\">\r\n            <summary>\r\n            Function to conditionally apply new classes to specific days\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.DateTime, global::System.String>","Common.PropertyName":"AdditionalDateClassesFunc","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"PreviousIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PreviousIcon\">\r\n            <summary>\r\n            Custom previous icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreviousIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.NextIcon\">\r\n            <summary>\r\n            Custom next icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FixYear","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixYear\">\r\n            <summary>\r\n            Set a predefined fix year - no year can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixYear","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"FixMonth","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixMonth\">\r\n            <summary>\r\n            Set a predefined fix month - no month can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixMonth","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"FixDay","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixDay\">\r\n            <summary>\r\n            Set a predefined fix day - no day can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixDay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            Sets the aria-label of the input text field icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerOpened","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerOpened\">\r\n            <summary>\r\n            Fired when the dropdown / dialog opens\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerOpened","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PickerClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerClosed\">\r\n            <summary>\r\n            Fired when the dropdown / dialog closes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0 this is set to true automatically in static mode but can be overridden with Rounded bool.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ReadOnly\">\r\n            <summary>\r\n            If true, no date or time can be defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to theme default when in Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperText\">\r\n            <summary>\r\n            If string has value, HelperText will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Disabled\">\r\n            <summary>\r\n            If true, the picker will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Editable\">\r\n            <summary>\r\n            If true, the picker will be editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.DisableToolbar\">\r\n            <summary>\r\n            Hide toolbar and show only date/time views.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ToolBarClass\">\r\n            <summary>\r\n            User class names for picker's ToolBar, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerVariant","TypeName":"MudBlazor.PickerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerVariant\">\r\n            <summary>\r\n            Picker container option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.PickerVariant"}},{"Kind":"Components.Component","Name":"InputVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputVariant\">\r\n            <summary>\r\n             Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Variant\">\r\n            <summary>\r\n            Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Adornment\">\r\n            <summary>\r\n            Sets if the icon will be att start or end, set to false to disable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Orientation\">\r\n            <summary>\r\n            What orientation to render in when in PickerVariant Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Color\">\r\n            <summary>\r\n            The color of the toolbar, selected and active. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AllowKeyboardInput","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AllowKeyboardInput\">\r\n            <summary>\r\n            Changes the cursor appearance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowKeyboardInput","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Text\">\r\n            <summary>\r\n            The currently selected string value (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudPicker<System.DateTime?>>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudPicker<global::System.DateTime?>>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Mask\">\r\n            <summary>\r\n            A mask for structured input of the date (requires Editable to be true).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AnchorOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's anchor. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TransformOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's transform. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.DateTime?, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.DateTime?, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.DateTime?>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.DateTime?>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDatePicker","Common.TypeNameIdentifier":"MudDatePicker","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-204371196,"Kind":"Components.Component","Name":"MudBlazor.MudDatePicker","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDatePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:MudBlazor.MudDatePicker.DateChanged\">\r\n            <summary>\r\n            Fired when the DateFormat changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTime?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Date","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudDatePicker.Date\">\r\n            <summary>\r\n            The currently selected date (two-way bindable). If null, then nothing was selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Date","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MaxDate\">\r\n            <summary>\r\n            Max selectable date.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MinDate\">\r\n            <summary>\r\n            Min selectable date.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"OpenTo","TypeName":"MudBlazor.OpenTo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.OpenTo\">\r\n            <summary>\r\n            First view to show in the MudDatePicker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenTo","Common.GloballyQualifiedTypeName":"global::MudBlazor.OpenTo"}},{"Kind":"Components.Component","Name":"DateFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.DateFormat\">\r\n            <summary>\r\n            String Format for selected date view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FirstDayOfWeek","TypeName":"System.DayOfWeek?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FirstDayOfWeek\">\r\n            <summary>\r\n            Defines on which day the week starts. Depends on the value of Culture. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FirstDayOfWeek","Common.GloballyQualifiedTypeName":"global::System.DayOfWeek?"}},{"Kind":"Components.Component","Name":"PickerMonth","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PickerMonth\">\r\n            <summary>\r\n            The current month of the date picker (two-way bindable). This changes when the user browses through the calender.\r\n            The month is represented as a DateTime which is always the first day of that month. You can also set this to define which month is initially shown. If not set, the current month is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"PickerMonthChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PickerMonthChanged\">\r\n            <summary>\r\n            Fired when the date changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerMonthChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTime?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClosingDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.ClosingDelay\">\r\n            <summary>\r\n            Sets the amount of time in milliseconds to wait before closing the picker. This helps the user see that the date was selected before the popover disappears.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClosingDelay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"DisplayMonths","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.DisplayMonths\">\r\n            <summary>\r\n            Number of months to display in the calendar\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayMonths","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MaxMonthColumns","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MaxMonthColumns\">\r\n            <summary>\r\n            Maximum number of months in one row\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxMonthColumns","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"StartMonth","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.StartMonth\">\r\n            <summary>\r\n            Start month when opening the picker. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StartMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"ShowWeekNumbers","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.ShowWeekNumbers\">\r\n            <summary>\r\n            Display week numbers according to the Culture parameter. If no culture is defined, CultureInfo.CurrentCulture will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowWeekNumbers","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TitleDateFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.TitleDateFormat\">\r\n            <summary>\r\n            Format of the selected date in the title. By default, this is \"ddd, dd MMM\" which abbreviates day and month names. \r\n            For instance, display the long names like this \"dddd, dd. MMMM\". \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TitleDateFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.AutoClose\">\r\n            <summary>\r\n            If AutoClose is set to true and PickerActions are defined, selecting a day will close the MudDatePicker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDateDisabledFunc","TypeName":"System.Func<System.DateTime, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.IsDateDisabledFunc\">\r\n            <summary>\r\n            Function to determine whether a date is disabled\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.DateTime, global::System.Boolean>","Common.PropertyName":"IsDateDisabledFunc","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"AdditionalDateClassesFunc","TypeName":"System.Func<System.DateTime, System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.AdditionalDateClassesFunc\">\r\n            <summary>\r\n            Function to conditionally apply new classes to specific days\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.DateTime, global::System.String>","Common.PropertyName":"AdditionalDateClassesFunc","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"PreviousIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PreviousIcon\">\r\n            <summary>\r\n            Custom previous icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreviousIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.NextIcon\">\r\n            <summary>\r\n            Custom next icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FixYear","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixYear\">\r\n            <summary>\r\n            Set a predefined fix year - no year can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixYear","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"FixMonth","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixMonth\">\r\n            <summary>\r\n            Set a predefined fix month - no month can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixMonth","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"FixDay","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixDay\">\r\n            <summary>\r\n            Set a predefined fix day - no day can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixDay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            Sets the aria-label of the input text field icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerOpened","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerOpened\">\r\n            <summary>\r\n            Fired when the dropdown / dialog opens\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerOpened","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PickerClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerClosed\">\r\n            <summary>\r\n            Fired when the dropdown / dialog closes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0 this is set to true automatically in static mode but can be overridden with Rounded bool.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ReadOnly\">\r\n            <summary>\r\n            If true, no date or time can be defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to theme default when in Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperText\">\r\n            <summary>\r\n            If string has value, HelperText will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Disabled\">\r\n            <summary>\r\n            If true, the picker will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Editable\">\r\n            <summary>\r\n            If true, the picker will be editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.DisableToolbar\">\r\n            <summary>\r\n            Hide toolbar and show only date/time views.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ToolBarClass\">\r\n            <summary>\r\n            User class names for picker's ToolBar, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerVariant","TypeName":"MudBlazor.PickerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerVariant\">\r\n            <summary>\r\n            Picker container option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.PickerVariant"}},{"Kind":"Components.Component","Name":"InputVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputVariant\">\r\n            <summary>\r\n             Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Variant\">\r\n            <summary>\r\n            Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Adornment\">\r\n            <summary>\r\n            Sets if the icon will be att start or end, set to false to disable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Orientation\">\r\n            <summary>\r\n            What orientation to render in when in PickerVariant Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Color\">\r\n            <summary>\r\n            The color of the toolbar, selected and active. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AllowKeyboardInput","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AllowKeyboardInput\">\r\n            <summary>\r\n            Changes the cursor appearance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowKeyboardInput","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Text\">\r\n            <summary>\r\n            The currently selected string value (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudPicker<System.DateTime?>>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudPicker<global::System.DateTime?>>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Mask\">\r\n            <summary>\r\n            A mask for structured input of the date (requires Editable to be true).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AnchorOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's anchor. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TransformOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's transform. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.DateTime?, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.DateTime?, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.DateTime?>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.DateTime?>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDatePicker","Common.TypeNameIdentifier":"MudDatePicker","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":929788100,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDatePicker.PickerActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PickerActions","ParentTag":"MudDatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PickerActions"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDatePicker.PickerActions","Common.TypeNameIdentifier":"MudDatePicker","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1716245874,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDatePicker.PickerActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PickerActions","ParentTag":"MudBlazor.MudDatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PickerActions"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDatePicker.PickerActions","Common.TypeNameIdentifier":"MudDatePicker","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1774148372,"Kind":"Components.Component","Name":"MudBlazor.MudDateRangePicker","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDateRangePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DateRangeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.DateRange>","Documentation":"<member name=\"P:MudBlazor.MudDateRangePicker.DateRangeChanged\">\r\n            <summary>\r\n            Fired when the DateFormat changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateRangeChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.DateRange>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DateRange","TypeName":"MudBlazor.DateRange","Documentation":"<member name=\"P:MudBlazor.MudDateRangePicker.DateRange\">\r\n            <summary>\r\n            The currently selected range (two-way bindable). If null, then nothing was selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateRange","Common.GloballyQualifiedTypeName":"global::MudBlazor.DateRange"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MaxDate\">\r\n            <summary>\r\n            Max selectable date.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MinDate\">\r\n            <summary>\r\n            Min selectable date.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"OpenTo","TypeName":"MudBlazor.OpenTo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.OpenTo\">\r\n            <summary>\r\n            First view to show in the MudDatePicker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenTo","Common.GloballyQualifiedTypeName":"global::MudBlazor.OpenTo"}},{"Kind":"Components.Component","Name":"DateFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.DateFormat\">\r\n            <summary>\r\n            String Format for selected date view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FirstDayOfWeek","TypeName":"System.DayOfWeek?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FirstDayOfWeek\">\r\n            <summary>\r\n            Defines on which day the week starts. Depends on the value of Culture. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FirstDayOfWeek","Common.GloballyQualifiedTypeName":"global::System.DayOfWeek?"}},{"Kind":"Components.Component","Name":"PickerMonth","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PickerMonth\">\r\n            <summary>\r\n            The current month of the date picker (two-way bindable). This changes when the user browses through the calender.\r\n            The month is represented as a DateTime which is always the first day of that month. You can also set this to define which month is initially shown. If not set, the current month is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"PickerMonthChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PickerMonthChanged\">\r\n            <summary>\r\n            Fired when the date changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerMonthChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTime?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClosingDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.ClosingDelay\">\r\n            <summary>\r\n            Sets the amount of time in milliseconds to wait before closing the picker. This helps the user see that the date was selected before the popover disappears.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClosingDelay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"DisplayMonths","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.DisplayMonths\">\r\n            <summary>\r\n            Number of months to display in the calendar\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayMonths","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MaxMonthColumns","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MaxMonthColumns\">\r\n            <summary>\r\n            Maximum number of months in one row\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxMonthColumns","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"StartMonth","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.StartMonth\">\r\n            <summary>\r\n            Start month when opening the picker. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StartMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"ShowWeekNumbers","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.ShowWeekNumbers\">\r\n            <summary>\r\n            Display week numbers according to the Culture parameter. If no culture is defined, CultureInfo.CurrentCulture will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowWeekNumbers","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TitleDateFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.TitleDateFormat\">\r\n            <summary>\r\n            Format of the selected date in the title. By default, this is \"ddd, dd MMM\" which abbreviates day and month names. \r\n            For instance, display the long names like this \"dddd, dd. MMMM\". \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TitleDateFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.AutoClose\">\r\n            <summary>\r\n            If AutoClose is set to true and PickerActions are defined, selecting a day will close the MudDatePicker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDateDisabledFunc","TypeName":"System.Func<System.DateTime, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.IsDateDisabledFunc\">\r\n            <summary>\r\n            Function to determine whether a date is disabled\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.DateTime, global::System.Boolean>","Common.PropertyName":"IsDateDisabledFunc","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"AdditionalDateClassesFunc","TypeName":"System.Func<System.DateTime, System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.AdditionalDateClassesFunc\">\r\n            <summary>\r\n            Function to conditionally apply new classes to specific days\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.DateTime, global::System.String>","Common.PropertyName":"AdditionalDateClassesFunc","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"PreviousIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PreviousIcon\">\r\n            <summary>\r\n            Custom previous icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreviousIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.NextIcon\">\r\n            <summary>\r\n            Custom next icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FixYear","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixYear\">\r\n            <summary>\r\n            Set a predefined fix year - no year can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixYear","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"FixMonth","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixMonth\">\r\n            <summary>\r\n            Set a predefined fix month - no month can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixMonth","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"FixDay","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixDay\">\r\n            <summary>\r\n            Set a predefined fix day - no day can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixDay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            Sets the aria-label of the input text field icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerOpened","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerOpened\">\r\n            <summary>\r\n            Fired when the dropdown / dialog opens\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerOpened","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PickerClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerClosed\">\r\n            <summary>\r\n            Fired when the dropdown / dialog closes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0 this is set to true automatically in static mode but can be overridden with Rounded bool.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ReadOnly\">\r\n            <summary>\r\n            If true, no date or time can be defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to theme default when in Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperText\">\r\n            <summary>\r\n            If string has value, HelperText will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Disabled\">\r\n            <summary>\r\n            If true, the picker will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Editable\">\r\n            <summary>\r\n            If true, the picker will be editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.DisableToolbar\">\r\n            <summary>\r\n            Hide toolbar and show only date/time views.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ToolBarClass\">\r\n            <summary>\r\n            User class names for picker's ToolBar, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerVariant","TypeName":"MudBlazor.PickerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerVariant\">\r\n            <summary>\r\n            Picker container option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.PickerVariant"}},{"Kind":"Components.Component","Name":"InputVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputVariant\">\r\n            <summary>\r\n             Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Variant\">\r\n            <summary>\r\n            Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Adornment\">\r\n            <summary>\r\n            Sets if the icon will be att start or end, set to false to disable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Orientation\">\r\n            <summary>\r\n            What orientation to render in when in PickerVariant Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Color\">\r\n            <summary>\r\n            The color of the toolbar, selected and active. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AllowKeyboardInput","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AllowKeyboardInput\">\r\n            <summary>\r\n            Changes the cursor appearance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowKeyboardInput","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Text\">\r\n            <summary>\r\n            The currently selected string value (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudPicker<System.DateTime?>>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudPicker<global::System.DateTime?>>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Mask\">\r\n            <summary>\r\n            A mask for structured input of the date (requires Editable to be true).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AnchorOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's anchor. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TransformOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's transform. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.DateTime?, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.DateTime?, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.DateTime?>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.DateTime?>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDateRangePicker","Common.TypeNameIdentifier":"MudDateRangePicker","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1069714234,"Kind":"Components.Component","Name":"MudBlazor.MudDateRangePicker","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDateRangePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DateRangeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.DateRange>","Documentation":"<member name=\"P:MudBlazor.MudDateRangePicker.DateRangeChanged\">\r\n            <summary>\r\n            Fired when the DateFormat changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateRangeChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.DateRange>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DateRange","TypeName":"MudBlazor.DateRange","Documentation":"<member name=\"P:MudBlazor.MudDateRangePicker.DateRange\">\r\n            <summary>\r\n            The currently selected range (two-way bindable). If null, then nothing was selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateRange","Common.GloballyQualifiedTypeName":"global::MudBlazor.DateRange"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MaxDate\">\r\n            <summary>\r\n            Max selectable date.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MinDate\">\r\n            <summary>\r\n            Min selectable date.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"OpenTo","TypeName":"MudBlazor.OpenTo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.OpenTo\">\r\n            <summary>\r\n            First view to show in the MudDatePicker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenTo","Common.GloballyQualifiedTypeName":"global::MudBlazor.OpenTo"}},{"Kind":"Components.Component","Name":"DateFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.DateFormat\">\r\n            <summary>\r\n            String Format for selected date view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FirstDayOfWeek","TypeName":"System.DayOfWeek?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FirstDayOfWeek\">\r\n            <summary>\r\n            Defines on which day the week starts. Depends on the value of Culture. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FirstDayOfWeek","Common.GloballyQualifiedTypeName":"global::System.DayOfWeek?"}},{"Kind":"Components.Component","Name":"PickerMonth","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PickerMonth\">\r\n            <summary>\r\n            The current month of the date picker (two-way bindable). This changes when the user browses through the calender.\r\n            The month is represented as a DateTime which is always the first day of that month. You can also set this to define which month is initially shown. If not set, the current month is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"PickerMonthChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PickerMonthChanged\">\r\n            <summary>\r\n            Fired when the date changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerMonthChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTime?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClosingDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.ClosingDelay\">\r\n            <summary>\r\n            Sets the amount of time in milliseconds to wait before closing the picker. This helps the user see that the date was selected before the popover disappears.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClosingDelay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"DisplayMonths","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.DisplayMonths\">\r\n            <summary>\r\n            Number of months to display in the calendar\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayMonths","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MaxMonthColumns","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.MaxMonthColumns\">\r\n            <summary>\r\n            Maximum number of months in one row\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxMonthColumns","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"StartMonth","TypeName":"System.DateTime?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.StartMonth\">\r\n            <summary>\r\n            Start month when opening the picker. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StartMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"ShowWeekNumbers","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.ShowWeekNumbers\">\r\n            <summary>\r\n            Display week numbers according to the Culture parameter. If no culture is defined, CultureInfo.CurrentCulture will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowWeekNumbers","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TitleDateFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.TitleDateFormat\">\r\n            <summary>\r\n            Format of the selected date in the title. By default, this is \"ddd, dd MMM\" which abbreviates day and month names. \r\n            For instance, display the long names like this \"dddd, dd. MMMM\". \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TitleDateFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.AutoClose\">\r\n            <summary>\r\n            If AutoClose is set to true and PickerActions are defined, selecting a day will close the MudDatePicker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDateDisabledFunc","TypeName":"System.Func<System.DateTime, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.IsDateDisabledFunc\">\r\n            <summary>\r\n            Function to determine whether a date is disabled\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.DateTime, global::System.Boolean>","Common.PropertyName":"IsDateDisabledFunc","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"AdditionalDateClassesFunc","TypeName":"System.Func<System.DateTime, System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.AdditionalDateClassesFunc\">\r\n            <summary>\r\n            Function to conditionally apply new classes to specific days\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.DateTime, global::System.String>","Common.PropertyName":"AdditionalDateClassesFunc","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"PreviousIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.PreviousIcon\">\r\n            <summary>\r\n            Custom previous icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreviousIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.NextIcon\">\r\n            <summary>\r\n            Custom next icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FixYear","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixYear\">\r\n            <summary>\r\n            Set a predefined fix year - no year can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixYear","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"FixMonth","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixMonth\">\r\n            <summary>\r\n            Set a predefined fix month - no month can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixMonth","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"FixDay","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseDatePicker.FixDay\">\r\n            <summary>\r\n            Set a predefined fix day - no day can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixDay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            Sets the aria-label of the input text field icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerOpened","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerOpened\">\r\n            <summary>\r\n            Fired when the dropdown / dialog opens\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerOpened","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PickerClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerClosed\">\r\n            <summary>\r\n            Fired when the dropdown / dialog closes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0 this is set to true automatically in static mode but can be overridden with Rounded bool.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ReadOnly\">\r\n            <summary>\r\n            If true, no date or time can be defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to theme default when in Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperText\">\r\n            <summary>\r\n            If string has value, HelperText will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Disabled\">\r\n            <summary>\r\n            If true, the picker will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Editable\">\r\n            <summary>\r\n            If true, the picker will be editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.DisableToolbar\">\r\n            <summary>\r\n            Hide toolbar and show only date/time views.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ToolBarClass\">\r\n            <summary>\r\n            User class names for picker's ToolBar, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerVariant","TypeName":"MudBlazor.PickerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerVariant\">\r\n            <summary>\r\n            Picker container option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.PickerVariant"}},{"Kind":"Components.Component","Name":"InputVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputVariant\">\r\n            <summary>\r\n             Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Variant\">\r\n            <summary>\r\n            Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Adornment\">\r\n            <summary>\r\n            Sets if the icon will be att start or end, set to false to disable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Orientation\">\r\n            <summary>\r\n            What orientation to render in when in PickerVariant Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Color\">\r\n            <summary>\r\n            The color of the toolbar, selected and active. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AllowKeyboardInput","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AllowKeyboardInput\">\r\n            <summary>\r\n            Changes the cursor appearance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowKeyboardInput","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Text\">\r\n            <summary>\r\n            The currently selected string value (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudPicker<System.DateTime?>>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudPicker<global::System.DateTime?>>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Mask\">\r\n            <summary>\r\n            A mask for structured input of the date (requires Editable to be true).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AnchorOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's anchor. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TransformOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's transform. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.DateTime?, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.DateTime?, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.DateTime?>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.DateTime?>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDateRangePicker","Common.TypeNameIdentifier":"MudDateRangePicker","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":2120962018,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDateRangePicker.PickerActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PickerActions","ParentTag":"MudDateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PickerActions"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDateRangePicker.PickerActions","Common.TypeNameIdentifier":"MudDateRangePicker","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-63167812,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDateRangePicker.PickerActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PickerActions","ParentTag":"MudBlazor.MudDateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PickerActions"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDateRangePicker.PickerActions","Common.TypeNameIdentifier":"MudDateRangePicker","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-248212312,"Kind":"Components.Component","Name":"MudBlazor.MudDialog","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TitleContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDialog.TitleContent\">\r\n            <summary>\r\n            Define the dialog title as a renderfragment (overrides Title)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TitleContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DialogContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDialog.DialogContent\">\r\n            <summary>\r\n            Define the dialog body here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DialogContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DialogActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDialog.DialogActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DialogActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Options","TypeName":"MudBlazor.DialogOptions","Documentation":"<member name=\"P:MudBlazor.MudDialog.Options\">\r\n            <summary>\r\n            Default options to pass to Show(), if none are explicitly provided.\r\n            Typically useful on inline dialogs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Options","Common.GloballyQualifiedTypeName":"global::MudBlazor.DialogOptions"}},{"Kind":"Components.Component","Name":"OnBackdropClick","TypeName":"System.Action","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action","Common.PropertyName":"OnBackdropClick","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"DisableSidePadding","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDialog.DisableSidePadding\">\r\n            <summary>\r\n            No padding at the sides\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableSidePadding","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ClassContent","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDialog.ClassContent\">\r\n            <summary>\r\n            CSS class that will be applied to the dialog content\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassContent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDialog.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDialog.ContentStyle\">\r\n            <summary>\r\n            CSS styles to be applied to the dialog content\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ContentStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDialog.IsVisible\">\r\n            <summary>\r\n            Bind this two-way to show and close an inlined dialog. Has no effect on opened dialogs\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsVisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDialog.IsVisibleChanged\">\r\n            <summary>\r\n            Raised when the inline dialog's display status changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisibleChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DefaultFocus","TypeName":"MudBlazor.DefaultFocus","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDialog.DefaultFocus\">\r\n            <summary>\r\n            Define the dialog title as a renderfragment (overrides Title)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultFocus","Common.GloballyQualifiedTypeName":"global::MudBlazor.DefaultFocus"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialog","Common.TypeNameIdentifier":"MudDialog","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1464173681,"Kind":"Components.Component","Name":"MudBlazor.MudDialog","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TitleContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDialog.TitleContent\">\r\n            <summary>\r\n            Define the dialog title as a renderfragment (overrides Title)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TitleContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DialogContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDialog.DialogContent\">\r\n            <summary>\r\n            Define the dialog body here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DialogContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DialogActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDialog.DialogActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DialogActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Options","TypeName":"MudBlazor.DialogOptions","Documentation":"<member name=\"P:MudBlazor.MudDialog.Options\">\r\n            <summary>\r\n            Default options to pass to Show(), if none are explicitly provided.\r\n            Typically useful on inline dialogs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Options","Common.GloballyQualifiedTypeName":"global::MudBlazor.DialogOptions"}},{"Kind":"Components.Component","Name":"OnBackdropClick","TypeName":"System.Action","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action","Common.PropertyName":"OnBackdropClick","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"DisableSidePadding","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDialog.DisableSidePadding\">\r\n            <summary>\r\n            No padding at the sides\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableSidePadding","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ClassContent","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDialog.ClassContent\">\r\n            <summary>\r\n            CSS class that will be applied to the dialog content\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassContent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDialog.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDialog.ContentStyle\">\r\n            <summary>\r\n            CSS styles to be applied to the dialog content\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ContentStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDialog.IsVisible\">\r\n            <summary>\r\n            Bind this two-way to show and close an inlined dialog. Has no effect on opened dialogs\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsVisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDialog.IsVisibleChanged\">\r\n            <summary>\r\n            Raised when the inline dialog's display status changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisibleChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DefaultFocus","TypeName":"MudBlazor.DefaultFocus","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDialog.DefaultFocus\">\r\n            <summary>\r\n            Define the dialog title as a renderfragment (overrides Title)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultFocus","Common.GloballyQualifiedTypeName":"global::MudBlazor.DefaultFocus"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialog","Common.TypeNameIdentifier":"MudDialog","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1853757782,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDialog.TitleContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDialog.TitleContent\">\r\n            <summary>\r\n            Define the dialog title as a renderfragment (overrides Title)\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleContent","ParentTag":"MudDialog"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialog.TitleContent","Common.TypeNameIdentifier":"MudDialog","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":684204339,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDialog.TitleContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDialog.TitleContent\">\r\n            <summary>\r\n            Define the dialog title as a renderfragment (overrides Title)\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleContent","ParentTag":"MudBlazor.MudDialog"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialog.TitleContent","Common.TypeNameIdentifier":"MudDialog","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":313023464,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDialog.DialogContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDialog.DialogContent\">\r\n            <summary>\r\n            Define the dialog body here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DialogContent","ParentTag":"MudDialog"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialog.DialogContent","Common.TypeNameIdentifier":"MudDialog","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1337959560,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDialog.DialogContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDialog.DialogContent\">\r\n            <summary>\r\n            Define the dialog body here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DialogContent","ParentTag":"MudBlazor.MudDialog"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialog.DialogContent","Common.TypeNameIdentifier":"MudDialog","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2137150881,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDialog.DialogActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDialog.DialogActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DialogActions","ParentTag":"MudDialog"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialog.DialogActions","Common.TypeNameIdentifier":"MudDialog","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1768510002,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDialog.DialogActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDialog.DialogActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DialogActions","ParentTag":"MudBlazor.MudDialog"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialog.DialogActions","Common.TypeNameIdentifier":"MudDialog","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":703605323,"Kind":"Components.Component","Name":"MudBlazor.MudDialogInstance","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDialogInstance"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Options","TypeName":"MudBlazor.DialogOptions","Metadata":{"Common.PropertyName":"Options","Common.GloballyQualifiedTypeName":"global::MudBlazor.DialogOptions"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"TitleContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.Guid","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.Guid"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDialogInstance.CloseIcon\">\r\n            <summary>\r\n            Custom close icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialogInstance","Common.TypeNameIdentifier":"MudDialogInstance","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":967101712,"Kind":"Components.Component","Name":"MudBlazor.MudDialogInstance","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDialogInstance"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Options","TypeName":"MudBlazor.DialogOptions","Metadata":{"Common.PropertyName":"Options","Common.GloballyQualifiedTypeName":"global::MudBlazor.DialogOptions"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"TitleContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.Guid","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.Guid"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDialogInstance.CloseIcon\">\r\n            <summary>\r\n            Custom close icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialogInstance","Common.TypeNameIdentifier":"MudDialogInstance","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1546844872,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDialogInstance.TitleContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleContent","ParentTag":"MudDialogInstance"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialogInstance.TitleContent","Common.TypeNameIdentifier":"MudDialogInstance","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2080688084,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDialogInstance.TitleContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleContent","ParentTag":"MudBlazor.MudDialogInstance"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialogInstance.TitleContent","Common.TypeNameIdentifier":"MudDialogInstance","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1005846591,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDialogInstance.Content","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"MudDialogInstance"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialogInstance.Content","Common.TypeNameIdentifier":"MudDialogInstance","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":559363291,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDialogInstance.Content","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"MudBlazor.MudDialogInstance"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialogInstance.Content","Common.TypeNameIdentifier":"MudDialogInstance","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1292011793,"Kind":"Components.Component","Name":"MudBlazor.MudDialogProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDialogProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NoHeader","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"NoHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseButton","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"CloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DisableBackdropClick","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"DisableBackdropClick","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseOnEscapeKey","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"CloseOnEscapeKey","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MudBlazor.DialogPosition?","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::MudBlazor.DialogPosition?"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"MudBlazor.MaxWidth?","Metadata":{"Common.PropertyName":"MaxWidth","Common.GloballyQualifiedTypeName":"global::MudBlazor.MaxWidth?"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialogProvider","Common.TypeNameIdentifier":"MudDialogProvider","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-635556001,"Kind":"Components.Component","Name":"MudBlazor.MudDialogProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDialogProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NoHeader","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"NoHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseButton","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"CloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DisableBackdropClick","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"DisableBackdropClick","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseOnEscapeKey","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"CloseOnEscapeKey","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MudBlazor.DialogPosition?","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::MudBlazor.DialogPosition?"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"MudBlazor.MaxWidth?","Metadata":{"Common.PropertyName":"MaxWidth","Common.GloballyQualifiedTypeName":"global::MudBlazor.MaxWidth?"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialogProvider","Common.TypeNameIdentifier":"MudDialogProvider","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-627014386,"Kind":"Components.Component","Name":"MudBlazor.MudDrawer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDrawer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawer.Fixed\">\r\n            <summary>\r\n            If true, drawer position will be fixed. (CSS position: fixed;)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudDrawer.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Anchor","TypeName":"MudBlazor.Anchor","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDrawer.Anchor\">\r\n            <summary>\r\n            Side from which the drawer will appear.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Anchor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Anchor"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDrawer.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.DrawerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDrawer.Variant\">\r\n            <summary>\r\n            Variant of the drawer. It specifies how the drawer will be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.DrawerVariant"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDrawer.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DisableOverlay","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawer.DisableOverlay\">\r\n            <summary>\r\n            Show overlay for responsive and temporary drawers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableOverlay","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PreserveOpenState","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawer.PreserveOpenState\">\r\n            <summary>\r\n            Preserve open state for responsive drawer when window resized above <see cref=\"P:MudBlazor.MudDrawer.Breakpoint\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreserveOpenState","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OpenMiniOnHover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawer.OpenMiniOnHover\">\r\n            <summary>\r\n            Open drawer automatically on mouse enter when <see cref=\"P:MudBlazor.MudDrawer.Variant\" /> parameter is set to <see cref=\"F:MudBlazor.DrawerVariant.Mini\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenMiniOnHover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MudBlazor.Breakpoint","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDrawer.Breakpoint\">\r\n            <summary>\r\n            Switching point for responsive drawers\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Breakpoint","Common.GloballyQualifiedTypeName":"global::MudBlazor.Breakpoint"}},{"Kind":"Components.Component","Name":"Open","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawer.Open\">\r\n            <summary>\r\n            Sets the opened state on the drawer. Can be used with two-way binding to close itself on navigation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Open","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"OpenChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDrawer.Width\">\r\n            <summary>\r\n            Width of left/right drawer. Only for non-fixed drawers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MiniWidth","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDrawer.MiniWidth\">\r\n            <summary>\r\n            Width of left/right drawer. Only for non-fixed drawers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MiniWidth","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDrawer.Height\">\r\n            <summary>\r\n            Height of top/bottom temporary drawer\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClipMode","TypeName":"MudBlazor.DrawerClipMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDrawer.ClipMode\">\r\n            <summary>\r\n            Specify how the drawer should behave inside a MudLayout. It affects the position relative to <b>MudAppbar</b>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClipMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.DrawerClipMode"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawer","Common.TypeNameIdentifier":"MudDrawer","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":344625638,"Kind":"Components.Component","Name":"MudBlazor.MudDrawer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDrawer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawer.Fixed\">\r\n            <summary>\r\n            If true, drawer position will be fixed. (CSS position: fixed;)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudDrawer.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Anchor","TypeName":"MudBlazor.Anchor","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDrawer.Anchor\">\r\n            <summary>\r\n            Side from which the drawer will appear.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Anchor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Anchor"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDrawer.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.DrawerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDrawer.Variant\">\r\n            <summary>\r\n            Variant of the drawer. It specifies how the drawer will be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.DrawerVariant"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDrawer.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DisableOverlay","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawer.DisableOverlay\">\r\n            <summary>\r\n            Show overlay for responsive and temporary drawers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableOverlay","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PreserveOpenState","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawer.PreserveOpenState\">\r\n            <summary>\r\n            Preserve open state for responsive drawer when window resized above <see cref=\"P:MudBlazor.MudDrawer.Breakpoint\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreserveOpenState","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OpenMiniOnHover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawer.OpenMiniOnHover\">\r\n            <summary>\r\n            Open drawer automatically on mouse enter when <see cref=\"P:MudBlazor.MudDrawer.Variant\" /> parameter is set to <see cref=\"F:MudBlazor.DrawerVariant.Mini\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenMiniOnHover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MudBlazor.Breakpoint","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDrawer.Breakpoint\">\r\n            <summary>\r\n            Switching point for responsive drawers\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Breakpoint","Common.GloballyQualifiedTypeName":"global::MudBlazor.Breakpoint"}},{"Kind":"Components.Component","Name":"Open","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawer.Open\">\r\n            <summary>\r\n            Sets the opened state on the drawer. Can be used with two-way binding to close itself on navigation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Open","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"OpenChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDrawer.Width\">\r\n            <summary>\r\n            Width of left/right drawer. Only for non-fixed drawers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MiniWidth","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDrawer.MiniWidth\">\r\n            <summary>\r\n            Width of left/right drawer. Only for non-fixed drawers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MiniWidth","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDrawer.Height\">\r\n            <summary>\r\n            Height of top/bottom temporary drawer\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClipMode","TypeName":"MudBlazor.DrawerClipMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDrawer.ClipMode\">\r\n            <summary>\r\n            Specify how the drawer should behave inside a MudLayout. It affects the position relative to <b>MudAppbar</b>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClipMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.DrawerClipMode"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawer","Common.TypeNameIdentifier":"MudDrawer","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1023062561,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDrawer.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDrawer.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudDrawer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawer.ChildContent","Common.TypeNameIdentifier":"MudDrawer","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1339050561,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDrawer.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDrawer.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudDrawer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawer.ChildContent","Common.TypeNameIdentifier":"MudDrawer","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-637156369,"Kind":"Components.Component","Name":"MudBlazor.MudDrawerContainer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDrawerContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawerContainer","Common.TypeNameIdentifier":"MudDrawerContainer","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1860103476,"Kind":"Components.Component","Name":"MudBlazor.MudDrawerContainer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDrawerContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawerContainer","Common.TypeNameIdentifier":"MudDrawerContainer","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-2091068192,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDrawerContainer.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudDrawerContainer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawerContainer.ChildContent","Common.TypeNameIdentifier":"MudDrawerContainer","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1214466701,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDrawerContainer.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudDrawerContainer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawerContainer.ChildContent","Common.TypeNameIdentifier":"MudDrawerContainer","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":180478451,"Kind":"Components.Component","Name":"MudBlazor.MudDropContainer<T>","AssemblyName":"MudBlazor","Documentation":"<member name=\"T:MudBlazor.MudDropContainer`1\">\r\n            <summary>\r\n            The container of a drag and drop zones\r\n            </summary>\r\n            <typeparam name=\"T\">Datetype of items</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDropContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudDropContainer<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ChildContent\">\r\n            <summary>\r\n            Child content of component. This should include the drop zones\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.Items\">\r\n            <summary>\r\n            The items that can be drag and dropped within the container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemRenderer","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemRenderer\">\r\n            <summary>\r\n            The render fragment (template) that should be used to render the items within a drop zone\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemRenderer","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemsSelector","TypeName":"System.Func<T, System.String, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemsSelector\">\r\n            <summary>\r\n            The method is used to determinate if an item can be dropped within a drop zone\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String, global::System.Boolean>","Common.PropertyName":"ItemsSelector","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"ItemDropped","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudItemDropInfo<T>>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemDropped\">\r\n            <summary>\r\n            Callback that indicates that an item has been dropped on a drop zone. Should be used to update the \"status\" of the data item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudItemDropInfo<T>>","Common.PropertyName":"ItemDropped","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CanDrop","TypeName":"System.Func<T, System.String, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.CanDrop\">\r\n            <summary>\r\n            The method is used to determinate if an item can be dropped within a drop zone\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String, global::System.Boolean>","Common.PropertyName":"CanDrop","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"CanDropClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.CanDropClass\">\r\n            <summary>\r\n            The CSS class(es), that is applied to drop zones that are a valid target for drag and drop transaction\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanDropClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NoDropClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.NoDropClass\">\r\n            <summary>\r\n            The CSS class(es), that is applied to drop zones that are NOT valid target for drag and drop transaction\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoDropClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ApplyDropClassesOnDragStarted","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ApplyDropClassesOnDragStarted\">\r\n            <summary>\r\n            If true, drop classes CanDropClass <see cref=\"P:MudBlazor.MudDropContainer`1.CanDropClass\" />  or NoDropClass <see cref=\"P:MudBlazor.MudDropContainer`1.NoDropClass\" /> or applied as soon, as a transaction has started\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApplyDropClassesOnDragStarted","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ItemIsDisabled","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemIsDisabled\">\r\n            <summary>\r\n            The method is used to determinate if an item should be disabled for dragging. Defaults to allow all items\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"ItemIsDisabled","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"DisabledClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.DisabledClass\">\r\n            <summary>\r\n            If a drop item is disabled (determinate by <see cref=\"P:MudBlazor.MudDropContainer`1.ItemIsDisabled\" />). This class is applied to the element\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisabledClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DraggingClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.DraggingClass\">\r\n            <summary>\r\n            An additional class that is applied to the drop zone where a drag operation started\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DraggingClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemDraggingClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemDraggingClass\">\r\n            <summary>\r\n            An additional class that is applied to an drop item, when it is dragged\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemDraggingClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropContainer<T>","Common.TypeNameIdentifier":"MudDropContainer","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":982862031,"Kind":"Components.Component","Name":"MudBlazor.MudDropContainer<T>","AssemblyName":"MudBlazor","Documentation":"<member name=\"T:MudBlazor.MudDropContainer`1\">\r\n            <summary>\r\n            The container of a drag and drop zones\r\n            </summary>\r\n            <typeparam name=\"T\">Datetype of items</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDropContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudDropContainer<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ChildContent\">\r\n            <summary>\r\n            Child content of component. This should include the drop zones\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.Items\">\r\n            <summary>\r\n            The items that can be drag and dropped within the container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemRenderer","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemRenderer\">\r\n            <summary>\r\n            The render fragment (template) that should be used to render the items within a drop zone\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemRenderer","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemsSelector","TypeName":"System.Func<T, System.String, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemsSelector\">\r\n            <summary>\r\n            The method is used to determinate if an item can be dropped within a drop zone\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String, global::System.Boolean>","Common.PropertyName":"ItemsSelector","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"ItemDropped","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudItemDropInfo<T>>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemDropped\">\r\n            <summary>\r\n            Callback that indicates that an item has been dropped on a drop zone. Should be used to update the \"status\" of the data item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudItemDropInfo<T>>","Common.PropertyName":"ItemDropped","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CanDrop","TypeName":"System.Func<T, System.String, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.CanDrop\">\r\n            <summary>\r\n            The method is used to determinate if an item can be dropped within a drop zone\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String, global::System.Boolean>","Common.PropertyName":"CanDrop","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"CanDropClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.CanDropClass\">\r\n            <summary>\r\n            The CSS class(es), that is applied to drop zones that are a valid target for drag and drop transaction\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanDropClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NoDropClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.NoDropClass\">\r\n            <summary>\r\n            The CSS class(es), that is applied to drop zones that are NOT valid target for drag and drop transaction\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoDropClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ApplyDropClassesOnDragStarted","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ApplyDropClassesOnDragStarted\">\r\n            <summary>\r\n            If true, drop classes CanDropClass <see cref=\"P:MudBlazor.MudDropContainer`1.CanDropClass\" />  or NoDropClass <see cref=\"P:MudBlazor.MudDropContainer`1.NoDropClass\" /> or applied as soon, as a transaction has started\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApplyDropClassesOnDragStarted","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ItemIsDisabled","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemIsDisabled\">\r\n            <summary>\r\n            The method is used to determinate if an item should be disabled for dragging. Defaults to allow all items\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"ItemIsDisabled","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"DisabledClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.DisabledClass\">\r\n            <summary>\r\n            If a drop item is disabled (determinate by <see cref=\"P:MudBlazor.MudDropContainer`1.ItemIsDisabled\" />). This class is applied to the element\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisabledClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DraggingClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.DraggingClass\">\r\n            <summary>\r\n            An additional class that is applied to the drop zone where a drag operation started\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DraggingClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemDraggingClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemDraggingClass\">\r\n            <summary>\r\n            An additional class that is applied to an drop item, when it is dragged\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemDraggingClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropContainer<T>","Common.TypeNameIdentifier":"MudDropContainer","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1502997602,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDropContainer<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ChildContent\">\r\n            <summary>\r\n            Child content of component. This should include the drop zones\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudDropContainer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropContainer<T>.ChildContent","Common.TypeNameIdentifier":"MudDropContainer","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":233862949,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDropContainer<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ChildContent\">\r\n            <summary>\r\n            Child content of component. This should include the drop zones\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudDropContainer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropContainer<T>.ChildContent","Common.TypeNameIdentifier":"MudDropContainer","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1859024235,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDropContainer<T>.ItemRenderer","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemRenderer\">\r\n            <summary>\r\n            The render fragment (template) that should be used to render the items within a drop zone\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemRenderer","ParentTag":"MudDropContainer"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemRenderer"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropContainer<T>.ItemRenderer","Common.TypeNameIdentifier":"MudDropContainer","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-332292857,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDropContainer<T>.ItemRenderer","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDropContainer`1.ItemRenderer\">\r\n            <summary>\r\n            The render fragment (template) that should be used to render the items within a drop zone\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemRenderer","ParentTag":"MudBlazor.MudDropContainer"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemRenderer"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropContainer<T>.ItemRenderer","Common.TypeNameIdentifier":"MudDropContainer","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-320510740,"Kind":"Components.Component","Name":"MudBlazor.MudDropZone<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDropZone"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudDropZone<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ChildContent\">\r\n            <summary>\r\n            Child content of component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Identifier","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.Identifier\">\r\n            <summary>\r\n            The unique identifier of this drop zone. It is used within transaction to \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Identifier","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemRenderer","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ItemRenderer\">\r\n            <summary>\r\n            The render fragment (template) that should be used to render the items within a drop zone. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemRenderer","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemsSelector","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ItemsSelector\">\r\n            <summary>\r\n            The method is used to determinate if an item can be dropped within a drop zone. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"ItemsSelector","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"CanDrop","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.CanDrop\">\r\n            <summary>\r\n            The method is used to determinate if an item can be dropped within a drop zone. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"CanDrop","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"CanDropClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.CanDropClass\">\r\n            <summary>\r\n            The CSS class(es), that is applied to drop zones that are a valid target for drag and drop transaction. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanDropClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NoDropClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.NoDropClass\">\r\n            <summary>\r\n            The CSS class(es), that is applied to drop zones that are NOT valid target for drag and drop transaction. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoDropClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ApplyDropClassesOnDragStarted","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ApplyDropClassesOnDragStarted\">\r\n            <summary>\r\n            If true, drop classes CanDropClass <see cref=\"P:MudBlazor.MudDropZone`1.CanDropClass\" />  or NoDropClass <see cref=\"P:MudBlazor.MudDropZone`1.NoDropClass\" /> or applied as soon, as a transaction has started. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApplyDropClassesOnDragStarted","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ItemIsDisabled","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ItemIsDisabled\">\r\n            <summary>\r\n            The method is used to determinate if an item should be disabled for dragging. Defaults to allow all items. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"ItemIsDisabled","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"DisabledClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.DisabledClass\">\r\n            <summary>\r\n            If a drop item is disabled (determinate by <see cref=\"P:MudBlazor.MudDropZone`1.ItemIsDisabled\" />). This class is applied to the element. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisabledClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DraggingClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.DraggingClass\">\r\n            <summary>\r\n            An additional class that is applied to the drop zone where a drag operation started\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DraggingClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemDraggingClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ItemDraggingClass\">\r\n            <summary>\r\n            An additional class that is applied to an drop item, when it is dragged\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemDraggingClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AllowReorder","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowReorder","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnlyZone","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.OnlyZone\">\r\n            <summary>\r\n            If true, will only act as a dropable zone and not render any items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyZone","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropZone<T>","Common.TypeNameIdentifier":"MudDropZone","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-1892812158,"Kind":"Components.Component","Name":"MudBlazor.MudDropZone<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDropZone"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudDropZone<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ChildContent\">\r\n            <summary>\r\n            Child content of component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Identifier","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.Identifier\">\r\n            <summary>\r\n            The unique identifier of this drop zone. It is used within transaction to \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Identifier","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemRenderer","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ItemRenderer\">\r\n            <summary>\r\n            The render fragment (template) that should be used to render the items within a drop zone. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemRenderer","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemsSelector","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ItemsSelector\">\r\n            <summary>\r\n            The method is used to determinate if an item can be dropped within a drop zone. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"ItemsSelector","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"CanDrop","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.CanDrop\">\r\n            <summary>\r\n            The method is used to determinate if an item can be dropped within a drop zone. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"CanDrop","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"CanDropClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.CanDropClass\">\r\n            <summary>\r\n            The CSS class(es), that is applied to drop zones that are a valid target for drag and drop transaction. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanDropClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NoDropClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.NoDropClass\">\r\n            <summary>\r\n            The CSS class(es), that is applied to drop zones that are NOT valid target for drag and drop transaction. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoDropClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ApplyDropClassesOnDragStarted","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ApplyDropClassesOnDragStarted\">\r\n            <summary>\r\n            If true, drop classes CanDropClass <see cref=\"P:MudBlazor.MudDropZone`1.CanDropClass\" />  or NoDropClass <see cref=\"P:MudBlazor.MudDropZone`1.NoDropClass\" /> or applied as soon, as a transaction has started. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApplyDropClassesOnDragStarted","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ItemIsDisabled","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ItemIsDisabled\">\r\n            <summary>\r\n            The method is used to determinate if an item should be disabled for dragging. Defaults to allow all items. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"ItemIsDisabled","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"DisabledClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.DisabledClass\">\r\n            <summary>\r\n            If a drop item is disabled (determinate by <see cref=\"P:MudBlazor.MudDropZone`1.ItemIsDisabled\" />). This class is applied to the element. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisabledClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DraggingClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.DraggingClass\">\r\n            <summary>\r\n            An additional class that is applied to the drop zone where a drag operation started\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DraggingClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemDraggingClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ItemDraggingClass\">\r\n            <summary>\r\n            An additional class that is applied to an drop item, when it is dragged\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemDraggingClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AllowReorder","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowReorder","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnlyZone","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.OnlyZone\">\r\n            <summary>\r\n            If true, will only act as a dropable zone and not render any items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyZone","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropZone<T>","Common.TypeNameIdentifier":"MudDropZone","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1698324770,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDropZone<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ChildContent\">\r\n            <summary>\r\n            Child content of component\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudDropZone"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropZone<T>.ChildContent","Common.TypeNameIdentifier":"MudDropZone","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-562065320,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDropZone<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ChildContent\">\r\n            <summary>\r\n            Child content of component\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudDropZone"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropZone<T>.ChildContent","Common.TypeNameIdentifier":"MudDropZone","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1021616449,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDropZone<T>.ItemRenderer","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ItemRenderer\">\r\n            <summary>\r\n            The render fragment (template) that should be used to render the items within a drop zone. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemRenderer","ParentTag":"MudDropZone"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemRenderer"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropZone<T>.ItemRenderer","Common.TypeNameIdentifier":"MudDropZone","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-770251044,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDropZone<T>.ItemRenderer","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDropZone`1.ItemRenderer\">\r\n            <summary>\r\n            The render fragment (template) that should be used to render the items within a drop zone. Overrides value provided by drop container\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemRenderer","ParentTag":"MudBlazor.MudDropZone"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemRenderer"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDropZone<T>.ItemRenderer","Common.TypeNameIdentifier":"MudDropZone","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-935886100,"Kind":"Components.Component","Name":"MudBlazor.MudDynamicDropItem<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDynamicDropItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudDynamicDropItem<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ZoneIdentifier","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.ZoneIdentifier\">\r\n            <summary>\r\n            The zone identifier of the corresponding drop zone\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ZoneIdentifier","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Item","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.Item\">\r\n            <summary>\r\n            the data item that is represneted by this item\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Item","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.ChildContent\">\r\n            <summary>\r\n            Child content of component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DraggingClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.DraggingClass\">\r\n            <summary>\r\n            An additional class that is applied to this element when a drag operation is in progress\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DraggingClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnDragStarted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.OnDragStarted\">\r\n            <summary>\r\n            An event callback set fires, when a drag operation has been started\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"OnDragStarted","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnDragEnded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.OnDragEnded\">\r\n            <summary>\r\n            An event callback set fires, when a drag operation has been eneded. This included also a canceled transaction\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"OnDragEnded","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.Disabled\">\r\n            <summary>\r\n            When true, the item can't be dragged. defaults to false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisabledClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.DisabledClass\">\r\n            <summary>\r\n            The class that is applied when disabled <see cref=\"P:MudBlazor.MudDynamicDropItem`1.Disabled\" /> is set to true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisabledClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Index","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"HideContent","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"HideContent","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicDropItem<T>","Common.TypeNameIdentifier":"MudDynamicDropItem","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1658265396,"Kind":"Components.Component","Name":"MudBlazor.MudDynamicDropItem<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDynamicDropItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudDynamicDropItem<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ZoneIdentifier","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.ZoneIdentifier\">\r\n            <summary>\r\n            The zone identifier of the corresponding drop zone\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ZoneIdentifier","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Item","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.Item\">\r\n            <summary>\r\n            the data item that is represneted by this item\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Item","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.ChildContent\">\r\n            <summary>\r\n            Child content of component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DraggingClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.DraggingClass\">\r\n            <summary>\r\n            An additional class that is applied to this element when a drag operation is in progress\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DraggingClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnDragStarted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.OnDragStarted\">\r\n            <summary>\r\n            An event callback set fires, when a drag operation has been started\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"OnDragStarted","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnDragEnded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.OnDragEnded\">\r\n            <summary>\r\n            An event callback set fires, when a drag operation has been eneded. This included also a canceled transaction\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"OnDragEnded","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.Disabled\">\r\n            <summary>\r\n            When true, the item can't be dragged. defaults to false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisabledClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.DisabledClass\">\r\n            <summary>\r\n            The class that is applied when disabled <see cref=\"P:MudBlazor.MudDynamicDropItem`1.Disabled\" /> is set to true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisabledClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Index","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"HideContent","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"HideContent","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicDropItem<T>","Common.TypeNameIdentifier":"MudDynamicDropItem","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-169053188,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDynamicDropItem<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.ChildContent\">\r\n            <summary>\r\n            Child content of component\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudDynamicDropItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicDropItem<T>.ChildContent","Common.TypeNameIdentifier":"MudDynamicDropItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-516992873,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDynamicDropItem<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDynamicDropItem`1.ChildContent\">\r\n            <summary>\r\n            Child content of component\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudDynamicDropItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicDropItem<T>.ChildContent","Common.TypeNameIdentifier":"MudDynamicDropItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1102234251,"Kind":"Components.Component","Name":"MudBlazor.MudElement","AssemblyName":"MudBlazor","Documentation":"<member name=\"T:MudBlazor.MudElement\">\r\n            <summary>\r\n            Primitive component which allows rendering any HTML element we want\r\n            through the HtmlTag property\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudElement.ChildContent\">\r\n            <summary>\r\n            Child content\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlTag","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudElement.HtmlTag\">\r\n            <summary>\r\n            The HTML element that will be rendered in the root by the component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlTag","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Ref","TypeName":"Microsoft.AspNetCore.Components.ElementReference?","Documentation":"<member name=\"P:MudBlazor.MudElement.Ref\">\r\n            <summary>\r\n            The ElementReference to bind to.\r\n            Use like @bind-Ref=\"myRef\"\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ref","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.ElementReference?"}},{"Kind":"Components.Component","Name":"RefChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>","Metadata":{"Common.PropertyName":"RefChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ElementReference>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudElement","Common.TypeNameIdentifier":"MudElement","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-631369745,"Kind":"Components.Component","Name":"MudBlazor.MudElement","AssemblyName":"MudBlazor","Documentation":"<member name=\"T:MudBlazor.MudElement\">\r\n            <summary>\r\n            Primitive component which allows rendering any HTML element we want\r\n            through the HtmlTag property\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudElement.ChildContent\">\r\n            <summary>\r\n            Child content\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlTag","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudElement.HtmlTag\">\r\n            <summary>\r\n            The HTML element that will be rendered in the root by the component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlTag","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Ref","TypeName":"Microsoft.AspNetCore.Components.ElementReference?","Documentation":"<member name=\"P:MudBlazor.MudElement.Ref\">\r\n            <summary>\r\n            The ElementReference to bind to.\r\n            Use like @bind-Ref=\"myRef\"\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ref","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.ElementReference?"}},{"Kind":"Components.Component","Name":"RefChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>","Metadata":{"Common.PropertyName":"RefChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ElementReference>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudElement","Common.TypeNameIdentifier":"MudElement","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-659303495,"Kind":"Components.ChildContent","Name":"MudBlazor.MudElement.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudElement.ChildContent\">\r\n            <summary>\r\n            Child content\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudElement"}],"Metadata":{"Common.TypeName":"MudBlazor.MudElement.ChildContent","Common.TypeNameIdentifier":"MudElement","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-906819390,"Kind":"Components.ChildContent","Name":"MudBlazor.MudElement.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudElement.ChildContent\">\r\n            <summary>\r\n            Child content\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudElement"}],"Metadata":{"Common.TypeName":"MudBlazor.MudElement.ChildContent","Common.TypeNameIdentifier":"MudElement","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":147606152,"Kind":"Components.Component","Name":"MudBlazor.MudExpansionPanel","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudExpansionPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.MaxHeight\">\r\n            <summary>\r\n            Explicitly sets the height for the Collapse element to override the css default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"TitleContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.TitleContent\">\r\n            <summary>\r\n            RenderFragment to be displayed in the expansion panel which will override header text if defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TitleContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.Text\">\r\n            <summary>\r\n            The text to be displayed in the expansion panel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HideIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.HideIcon\">\r\n            <summary>\r\n            If true, expand icon will not show\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.Icon\">\r\n            <summary>\r\n            Custom hide icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.Dense\">\r\n            <summary>\r\n            If true, removes vertical padding from childcontent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.DisableGutters\">\r\n            <summary>\r\n            If true, the left and right padding is removed from childcontent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.IsExpandedChanged\">\r\n            <summary>\r\n            Raised when IsExpanded changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.IsExpanded\">\r\n            <summary>\r\n            Expansion state of the panel (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsInitiallyExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.IsInitiallyExpanded\">\r\n            <summary>\r\n            Sets the initial expansion state. Do not use in combination with IsExpanded.\r\n            Combine with MultiExpansion to have more than one panel start open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsInitiallyExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.Disabled\">\r\n            <summary>\r\n            If true, the component will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanel","Common.TypeNameIdentifier":"MudExpansionPanel","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1427320820,"Kind":"Components.Component","Name":"MudBlazor.MudExpansionPanel","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudExpansionPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.MaxHeight\">\r\n            <summary>\r\n            Explicitly sets the height for the Collapse element to override the css default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"TitleContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.TitleContent\">\r\n            <summary>\r\n            RenderFragment to be displayed in the expansion panel which will override header text if defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TitleContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.Text\">\r\n            <summary>\r\n            The text to be displayed in the expansion panel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HideIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.HideIcon\">\r\n            <summary>\r\n            If true, expand icon will not show\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.Icon\">\r\n            <summary>\r\n            Custom hide icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.Dense\">\r\n            <summary>\r\n            If true, removes vertical padding from childcontent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.DisableGutters\">\r\n            <summary>\r\n            If true, the left and right padding is removed from childcontent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.IsExpandedChanged\">\r\n            <summary>\r\n            Raised when IsExpanded changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.IsExpanded\">\r\n            <summary>\r\n            Expansion state of the panel (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsInitiallyExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.IsInitiallyExpanded\">\r\n            <summary>\r\n            Sets the initial expansion state. Do not use in combination with IsExpanded.\r\n            Combine with MultiExpansion to have more than one panel start open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsInitiallyExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.Disabled\">\r\n            <summary>\r\n            If true, the component will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanel","Common.TypeNameIdentifier":"MudExpansionPanel","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1493308561,"Kind":"Components.ChildContent","Name":"MudBlazor.MudExpansionPanel.TitleContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.TitleContent\">\r\n            <summary>\r\n            RenderFragment to be displayed in the expansion panel which will override header text if defined.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleContent","ParentTag":"MudExpansionPanel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanel.TitleContent","Common.TypeNameIdentifier":"MudExpansionPanel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2145147067,"Kind":"Components.ChildContent","Name":"MudBlazor.MudExpansionPanel.TitleContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.TitleContent\">\r\n            <summary>\r\n            RenderFragment to be displayed in the expansion panel which will override header text if defined.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleContent","ParentTag":"MudBlazor.MudExpansionPanel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanel.TitleContent","Common.TypeNameIdentifier":"MudExpansionPanel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1835779215,"Kind":"Components.ChildContent","Name":"MudBlazor.MudExpansionPanel.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudExpansionPanel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanel.ChildContent","Common.TypeNameIdentifier":"MudExpansionPanel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":513895324,"Kind":"Components.ChildContent","Name":"MudBlazor.MudExpansionPanel.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudExpansionPanel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanel.ChildContent","Common.TypeNameIdentifier":"MudExpansionPanel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-929437050,"Kind":"Components.Component","Name":"MudBlazor.MudExpansionPanels","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudExpansionPanels"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MultiExpansion","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.MultiExpansion\">\r\n            <summary>\r\n            If true, multiple panels can be expanded at the same time.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiExpansion","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.Dense\">\r\n            <summary>\r\n            If true, removes vertical padding from all panels' childcontent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.DisableGutters\">\r\n            <summary>\r\n            If true, the left and right padding is removed from all panels' childcontent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableBorders","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.DisableBorders\">\r\n            <summary>\r\n            If true, the borders around each panel will be removed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableBorders","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanels","Common.TypeNameIdentifier":"MudExpansionPanels","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1410814714,"Kind":"Components.Component","Name":"MudBlazor.MudExpansionPanels","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudExpansionPanels"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MultiExpansion","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.MultiExpansion\">\r\n            <summary>\r\n            If true, multiple panels can be expanded at the same time.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiExpansion","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.Dense\">\r\n            <summary>\r\n            If true, removes vertical padding from all panels' childcontent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.DisableGutters\">\r\n            <summary>\r\n            If true, the left and right padding is removed from all panels' childcontent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableBorders","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.DisableBorders\">\r\n            <summary>\r\n            If true, the borders around each panel will be removed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableBorders","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanels","Common.TypeNameIdentifier":"MudExpansionPanels","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-752325983,"Kind":"Components.ChildContent","Name":"MudBlazor.MudExpansionPanels.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudExpansionPanels"}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanels.ChildContent","Common.TypeNameIdentifier":"MudExpansionPanels","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-13675929,"Kind":"Components.ChildContent","Name":"MudBlazor.MudExpansionPanels.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudExpansionPanels.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudExpansionPanels"}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanels.ChildContent","Common.TypeNameIdentifier":"MudExpansionPanels","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-772198558,"Kind":"Components.Component","Name":"MudBlazor.MudField","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudField.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudField.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudField.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudField.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudField.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudField.FullWidth\">\r\n            <summary>\r\n            If true, the field will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudField.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the field has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudField.Variant\">\r\n            <summary>\r\n            Variant can be Text, Filled or Outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudField.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudField.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudField.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudField.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudField.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudField.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudField.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InnerPadding","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudField.InnerPadding\">\r\n            <summary>\r\n            If true, the inner contents padding is removed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InnerPadding","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudField.DisableUnderLine\">\r\n            <summary>\r\n            If true, the field will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudField","Common.TypeNameIdentifier":"MudField","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-915043706,"Kind":"Components.Component","Name":"MudBlazor.MudField","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudField.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudField.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudField.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudField.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudField.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudField.FullWidth\">\r\n            <summary>\r\n            If true, the field will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudField.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the field has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudField.Variant\">\r\n            <summary>\r\n            Variant can be Text, Filled or Outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudField.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudField.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudField.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudField.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudField.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudField.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudField.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InnerPadding","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudField.InnerPadding\">\r\n            <summary>\r\n            If true, the inner contents padding is removed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InnerPadding","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudField.DisableUnderLine\">\r\n            <summary>\r\n            If true, the field will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudField","Common.TypeNameIdentifier":"MudField","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1279443897,"Kind":"Components.ChildContent","Name":"MudBlazor.MudField.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudField.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudField"}],"Metadata":{"Common.TypeName":"MudBlazor.MudField.ChildContent","Common.TypeNameIdentifier":"MudField","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1853279548,"Kind":"Components.ChildContent","Name":"MudBlazor.MudField.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudField.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudField"}],"Metadata":{"Common.TypeName":"MudBlazor.MudField.ChildContent","Common.TypeNameIdentifier":"MudField","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1131393053,"Kind":"Components.Component","Name":"MudBlazor.MudFileUpload<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudFileUpload"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudFileUpload<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Files","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.Files\">\r\n            <summary>\r\n            The value of the MudFileUpload component.\r\n            If T is <see cref=\"T:Microsoft.AspNetCore.Components.Forms.IBrowserFile\">IBrowserFile</see>, it represents a single file.\r\n            If T is <see cref=\"T:System.Collections.Generic.IReadOnlyCollection`1\">IReadOnlyList&lt;IBrowserFile&gt;</see>, it represents multiple files\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Files","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FilesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.FilesChanged\">\r\n            <summary>\r\n            Triggered when the internal OnChange event fires\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"FilesChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnFilesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.OnFilesChanged\">\r\n            <summary>\r\n            Called when the internal files are changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnFilesChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ButtonTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.String>","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.ButtonTemplate\">\r\n            <summary>\r\n            Renders the button that triggers the input. Required for functioning.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ButtonTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.SelectedTemplate\">\r\n            <summary>\r\n            Renders the selected files, if desired.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"SelectedTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SuppressOnChangeWhenInvalid","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.SuppressOnChangeWhenInvalid\">\r\n            <summary>\r\n            If true, OnFilesChanged will not trigger if validation fails\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressOnChangeWhenInvalid","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.Accept\">\r\n            <summary>\r\n            Sets the file types this input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.Hidden\">\r\n            <summary>\r\n            If false, the inner FileInput will be visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hidden","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.InputClass\">\r\n            <summary>\r\n            Css classes to apply to the internal InputFile\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.InputStyle\">\r\n            <summary>\r\n            Style to apply to the internal InputFile\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaximumFileCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.MaximumFileCount\">\r\n            <summary>\r\n            Maximum number of files that can be uploaded\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaximumFileCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudFileUpload<T>","Common.TypeNameIdentifier":"MudFileUpload","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-476935599,"Kind":"Components.Component","Name":"MudBlazor.MudFileUpload<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudFileUpload"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudFileUpload<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Files","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.Files\">\r\n            <summary>\r\n            The value of the MudFileUpload component.\r\n            If T is <see cref=\"T:Microsoft.AspNetCore.Components.Forms.IBrowserFile\">IBrowserFile</see>, it represents a single file.\r\n            If T is <see cref=\"T:System.Collections.Generic.IReadOnlyCollection`1\">IReadOnlyList&lt;IBrowserFile&gt;</see>, it represents multiple files\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Files","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FilesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.FilesChanged\">\r\n            <summary>\r\n            Triggered when the internal OnChange event fires\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"FilesChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnFilesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.OnFilesChanged\">\r\n            <summary>\r\n            Called when the internal files are changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnFilesChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ButtonTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.String>","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.ButtonTemplate\">\r\n            <summary>\r\n            Renders the button that triggers the input. Required for functioning.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ButtonTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.SelectedTemplate\">\r\n            <summary>\r\n            Renders the selected files, if desired.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"SelectedTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SuppressOnChangeWhenInvalid","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.SuppressOnChangeWhenInvalid\">\r\n            <summary>\r\n            If true, OnFilesChanged will not trigger if validation fails\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressOnChangeWhenInvalid","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.Accept\">\r\n            <summary>\r\n            Sets the file types this input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.Hidden\">\r\n            <summary>\r\n            If false, the inner FileInput will be visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hidden","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.InputClass\">\r\n            <summary>\r\n            Css classes to apply to the internal InputFile\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.InputStyle\">\r\n            <summary>\r\n            Style to apply to the internal InputFile\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaximumFileCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.MaximumFileCount\">\r\n            <summary>\r\n            Maximum number of files that can be uploaded\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaximumFileCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudFileUpload<T>","Common.TypeNameIdentifier":"MudFileUpload","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1270084951,"Kind":"Components.ChildContent","Name":"MudBlazor.MudFileUpload<T>.ButtonTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.ButtonTemplate\">\r\n            <summary>\r\n            Renders the button that triggers the input. Required for functioning.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ButtonTemplate","ParentTag":"MudFileUpload"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ButtonTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudFileUpload<T>.ButtonTemplate","Common.TypeNameIdentifier":"MudFileUpload","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2028121092,"Kind":"Components.ChildContent","Name":"MudBlazor.MudFileUpload<T>.ButtonTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.ButtonTemplate\">\r\n            <summary>\r\n            Renders the button that triggers the input. Required for functioning.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ButtonTemplate","ParentTag":"MudBlazor.MudFileUpload"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ButtonTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudFileUpload<T>.ButtonTemplate","Common.TypeNameIdentifier":"MudFileUpload","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":87197872,"Kind":"Components.ChildContent","Name":"MudBlazor.MudFileUpload<T>.SelectedTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.SelectedTemplate\">\r\n            <summary>\r\n            Renders the selected files, if desired.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SelectedTemplate","ParentTag":"MudFileUpload"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["SelectedTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudFileUpload<T>.SelectedTemplate","Common.TypeNameIdentifier":"MudFileUpload","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1886112841,"Kind":"Components.ChildContent","Name":"MudBlazor.MudFileUpload<T>.SelectedTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudFileUpload`1.SelectedTemplate\">\r\n            <summary>\r\n            Renders the selected files, if desired.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SelectedTemplate","ParentTag":"MudBlazor.MudFileUpload"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["SelectedTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudFileUpload<T>.SelectedTemplate","Common.TypeNameIdentifier":"MudFileUpload","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1908406599,"Kind":"Components.Component","Name":"MudBlazor.MudFocusTrap","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudFocusTrap"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudFocusTrap.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFocusTrap.Disabled\">\r\n            <summary>\r\n            If true, the focus will no longer loop inside the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DefaultFocus","TypeName":"MudBlazor.DefaultFocus","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudFocusTrap.DefaultFocus\">\r\n            <summary>\r\n            Defines on which element to set the focus when the component is created or enabled.\r\n            When DefaultFocus.Element is used, the focus will be set to the FocusTrap itself, so the user will have to press TAB key once to focus the first tabbable element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultFocus","Common.GloballyQualifiedTypeName":"global::MudBlazor.DefaultFocus"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudFocusTrap","Common.TypeNameIdentifier":"MudFocusTrap","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-110435421,"Kind":"Components.Component","Name":"MudBlazor.MudFocusTrap","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudFocusTrap"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudFocusTrap.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFocusTrap.Disabled\">\r\n            <summary>\r\n            If true, the focus will no longer loop inside the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DefaultFocus","TypeName":"MudBlazor.DefaultFocus","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudFocusTrap.DefaultFocus\">\r\n            <summary>\r\n            Defines on which element to set the focus when the component is created or enabled.\r\n            When DefaultFocus.Element is used, the focus will be set to the FocusTrap itself, so the user will have to press TAB key once to focus the first tabbable element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultFocus","Common.GloballyQualifiedTypeName":"global::MudBlazor.DefaultFocus"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudFocusTrap","Common.TypeNameIdentifier":"MudFocusTrap","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-335019203,"Kind":"Components.ChildContent","Name":"MudBlazor.MudFocusTrap.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudFocusTrap.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudFocusTrap"}],"Metadata":{"Common.TypeName":"MudBlazor.MudFocusTrap.ChildContent","Common.TypeNameIdentifier":"MudFocusTrap","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2006189900,"Kind":"Components.ChildContent","Name":"MudBlazor.MudFocusTrap.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudFocusTrap.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudFocusTrap"}],"Metadata":{"Common.TypeName":"MudBlazor.MudFocusTrap.ChildContent","Common.TypeNameIdentifier":"MudFocusTrap","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1070689620,"Kind":"Components.Component","Name":"MudBlazor.MudForm","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudForm.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsValid","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudForm.IsValid\">\r\n            <summary>\r\n            Validation status. True if the form is valid and without errors. This parameter is two-way bindable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsValid","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsTouched","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudForm.IsTouched\">\r\n            <summary>\r\n            True if any field of the field was touched. This parameter is readonly.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsTouched","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValidationDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudForm.ValidationDelay\">\r\n            <summary>\r\n            Validation debounce delay in milliseconds. This can help improve rendering performance of forms with real-time validation of inputs\r\n            i.e. when textfields have Immediate=\"true\".\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValidationDelay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SuppressRenderingOnValidation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudForm.SuppressRenderingOnValidation\">\r\n            <summary>\r\n            When true, the form will not re-render its child contents on validation updates (i.e. when IsValid changes).\r\n            This is an optimization which can be necessary especially for larger forms on older devices.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressRenderingOnValidation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SuppressImplicitSubmission","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudForm.SuppressImplicitSubmission\">\r\n            <summary>\r\n            When true, will not cause a page refresh on Enter if any input has focus.\r\n            </summary>\r\n            <remarks>\r\n            https://www.w3.org/TR/2018/SPSD-html5-20180327/forms.html#implicit-submission\r\n            Usually this is not wanted, as it can cause a page refresh in the middle of editing a form. \r\n            When the form is in a dialog this will cause the dialog to close. So by default we suppress it.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressImplicitSubmission","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsValidChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudForm.IsValidChanged\">\r\n            <summary>\r\n            Raised when IsValid changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsValidChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsTouchedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudForm.IsTouchedChanged\">\r\n            <summary>\r\n            Raised when IsTouched changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsTouchedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FieldChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Utilities.FormFieldChangedEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudForm.FieldChanged\">\r\n            <summary>\r\n            Raised when a contained IFormComponent changes its value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FieldChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Utilities.FormFieldChangedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudForm.Validation\">\r\n            <summary>\r\n            A default validation func or a validation attribute to use for form controls that don't have one.\r\n            Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OverrideFieldValidation","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.MudForm.OverrideFieldValidation\">\r\n            <summary>\r\n            If a field already has a validation, override it with <see cref=\"P:MudBlazor.MudForm.Validation\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverrideFieldValidation","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Errors","TypeName":"System.String[]","Documentation":"<member name=\"P:MudBlazor.MudForm.Errors\">\r\n            <summary>\r\n            Validation error messages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Errors","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ErrorsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Metadata":{"Common.PropertyName":"ErrorsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String[]>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. Used with Fluent Validation\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudForm","Common.TypeNameIdentifier":"MudForm","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":865307895,"Kind":"Components.Component","Name":"MudBlazor.MudForm","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudForm.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsValid","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudForm.IsValid\">\r\n            <summary>\r\n            Validation status. True if the form is valid and without errors. This parameter is two-way bindable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsValid","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsTouched","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudForm.IsTouched\">\r\n            <summary>\r\n            True if any field of the field was touched. This parameter is readonly.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsTouched","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValidationDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudForm.ValidationDelay\">\r\n            <summary>\r\n            Validation debounce delay in milliseconds. This can help improve rendering performance of forms with real-time validation of inputs\r\n            i.e. when textfields have Immediate=\"true\".\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValidationDelay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SuppressRenderingOnValidation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudForm.SuppressRenderingOnValidation\">\r\n            <summary>\r\n            When true, the form will not re-render its child contents on validation updates (i.e. when IsValid changes).\r\n            This is an optimization which can be necessary especially for larger forms on older devices.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressRenderingOnValidation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SuppressImplicitSubmission","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudForm.SuppressImplicitSubmission\">\r\n            <summary>\r\n            When true, will not cause a page refresh on Enter if any input has focus.\r\n            </summary>\r\n            <remarks>\r\n            https://www.w3.org/TR/2018/SPSD-html5-20180327/forms.html#implicit-submission\r\n            Usually this is not wanted, as it can cause a page refresh in the middle of editing a form. \r\n            When the form is in a dialog this will cause the dialog to close. So by default we suppress it.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressImplicitSubmission","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsValidChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudForm.IsValidChanged\">\r\n            <summary>\r\n            Raised when IsValid changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsValidChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsTouchedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudForm.IsTouchedChanged\">\r\n            <summary>\r\n            Raised when IsTouched changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsTouchedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FieldChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Utilities.FormFieldChangedEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudForm.FieldChanged\">\r\n            <summary>\r\n            Raised when a contained IFormComponent changes its value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FieldChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Utilities.FormFieldChangedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudForm.Validation\">\r\n            <summary>\r\n            A default validation func or a validation attribute to use for form controls that don't have one.\r\n            Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OverrideFieldValidation","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.MudForm.OverrideFieldValidation\">\r\n            <summary>\r\n            If a field already has a validation, override it with <see cref=\"P:MudBlazor.MudForm.Validation\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverrideFieldValidation","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Errors","TypeName":"System.String[]","Documentation":"<member name=\"P:MudBlazor.MudForm.Errors\">\r\n            <summary>\r\n            Validation error messages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Errors","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ErrorsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Metadata":{"Common.PropertyName":"ErrorsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String[]>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. Used with Fluent Validation\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudForm","Common.TypeNameIdentifier":"MudForm","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1640930680,"Kind":"Components.ChildContent","Name":"MudBlazor.MudForm.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudForm.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudForm"}],"Metadata":{"Common.TypeName":"MudBlazor.MudForm.ChildContent","Common.TypeNameIdentifier":"MudForm","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":286085481,"Kind":"Components.ChildContent","Name":"MudBlazor.MudForm.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudForm.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudForm"}],"Metadata":{"Common.TypeName":"MudBlazor.MudForm.ChildContent","Common.TypeNameIdentifier":"MudForm","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":980078037,"Kind":"Components.Component","Name":"MudBlazor.MudHidden","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudHidden"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MudBlazor.Breakpoint","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudHidden.Breakpoint\">\r\n            <summary>\r\n            The screen size(s) depending on which the ChildContent should not be rendered (or should be, if Invert is true)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Breakpoint","Common.GloballyQualifiedTypeName":"global::MudBlazor.Breakpoint"}},{"Kind":"Components.Component","Name":"Invert","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudHidden.Invert\">\r\n            <summary>\r\n            Inverts the Breakpoint, so that the ChildContent is only rendered when the breakpoint matches the screen size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Invert","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsHidden","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudHidden.IsHidden\">\r\n            <summary>\r\n            True if the component is not visible (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsHidden","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsHiddenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudHidden.IsHiddenChanged\">\r\n            <summary>\r\n            Fires when the breakpoint changes visibility of the component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsHiddenChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudHidden.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudHidden","Common.TypeNameIdentifier":"MudHidden","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1072367285,"Kind":"Components.Component","Name":"MudBlazor.MudHidden","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudHidden"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MudBlazor.Breakpoint","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudHidden.Breakpoint\">\r\n            <summary>\r\n            The screen size(s) depending on which the ChildContent should not be rendered (or should be, if Invert is true)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Breakpoint","Common.GloballyQualifiedTypeName":"global::MudBlazor.Breakpoint"}},{"Kind":"Components.Component","Name":"Invert","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudHidden.Invert\">\r\n            <summary>\r\n            Inverts the Breakpoint, so that the ChildContent is only rendered when the breakpoint matches the screen size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Invert","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsHidden","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudHidden.IsHidden\">\r\n            <summary>\r\n            True if the component is not visible (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsHidden","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsHiddenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudHidden.IsHiddenChanged\">\r\n            <summary>\r\n            Fires when the breakpoint changes visibility of the component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsHiddenChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudHidden.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudHidden","Common.TypeNameIdentifier":"MudHidden","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1605779225,"Kind":"Components.ChildContent","Name":"MudBlazor.MudHidden.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudHidden.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudHidden"}],"Metadata":{"Common.TypeName":"MudBlazor.MudHidden.ChildContent","Common.TypeNameIdentifier":"MudHidden","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1541778023,"Kind":"Components.ChildContent","Name":"MudBlazor.MudHidden.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudHidden.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudHidden"}],"Metadata":{"Common.TypeName":"MudBlazor.MudHidden.ChildContent","Common.TypeNameIdentifier":"MudHidden","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1459255935,"Kind":"Components.Component","Name":"MudBlazor.MudHighlighter","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudHighlighter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudHighlighter.Text\">\r\n            <summary>\r\n            The whole text in which a fragment will be highlighted\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HighlightedText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudHighlighter.HighlightedText\">\r\n            <summary>\r\n            The fragment of text to be highlighted\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HighlightedText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HighlightedTexts","TypeName":"System.Collections.Generic.IEnumerable<System.String>","Documentation":"<member name=\"P:MudBlazor.MudHighlighter.HighlightedTexts\">\r\n            <summary>\r\n            The fragments of text to be highlighted\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HighlightedTexts","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.String>"}},{"Kind":"Components.Component","Name":"CaseSensitive","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudHighlighter.CaseSensitive\">\r\n            <summary>\r\n            Whether or not the highlighted text is case sensitive\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CaseSensitive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"UntilNextBoundary","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudHighlighter.UntilNextBoundary\">\r\n            <summary>\r\n            If true, highlights the text until the next regex boundary\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UntilNextBoundary","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudHighlighter","Common.TypeNameIdentifier":"MudHighlighter","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1062511430,"Kind":"Components.Component","Name":"MudBlazor.MudHighlighter","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudHighlighter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudHighlighter.Text\">\r\n            <summary>\r\n            The whole text in which a fragment will be highlighted\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HighlightedText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudHighlighter.HighlightedText\">\r\n            <summary>\r\n            The fragment of text to be highlighted\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HighlightedText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HighlightedTexts","TypeName":"System.Collections.Generic.IEnumerable<System.String>","Documentation":"<member name=\"P:MudBlazor.MudHighlighter.HighlightedTexts\">\r\n            <summary>\r\n            The fragments of text to be highlighted\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HighlightedTexts","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.String>"}},{"Kind":"Components.Component","Name":"CaseSensitive","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudHighlighter.CaseSensitive\">\r\n            <summary>\r\n            Whether or not the highlighted text is case sensitive\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CaseSensitive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"UntilNextBoundary","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudHighlighter.UntilNextBoundary\">\r\n            <summary>\r\n            If true, highlights the text until the next regex boundary\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UntilNextBoundary","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudHighlighter","Common.TypeNameIdentifier":"MudHighlighter","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-2031112252,"Kind":"Components.Component","Name":"MudBlazor.MudIcon","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudIcon.Icon\">\r\n            <summary>\r\n            Icon to be used can either be svg paths for font icons.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudIcon.Title\">\r\n            <summary>\r\n            Title of the icon used for accessibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIcon.Size\">\r\n            <summary>\r\n            The Size of the icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIcon.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ViewBox","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudIcon.ViewBox\">\r\n            <summary>\r\n            The viewbox size of an svg element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ViewBox","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudIcon.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudIcon","Common.TypeNameIdentifier":"MudIcon","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":734914878,"Kind":"Components.Component","Name":"MudBlazor.MudIcon","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudIcon.Icon\">\r\n            <summary>\r\n            Icon to be used can either be svg paths for font icons.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudIcon.Title\">\r\n            <summary>\r\n            Title of the icon used for accessibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIcon.Size\">\r\n            <summary>\r\n            The Size of the icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudIcon.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ViewBox","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudIcon.ViewBox\">\r\n            <summary>\r\n            The viewbox size of an svg element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ViewBox","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudIcon.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudIcon","Common.TypeNameIdentifier":"MudIcon","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-672803256,"Kind":"Components.ChildContent","Name":"MudBlazor.MudIcon.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudIcon.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudIcon"}],"Metadata":{"Common.TypeName":"MudBlazor.MudIcon.ChildContent","Common.TypeNameIdentifier":"MudIcon","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-986808890,"Kind":"Components.ChildContent","Name":"MudBlazor.MudIcon.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudIcon.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudIcon"}],"Metadata":{"Common.TypeName":"MudBlazor.MudIcon.ChildContent","Common.TypeNameIdentifier":"MudIcon","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1114727887,"Kind":"Components.Component","Name":"MudBlazor.MudImage","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudImage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fluid","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudImage.Fluid\">\r\n            <summary>\r\n            Applies the fluid class so the image scales with the parent width.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fluid","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Src","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudImage.Src\">\r\n            <summary>\r\n            Specifies the path to the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Src","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Alt","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudImage.Alt\">\r\n            <summary>\r\n            Specifies an alternate text for the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Alt","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudImage.Height\">\r\n            <summary>\r\n            Specifies the height of the image in px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudImage.Width\">\r\n            <summary>\r\n            Specifies the width of the image in px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudImage.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ObjectFit","TypeName":"MudBlazor.ObjectFit","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudImage.ObjectFit\">\r\n            <summary>\r\n            Controls how the image should be resized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ObjectFit","Common.GloballyQualifiedTypeName":"global::MudBlazor.ObjectFit"}},{"Kind":"Components.Component","Name":"ObjectPosition","TypeName":"MudBlazor.ObjectPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudImage.ObjectPosition\">\r\n            <summary>\r\n            Controls how the image should positioned within its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ObjectPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.ObjectPosition"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudImage","Common.TypeNameIdentifier":"MudImage","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-170800503,"Kind":"Components.Component","Name":"MudBlazor.MudImage","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudImage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fluid","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudImage.Fluid\">\r\n            <summary>\r\n            Applies the fluid class so the image scales with the parent width.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fluid","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Src","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudImage.Src\">\r\n            <summary>\r\n            Specifies the path to the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Src","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Alt","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudImage.Alt\">\r\n            <summary>\r\n            Specifies an alternate text for the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Alt","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudImage.Height\">\r\n            <summary>\r\n            Specifies the height of the image in px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudImage.Width\">\r\n            <summary>\r\n            Specifies the width of the image in px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudImage.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ObjectFit","TypeName":"MudBlazor.ObjectFit","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudImage.ObjectFit\">\r\n            <summary>\r\n            Controls how the image should be resized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ObjectFit","Common.GloballyQualifiedTypeName":"global::MudBlazor.ObjectFit"}},{"Kind":"Components.Component","Name":"ObjectPosition","TypeName":"MudBlazor.ObjectPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudImage.ObjectPosition\">\r\n            <summary>\r\n            Controls how the image should positioned within its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ObjectPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.ObjectPosition"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudImage","Common.TypeNameIdentifier":"MudImage","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1679816655,"Kind":"Components.Component","Name":"MudBlazor.MudInput<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudInput<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInput`1.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnIncrement","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnIncrement\">\r\n            <summary>\r\n            Invokes the callback when the Up arrow button is clicked when the input is set to <see cref=\"F:MudBlazor.InputType.Number\" />.\r\n            Note: use the optimized control <see cref=\"T:MudBlazor.MudNumericField`1\" /> if you need to deal with numbers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnIncrement","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDecrement","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnDecrement\">\r\n            <summary>\r\n            Invokes the callback when the Down arrow button is clicked when the input is set to <see cref=\"F:MudBlazor.InputType.Number\" />.\r\n            Note: use the optimized control <see cref=\"T:MudBlazor.MudNumericField`1\" /> if you need to deal with numbers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDecrement","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"HideSpinButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInput`1.HideSpinButtons\">\r\n            <summary>\r\n            Hides the spin buttons for <see cref=\"T:MudBlazor.MudNumericField`1\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSpinButtons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInput`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseWheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnMouseWheel\">\r\n            <summary>\r\n            Mouse wheel event for input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMouseWheel","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClearIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ClearIcon\">\r\n            <summary>\r\n            Custom clear icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClearIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NumericUpIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.NumericUpIcon\">\r\n            <summary>\r\n            Custom numeric up icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NumericUpIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NumericDownIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.NumericDownIcon\">\r\n            <summary>\r\n            Custom numeric down icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NumericDownIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudInput<T>","Common.TypeNameIdentifier":"MudInput","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":444550621,"Kind":"Components.Component","Name":"MudBlazor.MudInput<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudInput<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInput`1.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnIncrement","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnIncrement\">\r\n            <summary>\r\n            Invokes the callback when the Up arrow button is clicked when the input is set to <see cref=\"F:MudBlazor.InputType.Number\" />.\r\n            Note: use the optimized control <see cref=\"T:MudBlazor.MudNumericField`1\" /> if you need to deal with numbers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnIncrement","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDecrement","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnDecrement\">\r\n            <summary>\r\n            Invokes the callback when the Down arrow button is clicked when the input is set to <see cref=\"F:MudBlazor.InputType.Number\" />.\r\n            Note: use the optimized control <see cref=\"T:MudBlazor.MudNumericField`1\" /> if you need to deal with numbers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDecrement","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"HideSpinButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInput`1.HideSpinButtons\">\r\n            <summary>\r\n            Hides the spin buttons for <see cref=\"T:MudBlazor.MudNumericField`1\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSpinButtons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInput`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseWheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnMouseWheel\">\r\n            <summary>\r\n            Mouse wheel event for input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMouseWheel","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClearIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ClearIcon\">\r\n            <summary>\r\n            Custom clear icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClearIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NumericUpIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.NumericUpIcon\">\r\n            <summary>\r\n            Custom numeric up icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NumericUpIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NumericDownIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.NumericDownIcon\">\r\n            <summary>\r\n            Custom numeric down icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NumericDownIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudInput<T>","Common.TypeNameIdentifier":"MudInput","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1611465614,"Kind":"Components.ChildContent","Name":"MudBlazor.MudInput<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudInput"}],"Metadata":{"Common.TypeName":"MudBlazor.MudInput<T>.ChildContent","Common.TypeNameIdentifier":"MudInput","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1368406167,"Kind":"Components.ChildContent","Name":"MudBlazor.MudInput<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudInput"}],"Metadata":{"Common.TypeName":"MudBlazor.MudInput<T>.ChildContent","Common.TypeNameIdentifier":"MudInput","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1263235636,"Kind":"Components.Component","Name":"MudBlazor.MudInputString","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudInputString"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInput`1.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnIncrement","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnIncrement\">\r\n            <summary>\r\n            Invokes the callback when the Up arrow button is clicked when the input is set to <see cref=\"F:MudBlazor.InputType.Number\" />.\r\n            Note: use the optimized control <see cref=\"T:MudBlazor.MudNumericField`1\" /> if you need to deal with numbers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnIncrement","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDecrement","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnDecrement\">\r\n            <summary>\r\n            Invokes the callback when the Down arrow button is clicked when the input is set to <see cref=\"F:MudBlazor.InputType.Number\" />.\r\n            Note: use the optimized control <see cref=\"T:MudBlazor.MudNumericField`1\" /> if you need to deal with numbers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDecrement","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"HideSpinButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInput`1.HideSpinButtons\">\r\n            <summary>\r\n            Hides the spin buttons for <see cref=\"T:MudBlazor.MudNumericField`1\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSpinButtons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInput`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseWheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnMouseWheel\">\r\n            <summary>\r\n            Mouse wheel event for input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMouseWheel","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClearIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ClearIcon\">\r\n            <summary>\r\n            Custom clear icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClearIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NumericUpIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.NumericUpIcon\">\r\n            <summary>\r\n            Custom numeric up icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NumericUpIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NumericDownIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.NumericDownIcon\">\r\n            <summary>\r\n            Custom numeric down icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NumericDownIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.String, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputString","Common.TypeNameIdentifier":"MudInputString","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1692617953,"Kind":"Components.Component","Name":"MudBlazor.MudInputString","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudInputString"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInput`1.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnIncrement","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnIncrement\">\r\n            <summary>\r\n            Invokes the callback when the Up arrow button is clicked when the input is set to <see cref=\"F:MudBlazor.InputType.Number\" />.\r\n            Note: use the optimized control <see cref=\"T:MudBlazor.MudNumericField`1\" /> if you need to deal with numbers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnIncrement","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDecrement","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnDecrement\">\r\n            <summary>\r\n            Invokes the callback when the Down arrow button is clicked when the input is set to <see cref=\"F:MudBlazor.InputType.Number\" />.\r\n            Note: use the optimized control <see cref=\"T:MudBlazor.MudNumericField`1\" /> if you need to deal with numbers.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDecrement","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"HideSpinButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInput`1.HideSpinButtons\">\r\n            <summary>\r\n            Hides the spin buttons for <see cref=\"T:MudBlazor.MudNumericField`1\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSpinButtons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInput`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseWheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudInput`1.OnMouseWheel\">\r\n            <summary>\r\n            Mouse wheel event for input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMouseWheel","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClearIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ClearIcon\">\r\n            <summary>\r\n            Custom clear icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClearIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NumericUpIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.NumericUpIcon\">\r\n            <summary>\r\n            Custom numeric up icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NumericUpIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NumericDownIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInput`1.NumericDownIcon\">\r\n            <summary>\r\n            Custom numeric down icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NumericDownIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.String, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputString","Common.TypeNameIdentifier":"MudInputString","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-82736052,"Kind":"Components.ChildContent","Name":"MudBlazor.MudInputString.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudInputString"}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputString.ChildContent","Common.TypeNameIdentifier":"MudInputString","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-799643141,"Kind":"Components.ChildContent","Name":"MudBlazor.MudInputString.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudInputString"}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputString.ChildContent","Common.TypeNameIdentifier":"MudInputString","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1863760711,"Kind":"Components.Component","Name":"MudBlazor.MudInputLabel","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudInputLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudInputLabel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputLabel.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputLabel.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInputLabel.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInputLabel.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"ForId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputLabel.ForId\">\r\n            <summary>\r\n             Will set the for attribute for WCAG accessiblility\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputLabel","Common.TypeNameIdentifier":"MudInputLabel","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-139837421,"Kind":"Components.Component","Name":"MudBlazor.MudInputLabel","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudInputLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudInputLabel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputLabel.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputLabel.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInputLabel.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInputLabel.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"ForId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputLabel.ForId\">\r\n            <summary>\r\n             Will set the for attribute for WCAG accessiblility\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputLabel","Common.TypeNameIdentifier":"MudInputLabel","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-654925080,"Kind":"Components.ChildContent","Name":"MudBlazor.MudInputLabel.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudInputLabel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudInputLabel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputLabel.ChildContent","Common.TypeNameIdentifier":"MudInputLabel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2115924207,"Kind":"Components.ChildContent","Name":"MudBlazor.MudInputLabel.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudInputLabel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudInputLabel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputLabel.ChildContent","Common.TypeNameIdentifier":"MudInputLabel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1525645572,"Kind":"Components.Component","Name":"MudBlazor.MudRangeInput<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRangeInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudRangeInput<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"PlaceholderStart","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.PlaceholderStart\">\r\n            <summary>\r\n            The short hint displayed in the start input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PlaceholderStart","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PlaceholderEnd","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.PlaceholderEnd\">\r\n            <summary>\r\n            The short hint displayed in the end input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PlaceholderEnd","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SeparatorIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.SeparatorIcon\">\r\n            <summary>\r\n            Custom separator icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SeparatorIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Range<T>>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Range<T>>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"MudBlazor.Range<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::MudBlazor.Range<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<MudBlazor.Range<T>, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::MudBlazor.Range<T>, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<MudBlazor.Range<T>>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::MudBlazor.Range<T>>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRangeInput<T>","Common.TypeNameIdentifier":"MudRangeInput","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-148179606,"Kind":"Components.Component","Name":"MudBlazor.MudRangeInput<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRangeInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudRangeInput<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"PlaceholderStart","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.PlaceholderStart\">\r\n            <summary>\r\n            The short hint displayed in the start input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PlaceholderStart","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PlaceholderEnd","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.PlaceholderEnd\">\r\n            <summary>\r\n            The short hint displayed in the end input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PlaceholderEnd","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SeparatorIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.SeparatorIcon\">\r\n            <summary>\r\n            Custom separator icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SeparatorIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Range<T>>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Range<T>>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"MudBlazor.Range<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::MudBlazor.Range<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<MudBlazor.Range<T>, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::MudBlazor.Range<T>, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<MudBlazor.Range<T>>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::MudBlazor.Range<T>>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRangeInput<T>","Common.TypeNameIdentifier":"MudRangeInput","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1826635472,"Kind":"Components.ChildContent","Name":"MudBlazor.MudRangeInput<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudRangeInput"}],"Metadata":{"Common.TypeName":"MudBlazor.MudRangeInput<T>.ChildContent","Common.TypeNameIdentifier":"MudRangeInput","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-624809816,"Kind":"Components.ChildContent","Name":"MudBlazor.MudRangeInput<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudRangeInput`1.ChildContent\">\r\n            <summary>\r\n            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudRangeInput"}],"Metadata":{"Common.TypeName":"MudBlazor.MudRangeInput<T>.ChildContent","Common.TypeNameIdentifier":"MudRangeInput","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":154208581,"Kind":"Components.Component","Name":"MudBlazor.MudInputControl","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudInputControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudInputControl.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudInputControl.InputContent\">\r\n            <summary>\r\n            Should be the Input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInputControl.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputControl.Required\">\r\n            <summary>\r\n            If true, will apply mud-input-required class to the output div\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputControl.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputControl.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CounterText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.CounterText\">\r\n            <summary>\r\n            The current character counter, displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CounterText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputControl.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInputControl.Variant\">\r\n            <summary>\r\n            Variant can be Text, Filled or Outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputControl.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ForId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.ForId\">\r\n            <summary>\r\n            If string has value the label \"for\" attribute will be added.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputControl","Common.TypeNameIdentifier":"MudInputControl","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-123191803,"Kind":"Components.Component","Name":"MudBlazor.MudInputControl","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudInputControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudInputControl.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudInputControl.InputContent\">\r\n            <summary>\r\n            Should be the Input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInputControl.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputControl.Required\">\r\n            <summary>\r\n            If true, will apply mud-input-required class to the output div\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputControl.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputControl.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CounterText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.CounterText\">\r\n            <summary>\r\n            The current character counter, displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CounterText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputControl.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudInputControl.Variant\">\r\n            <summary>\r\n            Variant can be Text, Filled or Outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudInputControl.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ForId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudInputControl.ForId\">\r\n            <summary>\r\n            If string has value the label \"for\" attribute will be added.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputControl","Common.TypeNameIdentifier":"MudInputControl","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1812457270,"Kind":"Components.ChildContent","Name":"MudBlazor.MudInputControl.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudInputControl.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudInputControl"}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputControl.ChildContent","Common.TypeNameIdentifier":"MudInputControl","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1321289986,"Kind":"Components.ChildContent","Name":"MudBlazor.MudInputControl.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudInputControl.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudInputControl"}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputControl.ChildContent","Common.TypeNameIdentifier":"MudInputControl","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-827086451,"Kind":"Components.ChildContent","Name":"MudBlazor.MudInputControl.InputContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudInputControl.InputContent\">\r\n            <summary>\r\n            Should be the Input\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputContent","ParentTag":"MudInputControl"}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputControl.InputContent","Common.TypeNameIdentifier":"MudInputControl","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":836800439,"Kind":"Components.ChildContent","Name":"MudBlazor.MudInputControl.InputContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudInputControl.InputContent\">\r\n            <summary>\r\n            Should be the Input\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputContent","ParentTag":"MudBlazor.MudInputControl"}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputControl.InputContent","Common.TypeNameIdentifier":"MudInputControl","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":569837657,"Kind":"Components.Component","Name":"MudBlazor.MudLayout","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudLayout","Common.TypeNameIdentifier":"MudLayout","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-342322548,"Kind":"Components.Component","Name":"MudBlazor.MudLayout","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudLayout","Common.TypeNameIdentifier":"MudLayout","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1759253707,"Kind":"Components.ChildContent","Name":"MudBlazor.MudLayout.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudLayout"}],"Metadata":{"Common.TypeName":"MudBlazor.MudLayout.ChildContent","Common.TypeNameIdentifier":"MudLayout","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1256517413,"Kind":"Components.ChildContent","Name":"MudBlazor.MudLayout.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudLayout"}],"Metadata":{"Common.TypeName":"MudBlazor.MudLayout.ChildContent","Common.TypeNameIdentifier":"MudLayout","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1837131056,"Kind":"Components.Component","Name":"MudBlazor.MudLink","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudLink.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Typo","TypeName":"MudBlazor.Typo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudLink.Typo\">\r\n            <summary>\r\n            Typography variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Typo","Common.GloballyQualifiedTypeName":"global::MudBlazor.Typo"}},{"Kind":"Components.Component","Name":"Underline","TypeName":"MudBlazor.Underline","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudLink.Underline\">\r\n            <summary>\r\n            Controls when the link should have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Underline","Common.GloballyQualifiedTypeName":"global::MudBlazor.Underline"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudLink.Href\">\r\n            <summary>\r\n            The URL, which is the actual link.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudLink.Target\">\r\n            <summary>\r\n            The target attribute specifies where to open the link, if Link is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudLink.OnClick\">\r\n            <summary>\r\n            Link click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudLink.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudLink.Disabled\">\r\n            <summary>\r\n            If true, the navlink will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudLink","Common.TypeNameIdentifier":"MudLink","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1491095257,"Kind":"Components.Component","Name":"MudBlazor.MudLink","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudLink.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Typo","TypeName":"MudBlazor.Typo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudLink.Typo\">\r\n            <summary>\r\n            Typography variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Typo","Common.GloballyQualifiedTypeName":"global::MudBlazor.Typo"}},{"Kind":"Components.Component","Name":"Underline","TypeName":"MudBlazor.Underline","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudLink.Underline\">\r\n            <summary>\r\n            Controls when the link should have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Underline","Common.GloballyQualifiedTypeName":"global::MudBlazor.Underline"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudLink.Href\">\r\n            <summary>\r\n            The URL, which is the actual link.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudLink.Target\">\r\n            <summary>\r\n            The target attribute specifies where to open the link, if Link is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudLink.OnClick\">\r\n            <summary>\r\n            Link click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudLink.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudLink.Disabled\">\r\n            <summary>\r\n            If true, the navlink will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudLink","Common.TypeNameIdentifier":"MudLink","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":2146766802,"Kind":"Components.ChildContent","Name":"MudBlazor.MudLink.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudLink.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudLink"}],"Metadata":{"Common.TypeName":"MudBlazor.MudLink.ChildContent","Common.TypeNameIdentifier":"MudLink","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":49619229,"Kind":"Components.ChildContent","Name":"MudBlazor.MudLink.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudLink.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudLink"}],"Metadata":{"Common.TypeName":"MudBlazor.MudLink.ChildContent","Common.TypeNameIdentifier":"MudLink","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":551903729,"Kind":"Components.Component","Name":"MudBlazor.MudList","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudList.Color\">\r\n            <summary>\r\n            The color of the selected List Item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudList.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Clickable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudList.Clickable\">\r\n            <summary>\r\n            Set true to make the list items clickable. This is also the precondition for list selection to work.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clickable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisablePadding","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudList.DisablePadding\">\r\n            <summary>\r\n            If true, vertical padding will be removed from the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisablePadding","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudList.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all list items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudList.DisableGutters\">\r\n            <summary>\r\n            If true, the left and right padding is removed on all list items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudList.Disabled\">\r\n            <summary>\r\n            If true, will disable the list item if it has onclick.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"MudBlazor.MudListItem","Documentation":"<member name=\"P:MudBlazor.MudList.SelectedItem\">\r\n            <summary>\r\n            The current selected list item.\r\n            Note: make the list Clickable for item selection to work.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItem","Common.GloballyQualifiedTypeName":"global::MudBlazor.MudListItem"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudListItem>","Documentation":"<member name=\"P:MudBlazor.MudList.SelectedItemChanged\">\r\n            <summary>\r\n            Called whenever the selection changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItemChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudListItem>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedValue","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudList.SelectedValue\">\r\n            <summary>\r\n            The current selected value.\r\n            Note: make the list Clickable for item selection to work.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValue","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"SelectedValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudList.SelectedValueChanged\">\r\n            <summary>\r\n            Called whenever the selection changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudList","Common.TypeNameIdentifier":"MudList","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":537752765,"Kind":"Components.Component","Name":"MudBlazor.MudList","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudList.Color\">\r\n            <summary>\r\n            The color of the selected List Item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudList.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Clickable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudList.Clickable\">\r\n            <summary>\r\n            Set true to make the list items clickable. This is also the precondition for list selection to work.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clickable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisablePadding","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudList.DisablePadding\">\r\n            <summary>\r\n            If true, vertical padding will be removed from the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisablePadding","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudList.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all list items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudList.DisableGutters\">\r\n            <summary>\r\n            If true, the left and right padding is removed on all list items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudList.Disabled\">\r\n            <summary>\r\n            If true, will disable the list item if it has onclick.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"MudBlazor.MudListItem","Documentation":"<member name=\"P:MudBlazor.MudList.SelectedItem\">\r\n            <summary>\r\n            The current selected list item.\r\n            Note: make the list Clickable for item selection to work.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItem","Common.GloballyQualifiedTypeName":"global::MudBlazor.MudListItem"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudListItem>","Documentation":"<member name=\"P:MudBlazor.MudList.SelectedItemChanged\">\r\n            <summary>\r\n            Called whenever the selection changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItemChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudListItem>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedValue","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudList.SelectedValue\">\r\n            <summary>\r\n            The current selected value.\r\n            Note: make the list Clickable for item selection to work.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValue","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"SelectedValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudList.SelectedValueChanged\">\r\n            <summary>\r\n            Called whenever the selection changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudList","Common.TypeNameIdentifier":"MudList","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":514074879,"Kind":"Components.ChildContent","Name":"MudBlazor.MudList.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudList.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudList"}],"Metadata":{"Common.TypeName":"MudBlazor.MudList.ChildContent","Common.TypeNameIdentifier":"MudList","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1000229524,"Kind":"Components.ChildContent","Name":"MudBlazor.MudList.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudList.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudList"}],"Metadata":{"Common.TypeName":"MudBlazor.MudList.ChildContent","Common.TypeNameIdentifier":"MudList","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":305687092,"Kind":"Components.Component","Name":"MudBlazor.MudListItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudListItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.Text\">\r\n            <summary>\r\n            The text to display\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Object","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Avatar","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.Avatar\">\r\n            <summary>\r\n            Avatar to use if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Avatar","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.Href\">\r\n            <summary>\r\n            Link to a URL when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.ForceLoad\">\r\n            <summary>\r\n            If true, force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AvatarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.AvatarClass\">\r\n            <summary>\r\n            Avatar CSS Class to apply if Avatar is set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AvatarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.Disabled\">\r\n            <summary>\r\n            If true, will disable the list item if it has onclick.\r\n            The value can be overridden by the parent list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.Icon\">\r\n            <summary>\r\n            Icon to use if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudListItem.IconColor\">\r\n            <summary>\r\n            The color of the icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudListItem.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudListItem.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ExpandLessIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.ExpandLessIcon\">\r\n            <summary>\r\n            Custom expand less icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandLessIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandMoreIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.ExpandMoreIcon\">\r\n            <summary>\r\n            Custom expand more icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandMoreIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Inset","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.Inset\">\r\n            <summary>\r\n            If true, the List Subheader will be indented.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Inset","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.MudListItem.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.DisableGutters\">\r\n            <summary>\r\n            If true, the left and right padding is removed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.Expanded\">\r\n            <summary>\r\n            Expand or collapse nested list. Two-way bindable. Note: if you directly set this to\r\n            true or false (instead of using two-way binding) it will force the nested list's expansion state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"ExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InitiallyExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.InitiallyExpanded\">\r\n            <summary>\r\n            If true, expands the nested list on first display\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InitiallyExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudListItem.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudListItem.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudListItem.ChildContent\">\r\n            <summary>\r\n            Display content of this list item. If set, this overrides Text\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnClickHandlerPreventDefault","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"OnClickHandlerPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"NestedList","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudListItem.NestedList\">\r\n            <summary>\r\n            Add child list items here to create a nested list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NestedList","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudListItem.OnClick\">\r\n            <summary>\r\n            List click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudListItem","Common.TypeNameIdentifier":"MudListItem","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1149287347,"Kind":"Components.Component","Name":"MudBlazor.MudListItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudListItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.Text\">\r\n            <summary>\r\n            The text to display\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Object","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Avatar","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.Avatar\">\r\n            <summary>\r\n            Avatar to use if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Avatar","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.Href\">\r\n            <summary>\r\n            Link to a URL when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.ForceLoad\">\r\n            <summary>\r\n            If true, force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AvatarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.AvatarClass\">\r\n            <summary>\r\n            Avatar CSS Class to apply if Avatar is set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AvatarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.Disabled\">\r\n            <summary>\r\n            If true, will disable the list item if it has onclick.\r\n            The value can be overridden by the parent list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.Icon\">\r\n            <summary>\r\n            Icon to use if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudListItem.IconColor\">\r\n            <summary>\r\n            The color of the icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudListItem.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudListItem.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ExpandLessIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.ExpandLessIcon\">\r\n            <summary>\r\n            Custom expand less icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandLessIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandMoreIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudListItem.ExpandMoreIcon\">\r\n            <summary>\r\n            Custom expand more icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandMoreIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Inset","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.Inset\">\r\n            <summary>\r\n            If true, the List Subheader will be indented.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Inset","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean?","Documentation":"<member name=\"P:MudBlazor.MudListItem.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.DisableGutters\">\r\n            <summary>\r\n            If true, the left and right padding is removed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.Expanded\">\r\n            <summary>\r\n            Expand or collapse nested list. Two-way bindable. Note: if you directly set this to\r\n            true or false (instead of using two-way binding) it will force the nested list's expansion state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"ExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InitiallyExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudListItem.InitiallyExpanded\">\r\n            <summary>\r\n            If true, expands the nested list on first display\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InitiallyExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudListItem.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudListItem.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudListItem.ChildContent\">\r\n            <summary>\r\n            Display content of this list item. If set, this overrides Text\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnClickHandlerPreventDefault","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"OnClickHandlerPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"NestedList","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudListItem.NestedList\">\r\n            <summary>\r\n            Add child list items here to create a nested list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NestedList","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudListItem.OnClick\">\r\n            <summary>\r\n            List click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudListItem","Common.TypeNameIdentifier":"MudListItem","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1483697169,"Kind":"Components.ChildContent","Name":"MudBlazor.MudListItem.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudListItem.ChildContent\">\r\n            <summary>\r\n            Display content of this list item. If set, this overrides Text\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudListItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudListItem.ChildContent","Common.TypeNameIdentifier":"MudListItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-826153348,"Kind":"Components.ChildContent","Name":"MudBlazor.MudListItem.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudListItem.ChildContent\">\r\n            <summary>\r\n            Display content of this list item. If set, this overrides Text\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudListItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudListItem.ChildContent","Common.TypeNameIdentifier":"MudListItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":754366798,"Kind":"Components.ChildContent","Name":"MudBlazor.MudListItem.NestedList","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudListItem.NestedList\">\r\n            <summary>\r\n            Add child list items here to create a nested list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NestedList","ParentTag":"MudListItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudListItem.NestedList","Common.TypeNameIdentifier":"MudListItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":960781294,"Kind":"Components.ChildContent","Name":"MudBlazor.MudListItem.NestedList","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudListItem.NestedList\">\r\n            <summary>\r\n            Add child list items here to create a nested list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NestedList","ParentTag":"MudBlazor.MudListItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudListItem.NestedList","Common.TypeNameIdentifier":"MudListItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-831134302,"Kind":"Components.Component","Name":"MudBlazor.MudListSubheader","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudListSubheader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Inset","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Inset","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudListSubheader","Common.TypeNameIdentifier":"MudListSubheader","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-396905858,"Kind":"Components.Component","Name":"MudBlazor.MudListSubheader","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudListSubheader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Inset","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Inset","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudListSubheader","Common.TypeNameIdentifier":"MudListSubheader","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":62279417,"Kind":"Components.ChildContent","Name":"MudBlazor.MudListSubheader.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudListSubheader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudListSubheader.ChildContent","Common.TypeNameIdentifier":"MudListSubheader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1224816317,"Kind":"Components.ChildContent","Name":"MudBlazor.MudListSubheader.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudListSubheader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudListSubheader.ChildContent","Common.TypeNameIdentifier":"MudListSubheader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-282973245,"Kind":"Components.Component","Name":"MudBlazor.MudMask","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudMask"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMask.ChildContent\">\r\n            <summary>\r\n            ChildContent will only be displayed if InputType.Hidden and if its not null. Required for Select\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudMask.Mask\">\r\n            <summary>\r\n            Provide a masking object. Built-in masks are PatternMask, MultiMask, RegexMask and BlockMask\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMask.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMask.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudMask.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClearIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMask.ClearIcon\">\r\n            <summary>\r\n            Custom clear icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClearIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.String, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudMask","Common.TypeNameIdentifier":"MudMask","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1923923559,"Kind":"Components.Component","Name":"MudBlazor.MudMask","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudMask"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMask.ChildContent\">\r\n            <summary>\r\n            ChildContent will only be displayed if InputType.Hidden and if its not null. Required for Select\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudMask.Mask\">\r\n            <summary>\r\n            Provide a masking object. Built-in masks are PatternMask, MultiMask, RegexMask and BlockMask\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMask.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMask.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudMask.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClearIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMask.ClearIcon\">\r\n            <summary>\r\n            Custom clear icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClearIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.String, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudMask","Common.TypeNameIdentifier":"MudMask","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":2047610170,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMask.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMask.ChildContent\">\r\n            <summary>\r\n            ChildContent will only be displayed if InputType.Hidden and if its not null. Required for Select\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudMask"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMask.ChildContent","Common.TypeNameIdentifier":"MudMask","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-808735774,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMask.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMask.ChildContent\">\r\n            <summary>\r\n            ChildContent will only be displayed if InputType.Hidden and if its not null. Required for Select\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudMask"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMask.ChildContent","Common.TypeNameIdentifier":"MudMask","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":594554633,"Kind":"Components.Component","Name":"MudBlazor.MudMenu","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenu.ListClass\">\r\n            <summary>\r\n            User class names for the list, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PopoverClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenu.PopoverClass\">\r\n            <summary>\r\n            User class names for the popover, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PopoverClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenu.Icon\">\r\n            <summary>\r\n            Icon to use if set will turn the button into a MudIconButton.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"StartIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenu.StartIcon\">\r\n            <summary>\r\n            Icon placed before the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StartIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenu.EndIcon\">\r\n            <summary>\r\n            Icon placed after the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.Color\">\r\n            <summary>\r\n            The color of the button. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.Size\">\r\n            <summary>\r\n            The button Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.Variant\">\r\n            <summary>\r\n            The button variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all menu items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.FullWidth\">\r\n            <summary>\r\n            If true, the list menu will be same width as the parent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudMenu.MaxHeight\">\r\n            <summary>\r\n            Sets the maxheight the menu can have when open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"PositionAtCursor","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.PositionAtCursor\">\r\n            <summary>\r\n            If true, instead of positioning the menu at the left upper corner, position at the exact cursor location.\r\n            This makes sense for larger activators\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PositionAtCursor","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PositionAtCurser","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.PositionAtCurser\">\r\n            <summary>\r\n            If true, instead of positioning the menu at the left upper corner, position at the exact cursor location.\r\n            This makes sense for larger activators\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PositionAtCurser","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ActivatorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMenu.ActivatorContent\">\r\n            <summary>\r\n            Place a MudButton, a MudIconButton or any other component capable of acting as an activator. This will\r\n            override the standard button and all parameters which concern it.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivatorContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActivationEvent","TypeName":"MudBlazor.MouseEvent","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.ActivationEvent\">\r\n            <summary>\r\n            Specify the activation event when ActivatorContent is set\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivationEvent","Common.GloballyQualifiedTypeName":"global::MudBlazor.MouseEvent"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.AnchorOrigin\">\r\n            <summary>\r\n            Set the anchor origin point to determen where the popover will open from.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.TransformOrigin\">\r\n            <summary>\r\n            Sets the transform origin point for the popover.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MudBlazor.Direction","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.Direction\">\r\n            <summary>\r\n            Sets the direction the select menu will start from relative to its parent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::MudBlazor.Direction"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.OffsetY\">\r\n            <summary>\r\n            If true, the select menu will open either before or after the input depending on the direction.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetY","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.OffsetX\">\r\n            <summary>\r\n            If true, the select menu will open either above or bellow the input depending on the direction.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetX","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LockScroll","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.LockScroll\">\r\n            <summary>\r\n            Set to true if you want to prevent page from scrolling when the menu is open\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LockScroll","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.Disabled\">\r\n            <summary>\r\n            If true, menu will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HtmlTag","TypeName":"System.String","Metadata":{"Common.PropertyName":"HtmlTag","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ButtonType","TypeName":"MudBlazor.ButtonType","IsEnum":true,"Metadata":{"Common.PropertyName":"ButtonType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ButtonType"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMenu.ChildContent\">\r\n            <summary>\r\n            Add menu items here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudMenu","Common.TypeNameIdentifier":"MudMenu","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":2127616193,"Kind":"Components.Component","Name":"MudBlazor.MudMenu","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenu.ListClass\">\r\n            <summary>\r\n            User class names for the list, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PopoverClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenu.PopoverClass\">\r\n            <summary>\r\n            User class names for the popover, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PopoverClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenu.Icon\">\r\n            <summary>\r\n            Icon to use if set will turn the button into a MudIconButton.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"StartIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenu.StartIcon\">\r\n            <summary>\r\n            Icon placed before the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StartIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenu.EndIcon\">\r\n            <summary>\r\n            Icon placed after the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.Color\">\r\n            <summary>\r\n            The color of the button. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.Size\">\r\n            <summary>\r\n            The button Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.Variant\">\r\n            <summary>\r\n            The button variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all menu items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.FullWidth\">\r\n            <summary>\r\n            If true, the list menu will be same width as the parent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudMenu.MaxHeight\">\r\n            <summary>\r\n            Sets the maxheight the menu can have when open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"PositionAtCursor","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.PositionAtCursor\">\r\n            <summary>\r\n            If true, instead of positioning the menu at the left upper corner, position at the exact cursor location.\r\n            This makes sense for larger activators\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PositionAtCursor","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PositionAtCurser","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.PositionAtCurser\">\r\n            <summary>\r\n            If true, instead of positioning the menu at the left upper corner, position at the exact cursor location.\r\n            This makes sense for larger activators\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PositionAtCurser","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ActivatorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMenu.ActivatorContent\">\r\n            <summary>\r\n            Place a MudButton, a MudIconButton or any other component capable of acting as an activator. This will\r\n            override the standard button and all parameters which concern it.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivatorContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActivationEvent","TypeName":"MudBlazor.MouseEvent","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.ActivationEvent\">\r\n            <summary>\r\n            Specify the activation event when ActivatorContent is set\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivationEvent","Common.GloballyQualifiedTypeName":"global::MudBlazor.MouseEvent"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.AnchorOrigin\">\r\n            <summary>\r\n            Set the anchor origin point to determen where the popover will open from.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.TransformOrigin\">\r\n            <summary>\r\n            Sets the transform origin point for the popover.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MudBlazor.Direction","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenu.Direction\">\r\n            <summary>\r\n            Sets the direction the select menu will start from relative to its parent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::MudBlazor.Direction"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.OffsetY\">\r\n            <summary>\r\n            If true, the select menu will open either before or after the input depending on the direction.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetY","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.OffsetX\">\r\n            <summary>\r\n            If true, the select menu will open either above or bellow the input depending on the direction.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetX","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LockScroll","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.LockScroll\">\r\n            <summary>\r\n            Set to true if you want to prevent page from scrolling when the menu is open\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LockScroll","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.Disabled\">\r\n            <summary>\r\n            If true, menu will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMenu.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HtmlTag","TypeName":"System.String","Metadata":{"Common.PropertyName":"HtmlTag","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ButtonType","TypeName":"MudBlazor.ButtonType","IsEnum":true,"Metadata":{"Common.PropertyName":"ButtonType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ButtonType"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMenu.ChildContent\">\r\n            <summary>\r\n            Add menu items here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudMenu","Common.TypeNameIdentifier":"MudMenu","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":495958846,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMenu.ActivatorContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMenu.ActivatorContent\">\r\n            <summary>\r\n            Place a MudButton, a MudIconButton or any other component capable of acting as an activator. This will\r\n            override the standard button and all parameters which concern it.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActivatorContent","ParentTag":"MudMenu"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMenu.ActivatorContent","Common.TypeNameIdentifier":"MudMenu","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":803265107,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMenu.ActivatorContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMenu.ActivatorContent\">\r\n            <summary>\r\n            Place a MudButton, a MudIconButton or any other component capable of acting as an activator. This will\r\n            override the standard button and all parameters which concern it.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActivatorContent","ParentTag":"MudBlazor.MudMenu"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMenu.ActivatorContent","Common.TypeNameIdentifier":"MudMenu","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-786986027,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMenu.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMenu.ChildContent\">\r\n            <summary>\r\n            Add menu items here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudMenu"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMenu.ChildContent","Common.TypeNameIdentifier":"MudMenu","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1334725041,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMenu.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMenu.ChildContent\">\r\n            <summary>\r\n            Add menu items here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudMenu"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMenu.ChildContent","Common.TypeNameIdentifier":"MudMenu","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1456909774,"Kind":"Components.Component","Name":"MudBlazor.MudMenuItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudMenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenuItem.Link\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where (Obsolete replaced by Href)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenuItem.Href\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenuItem.Icon\">\r\n            <summary>\r\n            Icon to be used for this menu entry\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenuItem.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenuItem.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTouch","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Metadata":{"Common.PropertyName":"OnTouch","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudMenuItem","Common.TypeNameIdentifier":"MudMenuItem","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1481720913,"Kind":"Components.Component","Name":"MudBlazor.MudMenuItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudMenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenuItem.Link\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where (Obsolete replaced by Href)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Link","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenuItem.Href\">\r\n            <summary>\r\n            If set to a URL, clicking the button will open the referenced document. Use Target to specify where\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMenuItem.Icon\">\r\n            <summary>\r\n            Icon to be used for this menu entry\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenuItem.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudMenuItem.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTouch","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Metadata":{"Common.PropertyName":"OnTouch","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudMenuItem","Common.TypeNameIdentifier":"MudMenuItem","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1660739648,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMenuItem.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudMenuItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMenuItem.ChildContent","Common.TypeNameIdentifier":"MudMenuItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":865866526,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMenuItem.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudMenuItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMenuItem.ChildContent","Common.TypeNameIdentifier":"MudMenuItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-957198490,"Kind":"Components.Component","Name":"MudBlazor.MudMessageBox","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudMessageBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.Title\">\r\n            <summary>\r\n            The message box title. If null or empty, title will be hidden\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.TitleContent\">\r\n            <summary>\r\n            Define the message box title as a renderfragment (overrides Title)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TitleContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.Message\">\r\n            <summary>\r\n            The message box message as string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Message","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MarkupMessage","TypeName":"Microsoft.AspNetCore.Components.MarkupString","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.MarkupMessage\">\r\n            <summary>\r\n            The message box message as markup string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MarkupMessage","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.MarkupString"}},{"Kind":"Components.Component","Name":"MessageContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.MessageContent\">\r\n            <summary>\r\n            Define the message box body as a renderfragment (overrides Message)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MessageContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CancelText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.CancelText\">\r\n            <summary>\r\n            Text of the cancel button. Leave null to hide the button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CancelText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CancelButton","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.CancelButton\">\r\n            <summary>\r\n            Define the cancel button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CancelButton","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NoText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.NoText\">\r\n            <summary>\r\n            Text of the no button. Leave null to hide the button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NoButton","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.NoButton\">\r\n            <summary>\r\n            Define the no button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoButton","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"YesText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.YesText\">\r\n            <summary>\r\n            Text of the yes/OK button. Leave null to hide the button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"YesText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"YesButton","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.YesButton\">\r\n            <summary>\r\n            Define the cancel button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"YesButton","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnYes","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.OnYes\">\r\n            <summary>\r\n            Fired when the yes button is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnYes","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNo","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.OnNo\">\r\n            <summary>\r\n            Fired when the no button is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnNo","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnCancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.OnCancel\">\r\n            <summary>\r\n            Fired when the cancel button is clicked or the msg box was closed via the X\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnCancel","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.IsVisible\">\r\n            <summary>\r\n            Bind this two-way to show and close an inlined message box. Has no effect on opened msg boxes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsVisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.IsVisibleChanged\">\r\n            <summary>\r\n            Raised when the inline dialog's display status changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisibleChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1253745411,"Kind":"Components.Component","Name":"MudBlazor.MudMessageBox","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudMessageBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.Title\">\r\n            <summary>\r\n            The message box title. If null or empty, title will be hidden\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.TitleContent\">\r\n            <summary>\r\n            Define the message box title as a renderfragment (overrides Title)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TitleContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.Message\">\r\n            <summary>\r\n            The message box message as string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Message","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MarkupMessage","TypeName":"Microsoft.AspNetCore.Components.MarkupString","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.MarkupMessage\">\r\n            <summary>\r\n            The message box message as markup string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MarkupMessage","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.MarkupString"}},{"Kind":"Components.Component","Name":"MessageContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.MessageContent\">\r\n            <summary>\r\n            Define the message box body as a renderfragment (overrides Message)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MessageContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CancelText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.CancelText\">\r\n            <summary>\r\n            Text of the cancel button. Leave null to hide the button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CancelText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CancelButton","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.CancelButton\">\r\n            <summary>\r\n            Define the cancel button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CancelButton","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NoText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.NoText\">\r\n            <summary>\r\n            Text of the no button. Leave null to hide the button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NoButton","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.NoButton\">\r\n            <summary>\r\n            Define the no button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoButton","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"YesText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.YesText\">\r\n            <summary>\r\n            Text of the yes/OK button. Leave null to hide the button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"YesText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"YesButton","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.YesButton\">\r\n            <summary>\r\n            Define the cancel button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"YesButton","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnYes","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.OnYes\">\r\n            <summary>\r\n            Fired when the yes button is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnYes","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNo","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.OnNo\">\r\n            <summary>\r\n            Fired when the no button is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnNo","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnCancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.OnCancel\">\r\n            <summary>\r\n            Fired when the cancel button is clicked or the msg box was closed via the X\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnCancel","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.IsVisible\">\r\n            <summary>\r\n            Bind this two-way to show and close an inlined message box. Has no effect on opened msg boxes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsVisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.IsVisibleChanged\">\r\n            <summary>\r\n            Raised when the inline dialog's display status changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisibleChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-581286399,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMessageBox.TitleContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.TitleContent\">\r\n            <summary>\r\n            Define the message box title as a renderfragment (overrides Title)\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleContent","ParentTag":"MudMessageBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox.TitleContent","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-698227128,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMessageBox.TitleContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.TitleContent\">\r\n            <summary>\r\n            Define the message box title as a renderfragment (overrides Title)\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleContent","ParentTag":"MudBlazor.MudMessageBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox.TitleContent","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-548993014,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMessageBox.MessageContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.MessageContent\">\r\n            <summary>\r\n            Define the message box body as a renderfragment (overrides Message)\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MessageContent","ParentTag":"MudMessageBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox.MessageContent","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1152009833,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMessageBox.MessageContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.MessageContent\">\r\n            <summary>\r\n            Define the message box body as a renderfragment (overrides Message)\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MessageContent","ParentTag":"MudBlazor.MudMessageBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox.MessageContent","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":89646074,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMessageBox.CancelButton","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.CancelButton\">\r\n            <summary>\r\n            Define the cancel button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CancelButton","ParentTag":"MudMessageBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox.CancelButton","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-633115966,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMessageBox.CancelButton","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.CancelButton\">\r\n            <summary>\r\n            Define the cancel button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CancelButton","ParentTag":"MudBlazor.MudMessageBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox.CancelButton","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1767495549,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMessageBox.NoButton","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.NoButton\">\r\n            <summary>\r\n            Define the no button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoButton","ParentTag":"MudMessageBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox.NoButton","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1947926933,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMessageBox.NoButton","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.NoButton\">\r\n            <summary>\r\n            Define the no button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoButton","ParentTag":"MudBlazor.MudMessageBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox.NoButton","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":59049830,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMessageBox.YesButton","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.YesButton\">\r\n            <summary>\r\n            Define the cancel button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"YesButton","ParentTag":"MudMessageBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox.YesButton","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1690712216,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMessageBox.YesButton","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudMessageBox.YesButton\">\r\n            <summary>\r\n            Define the cancel button as a render fragment (overrides CancelText).\r\n            Must be a MudButton\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"YesButton","ParentTag":"MudBlazor.MudMessageBox"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox.YesButton","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1181247893,"Kind":"Components.Component","Name":"MudBlazor.MudNavGroup","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudNavGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.Icon\">\r\n            <summary>\r\n            Icon to use if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudNavGroup.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors, default value uses the themes drawer icon color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.Expanded\">\r\n            <summary>\r\n            If true, expands the nav group, otherwise collapse it. \r\n            Two-way bindable\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"ExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"HideExpandIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.HideExpandIcon\">\r\n            <summary>\r\n            If true, hides expand-icon at the end of the NavGroup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideExpandIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.MaxHeight\">\r\n            <summary>\r\n            Explicitly sets the height for the Collapse element to override the css default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ExpandIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.ExpandIcon\">\r\n            <summary>\r\n            If set, overrides the default expand icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavGroup","Common.TypeNameIdentifier":"MudNavGroup","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1028353874,"Kind":"Components.Component","Name":"MudBlazor.MudNavGroup","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudNavGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.Icon\">\r\n            <summary>\r\n            Icon to use if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudNavGroup.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors, default value uses the themes drawer icon color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.Expanded\">\r\n            <summary>\r\n            If true, expands the nav group, otherwise collapse it. \r\n            Two-way bindable\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"ExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"HideExpandIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.HideExpandIcon\">\r\n            <summary>\r\n            If true, hides expand-icon at the end of the NavGroup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideExpandIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.MaxHeight\">\r\n            <summary>\r\n            Explicitly sets the height for the Collapse element to override the css default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ExpandIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudNavGroup.ExpandIcon\">\r\n            <summary>\r\n            If set, overrides the default expand icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavGroup","Common.TypeNameIdentifier":"MudNavGroup","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1389572983,"Kind":"Components.ChildContent","Name":"MudBlazor.MudNavGroup.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudNavGroup"}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavGroup.ChildContent","Common.TypeNameIdentifier":"MudNavGroup","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":791269907,"Kind":"Components.ChildContent","Name":"MudBlazor.MudNavGroup.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudNavGroup"}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavGroup.ChildContent","Common.TypeNameIdentifier":"MudNavGroup","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":635652513,"Kind":"Components.Component","Name":"MudBlazor.MudNavLink","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudNavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudNavLink.Icon\">\r\n            <summary>\r\n            Icon to use if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudNavLink.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors, default value uses the themes drawer icon color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudNavLink.ActiveClass\">\r\n            <summary>\r\n            User class names when active, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Href\">\r\n            <summary>\r\n            Link to a URL when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ForceLoad\">\r\n            <summary>\r\n            If true, force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavLink","Common.TypeNameIdentifier":"MudNavLink","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1377642194,"Kind":"Components.Component","Name":"MudBlazor.MudNavLink","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudNavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudNavLink.Icon\">\r\n            <summary>\r\n            Icon to use if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudNavLink.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors, default value uses the themes drawer icon color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudNavLink.ActiveClass\">\r\n            <summary>\r\n            User class names when active, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Href\">\r\n            <summary>\r\n            Link to a URL when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ForceLoad\">\r\n            <summary>\r\n            If true, force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavLink","Common.TypeNameIdentifier":"MudNavLink","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1840317517,"Kind":"Components.ChildContent","Name":"MudBlazor.MudNavLink.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudNavLink"}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavLink.ChildContent","Common.TypeNameIdentifier":"MudNavLink","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1139922497,"Kind":"Components.ChildContent","Name":"MudBlazor.MudNavLink.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudNavLink"}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavLink.ChildContent","Common.TypeNameIdentifier":"MudNavLink","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":956354920,"Kind":"Components.Component","Name":"MudBlazor.MudNavMenu","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudNavMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudNavMenu.Color\">\r\n            <summary>\r\n            The color of the active NavLink.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Bordered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavMenu.Bordered\">\r\n            <summary>\r\n            If true, adds a border of the active NavLink, does nothing if variant outlined is used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bordered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavMenu.Rounded\">\r\n            <summary>\r\n            If true, default theme border-radius will be used on all navlinks.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudNavMenu.Margin\">\r\n            <summary>\r\n             Adjust the vertical spacing between navlinks.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavMenu.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all navmenu items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavMenu","Common.TypeNameIdentifier":"MudNavMenu","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1087722407,"Kind":"Components.Component","Name":"MudBlazor.MudNavMenu","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudNavMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudNavMenu.Color\">\r\n            <summary>\r\n            The color of the active NavLink.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Bordered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavMenu.Bordered\">\r\n            <summary>\r\n            If true, adds a border of the active NavLink, does nothing if variant outlined is used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bordered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavMenu.Rounded\">\r\n            <summary>\r\n            If true, default theme border-radius will be used on all navlinks.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudNavMenu.Margin\">\r\n            <summary>\r\n             Adjust the vertical spacing between navlinks.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNavMenu.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all navmenu items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavMenu","Common.TypeNameIdentifier":"MudNavMenu","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1945308439,"Kind":"Components.ChildContent","Name":"MudBlazor.MudNavMenu.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudNavMenu"}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavMenu.ChildContent","Common.TypeNameIdentifier":"MudNavMenu","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2062035533,"Kind":"Components.ChildContent","Name":"MudBlazor.MudNavMenu.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudNavMenu"}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavMenu.ChildContent","Common.TypeNameIdentifier":"MudNavMenu","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1959939591,"Kind":"Components.Component","Name":"MudBlazor.MudNumericField<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudNumericField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudNumericField<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InvertMouseWheel","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.InvertMouseWheel\">\r\n            <summary>\r\n            Reverts mouse wheel up and down events, if true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InvertMouseWheel","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Min","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.Min\">\r\n            <summary>\r\n            The minimum value for the input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Max","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.Max\">\r\n            <summary>\r\n            The maximum value for the input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Step","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.Step\">\r\n            <summary>\r\n            The increment added/subtracted by the spin buttons.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Step","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HideSpinButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.HideSpinButtons\">\r\n            <summary>\r\n            Hides the spin buttons, the user can still change value with keyboard arrows and manual update.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSpinButtons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input.\r\n             Defaults to numeric\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.Pattern\">\r\n             <summary>\r\n             The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n             Defaults to [0-9,.\\-]\r\n             To get a numerical keyboard on safari, use the pattern. The default pattern should achieve numerical keyboard.\r\n            \r\n             Note: this pattern is also used to prevent all input except numbers and allowed characters. So for instance to allow only numbers, no signs and no commas you might change it to to [0-9.]\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DebounceInterval","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.DebounceInterval\">\r\n            <summary>\r\n            Interval to be awaited in milliseconds before changing the Text value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DebounceInterval","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"OnDebounceIntervalElapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.OnDebounceIntervalElapsed\">\r\n            <summary>\r\n            callback to be called when the debounce interval has elapsed\r\n            receives the Text as a parameter\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDebounceIntervalElapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudNumericField<T>","Common.TypeNameIdentifier":"MudNumericField","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-1392841350,"Kind":"Components.Component","Name":"MudBlazor.MudNumericField<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudNumericField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudNumericField<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InvertMouseWheel","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.InvertMouseWheel\">\r\n            <summary>\r\n            Reverts mouse wheel up and down events, if true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InvertMouseWheel","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Min","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.Min\">\r\n            <summary>\r\n            The minimum value for the input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Max","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.Max\">\r\n            <summary>\r\n            The maximum value for the input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Step","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.Step\">\r\n            <summary>\r\n            The increment added/subtracted by the spin buttons.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Step","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HideSpinButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.HideSpinButtons\">\r\n            <summary>\r\n            Hides the spin buttons, the user can still change value with keyboard arrows and manual update.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSpinButtons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input.\r\n             Defaults to numeric\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudNumericField`1.Pattern\">\r\n             <summary>\r\n             The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n             Defaults to [0-9,.\\-]\r\n             To get a numerical keyboard on safari, use the pattern. The default pattern should achieve numerical keyboard.\r\n            \r\n             Note: this pattern is also used to prevent all input except numbers and allowed characters. So for instance to allow only numbers, no signs and no commas you might change it to to [0-9.]\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DebounceInterval","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.DebounceInterval\">\r\n            <summary>\r\n            Interval to be awaited in milliseconds before changing the Text value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DebounceInterval","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"OnDebounceIntervalElapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.OnDebounceIntervalElapsed\">\r\n            <summary>\r\n            callback to be called when the debounce interval has elapsed\r\n            receives the Text as a parameter\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDebounceIntervalElapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudNumericField<T>","Common.TypeNameIdentifier":"MudNumericField","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-584890978,"Kind":"Components.Component","Name":"MudBlazor.MudOverlay","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudOverlay"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudOverlay.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"VisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudOverlay.VisibleChanged\">\r\n            <summary>\r\n            Fires when Visible changes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VisibleChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.Visible\">\r\n            <summary>\r\n            If true overlay will be visible. Two-way bindable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.AutoClose\">\r\n            <summary>\r\n            If true overlay will set Visible false on click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LockScroll","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.LockScroll\">\r\n            <summary>\r\n            If true (default), the Document.body element will not be able to scroll\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LockScroll","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LockScrollClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudOverlay.LockScrollClass\">\r\n            <summary>\r\n            The css class that will be added to body if lockscroll is used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LockScrollClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DarkBackground","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.DarkBackground\">\r\n            <summary>\r\n            If true applys the themes dark overlay color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DarkBackground","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LightBackground","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.LightBackground\">\r\n            <summary>\r\n            If true applys the themes light overlay color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LightBackground","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Absolute","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.Absolute\">\r\n            <summary>\r\n            If true, use absolute positioning for the overlay.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Absolute","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudOverlay.ZIndex\">\r\n            <summary>\r\n            Sets the z-index of the overlay.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ZIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudOverlay.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudOverlay.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudOverlay.OnClick\">\r\n            <summary>\r\n            Fired when the overlay is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudOverlay","Common.TypeNameIdentifier":"MudOverlay","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-587440921,"Kind":"Components.Component","Name":"MudBlazor.MudOverlay","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudOverlay"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudOverlay.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"VisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudOverlay.VisibleChanged\">\r\n            <summary>\r\n            Fires when Visible changes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VisibleChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.Visible\">\r\n            <summary>\r\n            If true overlay will be visible. Two-way bindable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.AutoClose\">\r\n            <summary>\r\n            If true overlay will set Visible false on click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LockScroll","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.LockScroll\">\r\n            <summary>\r\n            If true (default), the Document.body element will not be able to scroll\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LockScroll","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LockScrollClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudOverlay.LockScrollClass\">\r\n            <summary>\r\n            The css class that will be added to body if lockscroll is used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LockScrollClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DarkBackground","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.DarkBackground\">\r\n            <summary>\r\n            If true applys the themes dark overlay color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DarkBackground","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LightBackground","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.LightBackground\">\r\n            <summary>\r\n            If true applys the themes light overlay color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LightBackground","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Absolute","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudOverlay.Absolute\">\r\n            <summary>\r\n            If true, use absolute positioning for the overlay.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Absolute","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudOverlay.ZIndex\">\r\n            <summary>\r\n            Sets the z-index of the overlay.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ZIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudOverlay.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudOverlay.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudOverlay.OnClick\">\r\n            <summary>\r\n            Fired when the overlay is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudOverlay","Common.TypeNameIdentifier":"MudOverlay","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-512616618,"Kind":"Components.ChildContent","Name":"MudBlazor.MudOverlay.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudOverlay.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudOverlay"}],"Metadata":{"Common.TypeName":"MudBlazor.MudOverlay.ChildContent","Common.TypeNameIdentifier":"MudOverlay","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-632099834,"Kind":"Components.ChildContent","Name":"MudBlazor.MudOverlay.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudOverlay.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudOverlay"}],"Metadata":{"Common.TypeName":"MudBlazor.MudOverlay.ChildContent","Common.TypeNameIdentifier":"MudOverlay","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":919432678,"Kind":"Components.Component","Name":"MudBlazor.MudPageContentNavigation","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudPageContentNavigation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Headline","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPageContentNavigation.Headline\">\r\n            <summary>\r\n            The text displayed about the section links. Defaults to \"Conents\"\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Headline","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SectionClassSelector","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPageContentNavigation.SectionClassSelector\">\r\n            <summary>\r\n            The css selector used to identifify the HTML elements that should be observed for viewport changes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SectionClassSelector","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HierarchyMapper","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudPageContentNavigation.HierarchyMapper\">\r\n            <summary>\r\n            If there are mutliple levels, this can specified to make a mapping between a level class likw \"second-level\" and the level in the hierarchy\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HierarchyMapper","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Int32>"}},{"Kind":"Components.Component","Name":"ExpandBehaviour","TypeName":"MudBlazor.ContentNavigationExpandBehaviour","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPageContentNavigation.ExpandBehaviour\">\r\n            <summary>\r\n            If there are multiple levels, this property controls they visibility of them.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandBehaviour","Common.GloballyQualifiedTypeName":"global::MudBlazor.ContentNavigationExpandBehaviour"}},{"Kind":"Components.Component","Name":"ActivateFirstSectionAsDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPageContentNavigation.ActivateFirstSectionAsDefault\">\r\n            <summary>\r\n            If this option is true the first added section will become active when there is no other indication of an active session. Default value is false  \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivateFirstSectionAsDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPageContentNavigation","Common.TypeNameIdentifier":"MudPageContentNavigation","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":363220940,"Kind":"Components.Component","Name":"MudBlazor.MudPageContentNavigation","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudPageContentNavigation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Headline","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPageContentNavigation.Headline\">\r\n            <summary>\r\n            The text displayed about the section links. Defaults to \"Conents\"\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Headline","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SectionClassSelector","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPageContentNavigation.SectionClassSelector\">\r\n            <summary>\r\n            The css selector used to identifify the HTML elements that should be observed for viewport changes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SectionClassSelector","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HierarchyMapper","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudPageContentNavigation.HierarchyMapper\">\r\n            <summary>\r\n            If there are mutliple levels, this can specified to make a mapping between a level class likw \"second-level\" and the level in the hierarchy\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HierarchyMapper","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Int32>"}},{"Kind":"Components.Component","Name":"ExpandBehaviour","TypeName":"MudBlazor.ContentNavigationExpandBehaviour","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPageContentNavigation.ExpandBehaviour\">\r\n            <summary>\r\n            If there are multiple levels, this property controls they visibility of them.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandBehaviour","Common.GloballyQualifiedTypeName":"global::MudBlazor.ContentNavigationExpandBehaviour"}},{"Kind":"Components.Component","Name":"ActivateFirstSectionAsDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPageContentNavigation.ActivateFirstSectionAsDefault\">\r\n            <summary>\r\n            If this option is true the first added section will become active when there is no other indication of an active session. Default value is false  \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivateFirstSectionAsDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPageContentNavigation","Common.TypeNameIdentifier":"MudPageContentNavigation","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":375091528,"Kind":"Components.Component","Name":"MudBlazor.MudPagination","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudPagination"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Count","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPagination.Count\">\r\n            <summary>\r\n            The number of pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Count","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"BoundaryCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPagination.BoundaryCount\">\r\n            <summary>\r\n            The number of items at the start and end of the pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BoundaryCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MiddleCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPagination.MiddleCount\">\r\n            <summary>\r\n            The number of items in the middle of the pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MiddleCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPagination.Selected\">\r\n            <summary>\r\n            The selected page number.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Selected","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPagination.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPagination.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Rectangular","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.Rectangular\">\r\n            <summary>\r\n            If true, the pagination buttons are displayed rectangular.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rectangular","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPagination.Size\">\r\n            <summary>\r\n            The size of the component..\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.Disabled\">\r\n            <summary>\r\n            If true, the pagination will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowFirstButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.ShowFirstButton\">\r\n            <summary>\r\n            If true, the navigate-to-first-page button is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowFirstButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowLastButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.ShowLastButton\">\r\n            <summary>\r\n            If true, the navigate-to-last-page button is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowLastButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowPreviousButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.ShowPreviousButton\">\r\n            <summary>\r\n            If true, the navigate-to-previous-page button is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowPreviousButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowNextButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.ShowNextButton\">\r\n            <summary>\r\n            If true, the navigate-to-next-page button is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowNextButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ControlButtonClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Page>","Documentation":"<member name=\"P:MudBlazor.MudPagination.ControlButtonClicked\">\r\n            <summary>\r\n            Invokes the callback when a control button is clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ControlButtonClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Page>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudPagination.SelectedChanged\">\r\n            <summary>\r\n            Invokes the callback when selected page changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FirstIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPagination.FirstIcon\">\r\n            <summary>\r\n            Custom first icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FirstIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BeforeIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPagination.BeforeIcon\">\r\n            <summary>\r\n            Custom before icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BeforeIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPagination.NextIcon\">\r\n            <summary>\r\n            Custom next icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LastIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPagination.LastIcon\">\r\n            <summary>\r\n            Custom last icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LastIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPagination","Common.TypeNameIdentifier":"MudPagination","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1277067878,"Kind":"Components.Component","Name":"MudBlazor.MudPagination","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudPagination"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Count","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPagination.Count\">\r\n            <summary>\r\n            The number of pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Count","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"BoundaryCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPagination.BoundaryCount\">\r\n            <summary>\r\n            The number of items at the start and end of the pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BoundaryCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MiddleCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPagination.MiddleCount\">\r\n            <summary>\r\n            The number of items in the middle of the pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MiddleCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPagination.Selected\">\r\n            <summary>\r\n            The selected page number.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Selected","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPagination.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPagination.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Rectangular","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.Rectangular\">\r\n            <summary>\r\n            If true, the pagination buttons are displayed rectangular.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rectangular","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPagination.Size\">\r\n            <summary>\r\n            The size of the component..\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"DisableElevation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.DisableElevation\">\r\n            <summary>\r\n            If true, no drop-shadow will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableElevation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.Disabled\">\r\n            <summary>\r\n            If true, the pagination will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowFirstButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.ShowFirstButton\">\r\n            <summary>\r\n            If true, the navigate-to-first-page button is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowFirstButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowLastButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.ShowLastButton\">\r\n            <summary>\r\n            If true, the navigate-to-last-page button is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowLastButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowPreviousButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.ShowPreviousButton\">\r\n            <summary>\r\n            If true, the navigate-to-previous-page button is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowPreviousButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowNextButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPagination.ShowNextButton\">\r\n            <summary>\r\n            If true, the navigate-to-next-page button is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowNextButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ControlButtonClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Page>","Documentation":"<member name=\"P:MudBlazor.MudPagination.ControlButtonClicked\">\r\n            <summary>\r\n            Invokes the callback when a control button is clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ControlButtonClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.Page>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudPagination.SelectedChanged\">\r\n            <summary>\r\n            Invokes the callback when selected page changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FirstIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPagination.FirstIcon\">\r\n            <summary>\r\n            Custom first icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FirstIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BeforeIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPagination.BeforeIcon\">\r\n            <summary>\r\n            Custom before icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BeforeIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPagination.NextIcon\">\r\n            <summary>\r\n            Custom next icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LastIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPagination.LastIcon\">\r\n            <summary>\r\n            Custom last icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LastIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPagination","Common.TypeNameIdentifier":"MudPagination","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1423086324,"Kind":"Components.Component","Name":"MudBlazor.MudPaper","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudPaper"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPaper.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPaper.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPaper.Outlined\">\r\n            <summary>\r\n            If true, card will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.Height\">\r\n            <summary>\r\n            Height of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.Width\">\r\n            <summary>\r\n            Width of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.MaxHeight\">\r\n            <summary>\r\n            Max-Height of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.MaxWidth\">\r\n            <summary>\r\n            Max-Width of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxWidth","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.MinHeight\">\r\n            <summary>\r\n            Min-Height of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinHeight","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.MinWidth\">\r\n            <summary>\r\n            Min-Width of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinWidth","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudPaper.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPaper","Common.TypeNameIdentifier":"MudPaper","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1882254787,"Kind":"Components.Component","Name":"MudBlazor.MudPaper","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudPaper"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPaper.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPaper.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPaper.Outlined\">\r\n            <summary>\r\n            If true, card will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.Height\">\r\n            <summary>\r\n            Height of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.Width\">\r\n            <summary>\r\n            Width of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.MaxHeight\">\r\n            <summary>\r\n            Max-Height of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.MaxWidth\">\r\n            <summary>\r\n            Max-Width of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxWidth","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.MinHeight\">\r\n            <summary>\r\n            Min-Height of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinHeight","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPaper.MinWidth\">\r\n            <summary>\r\n            Min-Width of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinWidth","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudPaper.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPaper","Common.TypeNameIdentifier":"MudPaper","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1472434671,"Kind":"Components.ChildContent","Name":"MudBlazor.MudPaper.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPaper.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudPaper"}],"Metadata":{"Common.TypeName":"MudBlazor.MudPaper.ChildContent","Common.TypeNameIdentifier":"MudPaper","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-346000969,"Kind":"Components.ChildContent","Name":"MudBlazor.MudPaper.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPaper.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudPaper"}],"Metadata":{"Common.TypeName":"MudBlazor.MudPaper.ChildContent","Common.TypeNameIdentifier":"MudPaper","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1832393211,"Kind":"Components.Component","Name":"MudBlazor.MudPicker<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudPicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudPicker<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            Sets the aria-label of the input text field icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerOpened","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerOpened\">\r\n            <summary>\r\n            Fired when the dropdown / dialog opens\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerOpened","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PickerClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerClosed\">\r\n            <summary>\r\n            Fired when the dropdown / dialog closes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0 this is set to true automatically in static mode but can be overridden with Rounded bool.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ReadOnly\">\r\n            <summary>\r\n            If true, no date or time can be defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to theme default when in Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperText\">\r\n            <summary>\r\n            If string has value, HelperText will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Disabled\">\r\n            <summary>\r\n            If true, the picker will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Editable\">\r\n            <summary>\r\n            If true, the picker will be editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.DisableToolbar\">\r\n            <summary>\r\n            Hide toolbar and show only date/time views.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ToolBarClass\">\r\n            <summary>\r\n            User class names for picker's ToolBar, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerVariant","TypeName":"MudBlazor.PickerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerVariant\">\r\n            <summary>\r\n            Picker container option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.PickerVariant"}},{"Kind":"Components.Component","Name":"InputVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputVariant\">\r\n            <summary>\r\n             Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Variant\">\r\n            <summary>\r\n            Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Adornment\">\r\n            <summary>\r\n            Sets if the icon will be att start or end, set to false to disable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Orientation\">\r\n            <summary>\r\n            What orientation to render in when in PickerVariant Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Color\">\r\n            <summary>\r\n            The color of the toolbar, selected and active. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AllowKeyboardInput","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AllowKeyboardInput\">\r\n            <summary>\r\n            Changes the cursor appearance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowKeyboardInput","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Text\">\r\n            <summary>\r\n            The currently selected string value (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudPicker<T>>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudPicker<T>>","Common.PropertyName":"PickerActions","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Mask\">\r\n            <summary>\r\n            A mask for structured input of the date (requires Editable to be true).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AnchorOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's anchor. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TransformOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's transform. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPicker<T>","Common.TypeNameIdentifier":"MudPicker","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-358354466,"Kind":"Components.Component","Name":"MudBlazor.MudPicker<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudPicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudPicker<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            Sets the aria-label of the input text field icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerOpened","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerOpened\">\r\n            <summary>\r\n            Fired when the dropdown / dialog opens\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerOpened","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PickerClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerClosed\">\r\n            <summary>\r\n            Fired when the dropdown / dialog closes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0 this is set to true automatically in static mode but can be overridden with Rounded bool.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ReadOnly\">\r\n            <summary>\r\n            If true, no date or time can be defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to theme default when in Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperText\">\r\n            <summary>\r\n            If string has value, HelperText will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Disabled\">\r\n            <summary>\r\n            If true, the picker will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Editable\">\r\n            <summary>\r\n            If true, the picker will be editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.DisableToolbar\">\r\n            <summary>\r\n            Hide toolbar and show only date/time views.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ToolBarClass\">\r\n            <summary>\r\n            User class names for picker's ToolBar, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerVariant","TypeName":"MudBlazor.PickerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerVariant\">\r\n            <summary>\r\n            Picker container option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.PickerVariant"}},{"Kind":"Components.Component","Name":"InputVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputVariant\">\r\n            <summary>\r\n             Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Variant\">\r\n            <summary>\r\n            Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Adornment\">\r\n            <summary>\r\n            Sets if the icon will be att start or end, set to false to disable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Orientation\">\r\n            <summary>\r\n            What orientation to render in when in PickerVariant Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Color\">\r\n            <summary>\r\n            The color of the toolbar, selected and active. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AllowKeyboardInput","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AllowKeyboardInput\">\r\n            <summary>\r\n            Changes the cursor appearance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowKeyboardInput","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Text\">\r\n            <summary>\r\n            The currently selected string value (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudPicker<T>>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudPicker<T>>","Common.PropertyName":"PickerActions","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Mask\">\r\n            <summary>\r\n            A mask for structured input of the date (requires Editable to be true).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AnchorOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's anchor. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TransformOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's transform. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPicker<T>","Common.TypeNameIdentifier":"MudPicker","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-465091219,"Kind":"Components.ChildContent","Name":"MudBlazor.MudPicker<T>.PickerActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PickerActions","ParentTag":"MudPicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PickerActions"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPicker<T>.PickerActions","Common.TypeNameIdentifier":"MudPicker","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-713697853,"Kind":"Components.ChildContent","Name":"MudBlazor.MudPicker<T>.PickerActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PickerActions","ParentTag":"MudBlazor.MudPicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PickerActions"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPicker<T>.PickerActions","Common.TypeNameIdentifier":"MudPicker","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":773713185,"Kind":"Components.Component","Name":"MudBlazor.MudPopover","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudPopover"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudPopover.MaxHeight\">\r\n            <summary>\r\n            Sets the maxheight the popover can have when open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Paper","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.Paper\">\r\n            <summary>\r\n            If true, will apply default MudPaper classes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Paper","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPopover.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Open","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.Open\">\r\n            <summary>\r\n            If true, the popover is visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Open","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Fixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.Fixed\">\r\n            <summary>\r\n            If true the popover will be fixed position instead of absolute.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudPopover.Duration\">\r\n            <summary>\r\n            Sets the length of time that the opening transition takes to complete.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Duration","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudPopover.Delay\">\r\n            <summary>\r\n            Sets the amount of time in milliseconds to wait from opening the popover before beginning to perform the transition. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MudBlazor.Direction","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPopover.Direction\">\r\n            <summary>\r\n            Sets the direction the popover will start from relative to its parent.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::MudBlazor.Direction"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPopover.AnchorOrigin\">\r\n            <summary>\r\n            Set the anchor point on the element of the popover.\r\n            The anchor point will determinate where the popover will be placed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPopover.TransformOrigin\">\r\n            <summary>\r\n            Sets the intersection point if the anchor element. At this point the popover will lay above the popover. \r\n            This property in conjunction with AnchorPlacement determinate where the popover will be placed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"OverflowBehavior","TypeName":"MudBlazor.OverflowBehavior","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPopover.OverflowBehavior\">\r\n            <summary>\r\n            Set the overflow behavior of a popover and controls how the element should react if there is not enough space for the element to be visible\r\n            Defaults to none, which doens't apply any overflow logic\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverflowBehavior","Common.GloballyQualifiedTypeName":"global::MudBlazor.OverflowBehavior"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.OffsetX\">\r\n            <summary>\r\n            If true, the select menu will open either above or bellow the input depending on the direction.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetX","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.OffsetY\">\r\n            <summary>\r\n            If true, the select menu will open either before or after the input depending on the direction.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetY","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RelativeWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.RelativeWidth\">\r\n            <summary>\r\n            If true, the popover will have the same width at its parent element, default to false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RelativeWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudPopover.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPopover","Common.TypeNameIdentifier":"MudPopover","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-264070946,"Kind":"Components.Component","Name":"MudBlazor.MudPopover","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudPopover"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudPopover.MaxHeight\">\r\n            <summary>\r\n            Sets the maxheight the popover can have when open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Paper","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.Paper\">\r\n            <summary>\r\n            If true, will apply default MudPaper classes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Paper","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPopover.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Open","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.Open\">\r\n            <summary>\r\n            If true, the popover is visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Open","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Fixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.Fixed\">\r\n            <summary>\r\n            If true the popover will be fixed position instead of absolute.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudPopover.Duration\">\r\n            <summary>\r\n            Sets the length of time that the opening transition takes to complete.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Duration","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudPopover.Delay\">\r\n            <summary>\r\n            Sets the amount of time in milliseconds to wait from opening the popover before beginning to perform the transition. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MudBlazor.Direction","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPopover.Direction\">\r\n            <summary>\r\n            Sets the direction the popover will start from relative to its parent.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::MudBlazor.Direction"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPopover.AnchorOrigin\">\r\n            <summary>\r\n            Set the anchor point on the element of the popover.\r\n            The anchor point will determinate where the popover will be placed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPopover.TransformOrigin\">\r\n            <summary>\r\n            Sets the intersection point if the anchor element. At this point the popover will lay above the popover. \r\n            This property in conjunction with AnchorPlacement determinate where the popover will be placed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"OverflowBehavior","TypeName":"MudBlazor.OverflowBehavior","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPopover.OverflowBehavior\">\r\n            <summary>\r\n            Set the overflow behavior of a popover and controls how the element should react if there is not enough space for the element to be visible\r\n            Defaults to none, which doens't apply any overflow logic\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverflowBehavior","Common.GloballyQualifiedTypeName":"global::MudBlazor.OverflowBehavior"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.OffsetX\">\r\n            <summary>\r\n            If true, the select menu will open either above or bellow the input depending on the direction.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetX","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.OffsetY\">\r\n            <summary>\r\n            If true, the select menu will open either before or after the input depending on the direction.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetY","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RelativeWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPopover.RelativeWidth\">\r\n            <summary>\r\n            If true, the popover will have the same width at its parent element, default to false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RelativeWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudPopover.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPopover","Common.TypeNameIdentifier":"MudPopover","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1540604989,"Kind":"Components.ChildContent","Name":"MudBlazor.MudPopover.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPopover.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudPopover"}],"Metadata":{"Common.TypeName":"MudBlazor.MudPopover.ChildContent","Common.TypeNameIdentifier":"MudPopover","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1208755797,"Kind":"Components.ChildContent","Name":"MudBlazor.MudPopover.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPopover.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudPopover"}],"Metadata":{"Common.TypeName":"MudBlazor.MudPopover.ChildContent","Common.TypeNameIdentifier":"MudPopover","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1058346371,"Kind":"Components.Component","Name":"MudBlazor.MudPopoverProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudPopoverProvider"}],"Metadata":{"Common.TypeName":"MudBlazor.MudPopoverProvider","Common.TypeNameIdentifier":"MudPopoverProvider","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1166003547,"Kind":"Components.Component","Name":"MudBlazor.MudPopoverProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudPopoverProvider"}],"Metadata":{"Common.TypeName":"MudBlazor.MudPopoverProvider","Common.TypeNameIdentifier":"MudPopoverProvider","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":540504424,"Kind":"Components.Component","Name":"MudBlazor.MudProgressCircular","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudProgressCircular"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudProgressCircular.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudProgressCircular.Size\">\r\n            <summary>\r\n            The size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressCircular.Indeterminate\">\r\n            <summary>\r\n            Constantly animates, does not follow any value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Indeterminate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"StrokeWidth","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Minimum","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Maximum","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudProgressCircular","Common.TypeNameIdentifier":"MudProgressCircular","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1215206326,"Kind":"Components.Component","Name":"MudBlazor.MudProgressCircular","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudProgressCircular"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudProgressCircular.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudProgressCircular.Size\">\r\n            <summary>\r\n            The size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressCircular.Indeterminate\">\r\n            <summary>\r\n            Constantly animates, does not follow any value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Indeterminate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"StrokeWidth","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Minimum","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Maximum","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudProgressCircular","Common.TypeNameIdentifier":"MudProgressCircular","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1209019623,"Kind":"Components.Component","Name":"MudBlazor.MudProgressLinear","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudProgressLinear"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Size\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Indeterminate\">\r\n            <summary>\r\n            Constantly animates, does not follow any value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Indeterminate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Buffer","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Buffer\">\r\n            <summary>\r\n            If true, the buffer value will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Buffer","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to the themes default value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Striped\">\r\n            <summary>\r\n            Adds stripes to the filled part of the linear progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Vertical","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Vertical\">\r\n            <summary>\r\n            If true, the progress bar  will be displayed vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Vertical","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Min\">\r\n            <summary>\r\n            The minimum allowed value of the linear progress. Should not be equal to max.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Max\">\r\n            <summary>\r\n            The maximum allowed value of the linear progress. Should not be equal to min.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Value\">\r\n            <summary>\r\n            The maximum allowed value of the linear progress. Should not be equal to min.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"BufferValue","TypeName":"System.Double","Metadata":{"Common.PropertyName":"BufferValue","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Minimum","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Maximum","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudProgressLinear","Common.TypeNameIdentifier":"MudProgressLinear","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-195325895,"Kind":"Components.Component","Name":"MudBlazor.MudProgressLinear","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudProgressLinear"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Size\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Indeterminate\">\r\n            <summary>\r\n            Constantly animates, does not follow any value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Indeterminate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Buffer","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Buffer\">\r\n            <summary>\r\n            If true, the buffer value will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Buffer","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to the themes default value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Striped\">\r\n            <summary>\r\n            Adds stripes to the filled part of the linear progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Vertical","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Vertical\">\r\n            <summary>\r\n            If true, the progress bar  will be displayed vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Vertical","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Min\">\r\n            <summary>\r\n            The minimum allowed value of the linear progress. Should not be equal to max.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Max\">\r\n            <summary>\r\n            The maximum allowed value of the linear progress. Should not be equal to min.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.Value\">\r\n            <summary>\r\n            The maximum allowed value of the linear progress. Should not be equal to min.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"BufferValue","TypeName":"System.Double","Metadata":{"Common.PropertyName":"BufferValue","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Minimum","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Maximum","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudProgressLinear","Common.TypeNameIdentifier":"MudProgressLinear","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1951469449,"Kind":"Components.ChildContent","Name":"MudBlazor.MudProgressLinear.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudProgressLinear"}],"Metadata":{"Common.TypeName":"MudBlazor.MudProgressLinear.ChildContent","Common.TypeNameIdentifier":"MudProgressLinear","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1712367840,"Kind":"Components.ChildContent","Name":"MudBlazor.MudProgressLinear.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudProgressLinear.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudProgressLinear"}],"Metadata":{"Common.TypeName":"MudBlazor.MudProgressLinear.ChildContent","Common.TypeNameIdentifier":"MudProgressLinear","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":444488802,"Kind":"Components.Component","Name":"MudBlazor.MudRadio<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudRadio<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"UnCheckedColor","TypeName":"MudBlazor.Color?","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.UnCheckedColor\">\r\n            <summary>\r\n            The base color of the component in its none active/unchecked state. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UnCheckedColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color?"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"MudBlazor.Placement","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Placement\">\r\n            <summary>\r\n            The position of the child content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::MudBlazor.Placement"}},{"Kind":"Components.Component","Name":"Option","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Option\">\r\n            <summary>\r\n            The value to associate to the button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Option","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Dense\">\r\n            <summary>\r\n            If true, compact padding will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Size\">\r\n            <summary>\r\n            The Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRadio<T>","Common.TypeNameIdentifier":"MudRadio","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":2106403111,"Kind":"Components.Component","Name":"MudBlazor.MudRadio<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudRadio<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"UnCheckedColor","TypeName":"MudBlazor.Color?","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.UnCheckedColor\">\r\n            <summary>\r\n            The base color of the component in its none active/unchecked state. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UnCheckedColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color?"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"MudBlazor.Placement","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Placement\">\r\n            <summary>\r\n            The position of the child content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::MudBlazor.Placement"}},{"Kind":"Components.Component","Name":"Option","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Option\">\r\n            <summary>\r\n            The value to associate to the button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Option","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Dense\">\r\n            <summary>\r\n            If true, compact padding will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Size\">\r\n            <summary>\r\n            The Size of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.Disabled\">\r\n            <summary>\r\n            If true, the button will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRadio<T>","Common.TypeNameIdentifier":"MudRadio","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":968979820,"Kind":"Components.ChildContent","Name":"MudBlazor.MudRadio<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudRadio"}],"Metadata":{"Common.TypeName":"MudBlazor.MudRadio<T>.ChildContent","Common.TypeNameIdentifier":"MudRadio","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1970359252,"Kind":"Components.ChildContent","Name":"MudBlazor.MudRadio<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudRadio`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudRadio"}],"Metadata":{"Common.TypeName":"MudBlazor.MudRadio<T>.ChildContent","Common.TypeNameIdentifier":"MudRadio","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-722682741,"Kind":"Components.Component","Name":"MudBlazor.MudRadioGroup<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudRadioGroup<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRadioGroup`1.InputClass\">\r\n            <summary>\r\n            User class names for the input, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRadioGroup`1.InputStyle\">\r\n            <summary>\r\n            User style definitions for the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SelectedOption","TypeName":"T","Metadata":{"Common.PropertyName":"SelectedOption","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedOptionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"SelectedOptionChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, T>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRadioGroup<T>","Common.TypeNameIdentifier":"MudRadioGroup","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":72457818,"Kind":"Components.Component","Name":"MudBlazor.MudRadioGroup<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudRadioGroup<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRadioGroup`1.InputClass\">\r\n            <summary>\r\n            User class names for the input, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRadioGroup`1.InputStyle\">\r\n            <summary>\r\n            User style definitions for the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SelectedOption","TypeName":"T","Metadata":{"Common.PropertyName":"SelectedOption","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedOptionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"SelectedOptionChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, T>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRadioGroup<T>","Common.TypeNameIdentifier":"MudRadioGroup","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1530534730,"Kind":"Components.ChildContent","Name":"MudBlazor.MudRadioGroup<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudRadioGroup"}],"Metadata":{"Common.TypeName":"MudBlazor.MudRadioGroup<T>.ChildContent","Common.TypeNameIdentifier":"MudRadioGroup","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-999264273,"Kind":"Components.ChildContent","Name":"MudBlazor.MudRadioGroup<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudRadioGroup"}],"Metadata":{"Common.TypeName":"MudBlazor.MudRadioGroup<T>.ChildContent","Common.TypeNameIdentifier":"MudRadioGroup","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":892263176,"Kind":"Components.Component","Name":"MudBlazor.MudRating","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRating"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RatingItemsClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRating.RatingItemsClass\">\r\n            <summary>\r\n            User class names for RatingItems, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RatingItemsClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RatingItemsStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRating.RatingItemsStyle\">\r\n            <summary>\r\n            User styles for RatingItems.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RatingItemsStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRating.Name\">\r\n            <summary>\r\n            Input name. If not initialized, name will be random guid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxValue","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudRating.MaxValue\">\r\n            <summary>\r\n            Max value and how many elements to click will be generated. Default: 5\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxValue","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"FullIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRating.FullIcon\">\r\n            <summary>\r\n            Selected or hovered icon. Default @Icons.Material.Star\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EmptyIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRating.EmptyIcon\">\r\n            <summary>\r\n            Non selected item icon. Default @Icons.Material.StarBorder\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EmptyIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRating.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRating.Size\">\r\n            <summary>\r\n            The Size of the icons.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRating.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRating.Disabled\">\r\n            <summary>\r\n            If true, the controls will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRating.ReadOnly\">\r\n            <summary>\r\n            If true, the ratings will show without interactions.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectedValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudRating.SelectedValueChanged\">\r\n            <summary>\r\n            Fires when SelectedValue changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedValue","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudRating.SelectedValue\">\r\n            <summary>\r\n            Selected value. This property is two-way bindable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValue","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"HoveredValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"<member name=\"P:MudBlazor.MudRating.HoveredValueChanged\">\r\n            <summary>\r\n            Fires when hovered value change. Value will be null if no rating item is hovered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HoveredValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRating","Common.TypeNameIdentifier":"MudRating","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1863476286,"Kind":"Components.Component","Name":"MudBlazor.MudRating","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRating"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RatingItemsClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRating.RatingItemsClass\">\r\n            <summary>\r\n            User class names for RatingItems, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RatingItemsClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RatingItemsStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRating.RatingItemsStyle\">\r\n            <summary>\r\n            User styles for RatingItems.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RatingItemsStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRating.Name\">\r\n            <summary>\r\n            Input name. If not initialized, name will be random guid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxValue","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudRating.MaxValue\">\r\n            <summary>\r\n            Max value and how many elements to click will be generated. Default: 5\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxValue","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"FullIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRating.FullIcon\">\r\n            <summary>\r\n            Selected or hovered icon. Default @Icons.Material.Star\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EmptyIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudRating.EmptyIcon\">\r\n            <summary>\r\n            Non selected item icon. Default @Icons.Material.StarBorder\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EmptyIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRating.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRating.Size\">\r\n            <summary>\r\n            The Size of the icons.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRating.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRating.Disabled\">\r\n            <summary>\r\n            If true, the controls will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRating.ReadOnly\">\r\n            <summary>\r\n            If true, the ratings will show without interactions.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectedValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudRating.SelectedValueChanged\">\r\n            <summary>\r\n            Fires when SelectedValue changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedValue","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudRating.SelectedValue\">\r\n            <summary>\r\n            Selected value. This property is two-way bindable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValue","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"HoveredValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"<member name=\"P:MudBlazor.MudRating.HoveredValueChanged\">\r\n            <summary>\r\n            Fires when hovered value change. Value will be null if no rating item is hovered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HoveredValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRating","Common.TypeNameIdentifier":"MudRating","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":48289321,"Kind":"Components.Component","Name":"MudBlazor.MudRatingItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRatingItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemValue","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.ItemValue\">\r\n            <summary>\r\n            This rating item value;\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemValue","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRatingItem.Size\">\r\n            <summary>\r\n            The Size of the icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRatingItem.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.Disabled\">\r\n            <summary>\r\n            If true, the controls will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.ReadOnly\">\r\n            <summary>\r\n            If true, the item will be readonly.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ItemClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.ItemClicked\">\r\n            <summary>\r\n            Fires when element clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemHovered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.ItemHovered\">\r\n            <summary>\r\n            Fires when element hovered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemHovered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRatingItem","Common.TypeNameIdentifier":"MudRatingItem","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":631807863,"Kind":"Components.Component","Name":"MudBlazor.MudRatingItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRatingItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemValue","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.ItemValue\">\r\n            <summary>\r\n            This rating item value;\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemValue","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRatingItem.Size\">\r\n            <summary>\r\n            The Size of the icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudRatingItem.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.Disabled\">\r\n            <summary>\r\n            If true, the controls will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.ReadOnly\">\r\n            <summary>\r\n            If true, the item will be readonly.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ItemClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.ItemClicked\">\r\n            <summary>\r\n            Fires when element clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemHovered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"<member name=\"P:MudBlazor.MudRatingItem.ItemHovered\">\r\n            <summary>\r\n            Fires when element hovered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemHovered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRatingItem","Common.TypeNameIdentifier":"MudRatingItem","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1316510716,"Kind":"Components.Component","Name":"MudBlazor.MudRTLProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRTLProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RightToLeft","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRTLProvider.RightToLeft\">\r\n            <summary>\r\n            If true, changes the layout to RightToLeft.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RightToLeft","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudRTLProvider.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRTLProvider","Common.TypeNameIdentifier":"MudRTLProvider","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-590127696,"Kind":"Components.Component","Name":"MudBlazor.MudRTLProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRTLProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RightToLeft","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudRTLProvider.RightToLeft\">\r\n            <summary>\r\n            If true, changes the layout to RightToLeft.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RightToLeft","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudRTLProvider.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRTLProvider","Common.TypeNameIdentifier":"MudRTLProvider","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-797286142,"Kind":"Components.ChildContent","Name":"MudBlazor.MudRTLProvider.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudRTLProvider.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudRTLProvider"}],"Metadata":{"Common.TypeName":"MudBlazor.MudRTLProvider.ChildContent","Common.TypeNameIdentifier":"MudRTLProvider","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":220154888,"Kind":"Components.ChildContent","Name":"MudBlazor.MudRTLProvider.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudRTLProvider.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudRTLProvider"}],"Metadata":{"Common.TypeName":"MudBlazor.MudRTLProvider.ChildContent","Common.TypeNameIdentifier":"MudRTLProvider","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-391893393,"Kind":"Components.Component","Name":"MudBlazor.MudScrollToTop","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudScrollToTop"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.Selector\">\r\n            <summary>\r\n            The CSS selector to which the scroll event will be attached\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Selector","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.Visible\">\r\n            <summary>\r\n            If set to true, it starts Visible. If sets to false, it will become visible when the TopOffset amount of scrolled pixels is reached\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"VisibleCssClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.VisibleCssClass\">\r\n            <summary>\r\n            CSS class for the Visible state. Here, apply some transitions and animations that will happen when the component becomes visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VisibleCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HiddenCssClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.HiddenCssClass\">\r\n            <summary>\r\n            CSS class for the Hidden state. Here, apply some transitions and animations that will happen when the component becomes invisible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HiddenCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TopOffset","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.TopOffset\">\r\n            <summary>\r\n            The distance in pixels scrolled from the top of the selected element from which \r\n            the component becomes visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TopOffset","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ScrollBehavior","TypeName":"MudBlazor.ScrollBehavior","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.ScrollBehavior\">\r\n            <summary>\r\n            Smooth or Auto\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ScrollBehavior","Common.GloballyQualifiedTypeName":"global::MudBlazor.ScrollBehavior"}},{"Kind":"Components.Component","Name":"OnScroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.ScrollEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.OnScroll\">\r\n            <summary>\r\n            Called when scroll event is fired\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnScroll","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.ScrollEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudScrollToTop","Common.TypeNameIdentifier":"MudScrollToTop","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-121865426,"Kind":"Components.Component","Name":"MudBlazor.MudScrollToTop","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudScrollToTop"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.Selector\">\r\n            <summary>\r\n            The CSS selector to which the scroll event will be attached\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Selector","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.Visible\">\r\n            <summary>\r\n            If set to true, it starts Visible. If sets to false, it will become visible when the TopOffset amount of scrolled pixels is reached\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"VisibleCssClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.VisibleCssClass\">\r\n            <summary>\r\n            CSS class for the Visible state. Here, apply some transitions and animations that will happen when the component becomes visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VisibleCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HiddenCssClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.HiddenCssClass\">\r\n            <summary>\r\n            CSS class for the Hidden state. Here, apply some transitions and animations that will happen when the component becomes invisible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HiddenCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TopOffset","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.TopOffset\">\r\n            <summary>\r\n            The distance in pixels scrolled from the top of the selected element from which \r\n            the component becomes visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TopOffset","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ScrollBehavior","TypeName":"MudBlazor.ScrollBehavior","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.ScrollBehavior\">\r\n            <summary>\r\n            Smooth or Auto\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ScrollBehavior","Common.GloballyQualifiedTypeName":"global::MudBlazor.ScrollBehavior"}},{"Kind":"Components.Component","Name":"OnScroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.ScrollEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudScrollToTop.OnScroll\">\r\n            <summary>\r\n            Called when scroll event is fired\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnScroll","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.ScrollEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudScrollToTop","Common.TypeNameIdentifier":"MudScrollToTop","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1544505575,"Kind":"Components.ChildContent","Name":"MudBlazor.MudScrollToTop.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudScrollToTop"}],"Metadata":{"Common.TypeName":"MudBlazor.MudScrollToTop.ChildContent","Common.TypeNameIdentifier":"MudScrollToTop","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1007133004,"Kind":"Components.ChildContent","Name":"MudBlazor.MudScrollToTop.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudScrollToTop"}],"Metadata":{"Common.TypeName":"MudBlazor.MudScrollToTop.ChildContent","Common.TypeNameIdentifier":"MudScrollToTop","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1149244061,"Kind":"Components.Component","Name":"MudBlazor.MudSelect<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudSelect<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OnOpen\">\r\n            <summary>\r\n            Fired when dropdown opens.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnOpen","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OnClose\">\r\n            <summary>\r\n            Fired when dropdown closes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClose","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.ChildContent\">\r\n            <summary>\r\n            Add the MudSelectItems here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PopoverClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.PopoverClass\">\r\n            <summary>\r\n            User class names for the popover, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PopoverClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.ListClass\">\r\n            <summary>\r\n            User class names for the internal list, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all Select items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OpenIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OpenIcon\">\r\n            <summary>\r\n            The Open Select Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.CloseIcon\">\r\n            <summary>\r\n            The Close Select Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SelectAll","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.SelectAll\">\r\n            <summary>\r\n            If set to true and the MultiSelection option is set to true, a \"select all\" checkbox is added at the top of the list of items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectAll","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectAllText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.SelectAllText\">\r\n            <summary>\r\n            Define the text of the Select All option.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectAllText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SelectedValuesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<T>>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.SelectedValuesChanged\">\r\n            <summary>\r\n            Fires when SelectedValues changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.IEnumerable<T>>","Common.PropertyName":"SelectedValuesChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MultiSelectionTextFunc","TypeName":"System.Func<System.Collections.Generic.List<System.String>, System.String>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.MultiSelectionTextFunc\">\r\n            <summary>\r\n            Function to define a customized multiselection text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Collections.Generic.List<global::System.String>, global::System.String>","Common.PropertyName":"MultiSelectionTextFunc","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Delimiter","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Delimiter\">\r\n            <summary>\r\n            Parameter to define the delimited string separator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Delimiter","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SelectedValues","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.SelectedValues\">\r\n            <summary>\r\n            Set of selected values. If MultiSelection is false it will only ever contain a single value. This property is two-way bindable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValues","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Comparer","TypeName":"System.Collections.Generic.IEqualityComparer<T>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Comparer\">\r\n            <summary>\r\n            The Comparer to use for comparing selected values internally.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Comparer","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEqualityComparer<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ToStringFunc","TypeName":"System.Func<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.ToStringFunc\">\r\n            <summary>\r\n            Defines how values are displayed in the drop-down list\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"ToStringFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"MultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.MultiSelection\">\r\n            <summary>\r\n            If true, multiple values can be selected via checkboxes which are automatically shown in the dropdown\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.MaxHeight\">\r\n            <summary>\r\n            Sets the maxheight the Select can have when open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSelect`1.AnchorOrigin\">\r\n            <summary>\r\n            Set the anchor origin point to determen where the popover will open from.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSelect`1.TransformOrigin\">\r\n            <summary>\r\n            Sets the transform origin point for the popover.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MudBlazor.Direction","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Direction\">\r\n            <summary>\r\n            Sets the direction the Select menu should open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::MudBlazor.Direction"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OffsetX\">\r\n            <summary>\r\n            If true, the Select menu will open either before or after the input (left/right).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetX","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OffsetY\">\r\n            <summary>\r\n            If true, the Select menu will open either before or after the input (top/bottom).\r\n            </summary>\r\n            [ExcludeFromCodeCoverage]\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetY","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Strict","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Strict\">\r\n            <summary>\r\n            If true, the Select's input will not show any values that are not defined in the dropdown.\r\n            This can be useful if Value is bound to a variable which is initialized to a value which is not in the list\r\n            and you want the Select to show the label / placeholder instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Strict","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LockScroll","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.LockScroll\">\r\n            <summary>\r\n            If true, prevent scrolling while dropdown is open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LockScroll","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.CheckedIcon\">\r\n            <summary>\r\n            Custom checked icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UncheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.UncheckedIcon\">\r\n            <summary>\r\n            Custom unchecked icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UncheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IndeterminateIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.IndeterminateIcon\">\r\n            <summary>\r\n            Custom indeterminate icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IndeterminateIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelect<T>","Common.TypeNameIdentifier":"MudSelect","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":557261729,"Kind":"Components.Component","Name":"MudBlazor.MudSelect<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudSelect<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OnOpen\">\r\n            <summary>\r\n            Fired when dropdown opens.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnOpen","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OnClose\">\r\n            <summary>\r\n            Fired when dropdown closes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClose","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.ChildContent\">\r\n            <summary>\r\n            Add the MudSelectItems here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PopoverClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.PopoverClass\">\r\n            <summary>\r\n            User class names for the popover, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PopoverClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.ListClass\">\r\n            <summary>\r\n            User class names for the internal list, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all Select items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OpenIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OpenIcon\">\r\n            <summary>\r\n            The Open Select Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.CloseIcon\">\r\n            <summary>\r\n            The Close Select Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SelectAll","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.SelectAll\">\r\n            <summary>\r\n            If set to true and the MultiSelection option is set to true, a \"select all\" checkbox is added at the top of the list of items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectAll","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectAllText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.SelectAllText\">\r\n            <summary>\r\n            Define the text of the Select All option.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectAllText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SelectedValuesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<T>>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.SelectedValuesChanged\">\r\n            <summary>\r\n            Fires when SelectedValues changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.IEnumerable<T>>","Common.PropertyName":"SelectedValuesChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MultiSelectionTextFunc","TypeName":"System.Func<System.Collections.Generic.List<System.String>, System.String>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.MultiSelectionTextFunc\">\r\n            <summary>\r\n            Function to define a customized multiselection text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Collections.Generic.List<global::System.String>, global::System.String>","Common.PropertyName":"MultiSelectionTextFunc","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Delimiter","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Delimiter\">\r\n            <summary>\r\n            Parameter to define the delimited string separator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Delimiter","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SelectedValues","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.SelectedValues\">\r\n            <summary>\r\n            Set of selected values. If MultiSelection is false it will only ever contain a single value. This property is two-way bindable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedValues","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Comparer","TypeName":"System.Collections.Generic.IEqualityComparer<T>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Comparer\">\r\n            <summary>\r\n            The Comparer to use for comparing selected values internally.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Comparer","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEqualityComparer<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ToStringFunc","TypeName":"System.Func<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.ToStringFunc\">\r\n            <summary>\r\n            Defines how values are displayed in the drop-down list\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.String>","Common.PropertyName":"ToStringFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"MultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.MultiSelection\">\r\n            <summary>\r\n            If true, multiple values can be selected via checkboxes which are automatically shown in the dropdown\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.MaxHeight\">\r\n            <summary>\r\n            Sets the maxheight the Select can have when open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSelect`1.AnchorOrigin\">\r\n            <summary>\r\n            Set the anchor origin point to determen where the popover will open from.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSelect`1.TransformOrigin\">\r\n            <summary>\r\n            Sets the transform origin point for the popover.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MudBlazor.Direction","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Direction\">\r\n            <summary>\r\n            Sets the direction the Select menu should open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::MudBlazor.Direction"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OffsetX\">\r\n            <summary>\r\n            If true, the Select menu will open either before or after the input (left/right).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetX","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OffsetY\">\r\n            <summary>\r\n            If true, the Select menu will open either before or after the input (top/bottom).\r\n            </summary>\r\n            [ExcludeFromCodeCoverage]\r\n        </member>","Metadata":{"Common.PropertyName":"OffsetY","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Strict","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Strict\">\r\n            <summary>\r\n            If true, the Select's input will not show any values that are not defined in the dropdown.\r\n            This can be useful if Value is bound to a variable which is initialized to a value which is not in the list\r\n            and you want the Select to show the label / placeholder instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Strict","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LockScroll","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.LockScroll\">\r\n            <summary>\r\n            If true, prevent scrolling while dropdown is open.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LockScroll","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.CheckedIcon\">\r\n            <summary>\r\n            Custom checked icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UncheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.UncheckedIcon\">\r\n            <summary>\r\n            Custom unchecked icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UncheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IndeterminateIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.IndeterminateIcon\">\r\n            <summary>\r\n            Custom indeterminate icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IndeterminateIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelect<T>","Common.TypeNameIdentifier":"MudSelect","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-438461688,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSelect<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.ChildContent\">\r\n            <summary>\r\n            Add the MudSelectItems here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudSelect"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelect<T>.ChildContent","Common.TypeNameIdentifier":"MudSelect","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-915294482,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSelect<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudSelect`1.ChildContent\">\r\n            <summary>\r\n            Add the MudSelectItems here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudSelect"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelect<T>.ChildContent","Common.TypeNameIdentifier":"MudSelect","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1823661466,"Kind":"Components.Component","Name":"MudBlazor.MudSelectItem<T>","AssemblyName":"MudBlazor","Documentation":"<member name=\"T:MudBlazor.MudSelectItem`1\">\r\n            <summary>\r\n            Represents an option of a select or multi-select. To be used inside MudSelect.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSelectItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudSelectItem<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSelectItem`1.Value\">\r\n            <summary>\r\n            A user-defined option that can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Href\">\r\n            <summary>\r\n            Link to a URL when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ForceLoad\">\r\n            <summary>\r\n            If true, force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelectItem<T>","Common.TypeNameIdentifier":"MudSelectItem","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-31401854,"Kind":"Components.Component","Name":"MudBlazor.MudSelectItem<T>","AssemblyName":"MudBlazor","Documentation":"<member name=\"T:MudBlazor.MudSelectItem`1\">\r\n            <summary>\r\n            Represents an option of a select or multi-select. To be used inside MudSelect.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSelectItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudSelectItem<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSelectItem`1.Value\">\r\n            <summary>\r\n            A user-defined option that can be selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Href\">\r\n            <summary>\r\n            Link to a URL when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ForceLoad\">\r\n            <summary>\r\n            If true, force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelectItem<T>","Common.TypeNameIdentifier":"MudSelectItem","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-65445667,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSelectItem<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudSelectItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelectItem<T>.ChildContent","Common.TypeNameIdentifier":"MudSelectItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":689180909,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSelectItem<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBaseSelectItem.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudSelectItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelectItem<T>.ChildContent","Common.TypeNameIdentifier":"MudSelectItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1366592759,"Kind":"Components.Component","Name":"MudBlazor.MudSkeleton","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSkeleton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSkeleton.Width\">\r\n            <summary>\r\n            With defined in string, needs px or % or equal prefix.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSkeleton.Height\">\r\n            <summary>\r\n            Height defined in string, needs px or % or equal prefix.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SkeletonType","TypeName":"MudBlazor.SkeletonType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSkeleton.SkeletonType\">\r\n            <summary>\r\n            Shape of the skeleton that will be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SkeletonType","Common.GloballyQualifiedTypeName":"global::MudBlazor.SkeletonType"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"MudBlazor.Animation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSkeleton.Animation\">\r\n            <summary>\r\n            Animation style, if false it will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Animation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Animation"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSkeleton","Common.TypeNameIdentifier":"MudSkeleton","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-2059387545,"Kind":"Components.Component","Name":"MudBlazor.MudSkeleton","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSkeleton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSkeleton.Width\">\r\n            <summary>\r\n            With defined in string, needs px or % or equal prefix.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSkeleton.Height\">\r\n            <summary>\r\n            Height defined in string, needs px or % or equal prefix.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SkeletonType","TypeName":"MudBlazor.SkeletonType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSkeleton.SkeletonType\">\r\n            <summary>\r\n            Shape of the skeleton that will be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SkeletonType","Common.GloballyQualifiedTypeName":"global::MudBlazor.SkeletonType"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"MudBlazor.Animation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSkeleton.Animation\">\r\n            <summary>\r\n            Animation style, if false it will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Animation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Animation"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSkeleton","Common.TypeNameIdentifier":"MudSkeleton","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1206647635,"Kind":"Components.Component","Name":"MudBlazor.MudSlider<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudSlider<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Min","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Min\">\r\n            <summary>\r\n            The minimum allowed value of the slider. Should not be equal to max.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Max","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Max\">\r\n            <summary>\r\n            The maximum allowed value of the slider. Should not be equal to min.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Step","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Step\">\r\n            <summary>\r\n            How many steps the slider should take on each move.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Step","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Disabled\">\r\n            <summary>\r\n            If true, the slider will be disabled.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Color\">\r\n            <summary>\r\n            The color of the component. It supports the Primary, Secondary and Tertiary theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Immediate\">\r\n            <summary>\r\n            If true, the dragging the slider will update the Value immediately.\r\n            If false, the Value is updated only on releasing the handle.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Vertical","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Vertical\">\r\n            <summary>\r\n            If true, displays the slider vertical.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Vertical","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TickMarks","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.TickMarks\">\r\n            <summary>\r\n            If true, displays tick marks on the track.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TickMarks","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TickMarkLabels","TypeName":"System.String[]","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.TickMarkLabels\">\r\n            <summary>\r\n            Labels for tick marks, will attempt to map the labels to each step in index order.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TickMarkLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Size\">\r\n            <summary>\r\n            Labels for tick marks, will attempt to map the labels to each step in index order.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"ValueLabel","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.ValueLabel\">\r\n            <summary>\r\n            Displays the value over the slider thumb.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueLabel","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSlider<T>","Common.TypeNameIdentifier":"MudSlider","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-110905460,"Kind":"Components.Component","Name":"MudBlazor.MudSlider<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudSlider<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Min","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Min\">\r\n            <summary>\r\n            The minimum allowed value of the slider. Should not be equal to max.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Max","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Max\">\r\n            <summary>\r\n            The maximum allowed value of the slider. Should not be equal to min.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Step","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Step\">\r\n            <summary>\r\n            How many steps the slider should take on each move.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Step","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Disabled\">\r\n            <summary>\r\n            If true, the slider will be disabled.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Color\">\r\n            <summary>\r\n            The color of the component. It supports the Primary, Secondary and Tertiary theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Immediate\">\r\n            <summary>\r\n            If true, the dragging the slider will update the Value immediately.\r\n            If false, the Value is updated only on releasing the handle.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Vertical","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Vertical\">\r\n            <summary>\r\n            If true, displays the slider vertical.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Vertical","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TickMarks","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.TickMarks\">\r\n            <summary>\r\n            If true, displays tick marks on the track.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TickMarks","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TickMarkLabels","TypeName":"System.String[]","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.TickMarkLabels\">\r\n            <summary>\r\n            Labels for tick marks, will attempt to map the labels to each step in index order.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TickMarkLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Size\">\r\n            <summary>\r\n            Labels for tick marks, will attempt to map the labels to each step in index order.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSlider`1.Variant\">\r\n            <summary>\r\n            The variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"ValueLabel","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.ValueLabel\">\r\n            <summary>\r\n            Displays the value over the slider thumb.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueLabel","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSlider<T>","Common.TypeNameIdentifier":"MudSlider","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":313332459,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSlider<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudSlider"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSlider<T>.ChildContent","Common.TypeNameIdentifier":"MudSlider","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1595262264,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSlider<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudSlider`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudSlider"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSlider<T>.ChildContent","Common.TypeNameIdentifier":"MudSlider","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2126744074,"Kind":"Components.Component","Name":"MudBlazor.MudSnackbarElement","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSnackbarElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Snackbar","TypeName":"MudBlazor.Snackbar","Metadata":{"Common.PropertyName":"Snackbar","Common.GloballyQualifiedTypeName":"global::MudBlazor.Snackbar"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSnackbarElement.CloseIcon\">\r\n            <summary>\r\n            Custom close icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSnackbarElement","Common.TypeNameIdentifier":"MudSnackbarElement","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1925043719,"Kind":"Components.Component","Name":"MudBlazor.MudSnackbarElement","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSnackbarElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Snackbar","TypeName":"MudBlazor.Snackbar","Metadata":{"Common.PropertyName":"Snackbar","Common.GloballyQualifiedTypeName":"global::MudBlazor.Snackbar"}},{"Kind":"Components.Component","Name":"CloseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSnackbarElement.CloseIcon\">\r\n            <summary>\r\n            Custom close icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSnackbarElement","Common.TypeNameIdentifier":"MudSnackbarElement","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1691074050,"Kind":"Components.Component","Name":"MudBlazor.MudSnackbarProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSnackbarProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSnackbarProvider","Common.TypeNameIdentifier":"MudSnackbarProvider","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1776033598,"Kind":"Components.Component","Name":"MudBlazor.MudSnackbarProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSnackbarProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSnackbarProvider","Common.TypeNameIdentifier":"MudSnackbarProvider","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1251179700,"Kind":"Components.Component","Name":"MudBlazor.MudStack","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudStack"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Row","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudStack.Row\">\r\n            <summary>\r\n            If true, items will be placed horizontally in a row instead of vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Row","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudStack.Reverse\">\r\n            <summary>\r\n            Reverses the order of its items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spacing","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudStack.Spacing\">\r\n            <summary>\r\n            Defines the spacing between its items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Spacing","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Justify","TypeName":"MudBlazor.Justify?","Documentation":"<member name=\"P:MudBlazor.MudStack.Justify\">\r\n            <summary>\r\n            Defines the spacing between its items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Justify","Common.GloballyQualifiedTypeName":"global::MudBlazor.Justify?"}},{"Kind":"Components.Component","Name":"AlignItems","TypeName":"MudBlazor.AlignItems?","Documentation":"<member name=\"P:MudBlazor.MudStack.AlignItems\">\r\n            <summary>\r\n            Defines the spacing between its items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AlignItems","Common.GloballyQualifiedTypeName":"global::MudBlazor.AlignItems?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudStack.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudStack","Common.TypeNameIdentifier":"MudStack","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1241590830,"Kind":"Components.Component","Name":"MudBlazor.MudStack","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudStack"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Row","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudStack.Row\">\r\n            <summary>\r\n            If true, items will be placed horizontally in a row instead of vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Row","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudStack.Reverse\">\r\n            <summary>\r\n            Reverses the order of its items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spacing","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudStack.Spacing\">\r\n            <summary>\r\n            Defines the spacing between its items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Spacing","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Justify","TypeName":"MudBlazor.Justify?","Documentation":"<member name=\"P:MudBlazor.MudStack.Justify\">\r\n            <summary>\r\n            Defines the spacing between its items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Justify","Common.GloballyQualifiedTypeName":"global::MudBlazor.Justify?"}},{"Kind":"Components.Component","Name":"AlignItems","TypeName":"MudBlazor.AlignItems?","Documentation":"<member name=\"P:MudBlazor.MudStack.AlignItems\">\r\n            <summary>\r\n            Defines the spacing between its items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AlignItems","Common.GloballyQualifiedTypeName":"global::MudBlazor.AlignItems?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudStack.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudStack","Common.TypeNameIdentifier":"MudStack","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1960914629,"Kind":"Components.ChildContent","Name":"MudBlazor.MudStack.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudStack.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudStack"}],"Metadata":{"Common.TypeName":"MudBlazor.MudStack.ChildContent","Common.TypeNameIdentifier":"MudStack","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-143112361,"Kind":"Components.ChildContent","Name":"MudBlazor.MudStack.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudStack.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudStack"}],"Metadata":{"Common.TypeName":"MudBlazor.MudStack.ChildContent","Common.TypeNameIdentifier":"MudStack","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1773729664,"Kind":"Components.Component","Name":"MudBlazor.MudSwipeArea","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSwipeArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSwipe","TypeName":"System.Action<MudBlazor.SwipeDirection>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::MudBlazor.SwipeDirection>","Common.PropertyName":"OnSwipe","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Sensitivity","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudSwipeArea.Sensitivity\">\r\n            <summary>\r\n            Swipe threshold in pixels. If SwipeDelta is below Sensitivity then OnSwipe is not called.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Sensitivity","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"PreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSwipeArea.PreventDefault\">\r\n            <summary>\r\n            Prevents default behavior of the browser when swiping.\r\n            Usable espacially when swiping up/down - this will prevent the whole page from scrolling up/down.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSwipeArea","Common.TypeNameIdentifier":"MudSwipeArea","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1543454688,"Kind":"Components.Component","Name":"MudBlazor.MudSwipeArea","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSwipeArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSwipe","TypeName":"System.Action<MudBlazor.SwipeDirection>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::MudBlazor.SwipeDirection>","Common.PropertyName":"OnSwipe","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Sensitivity","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudSwipeArea.Sensitivity\">\r\n            <summary>\r\n            Swipe threshold in pixels. If SwipeDelta is below Sensitivity then OnSwipe is not called.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Sensitivity","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"PreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSwipeArea.PreventDefault\">\r\n            <summary>\r\n            Prevents default behavior of the browser when swiping.\r\n            Usable espacially when swiping up/down - this will prevent the whole page from scrolling up/down.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSwipeArea","Common.TypeNameIdentifier":"MudSwipeArea","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-538540297,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSwipeArea.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudSwipeArea"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSwipeArea.ChildContent","Common.TypeNameIdentifier":"MudSwipeArea","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":406281539,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSwipeArea.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudSwipeArea"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSwipeArea.ChildContent","Common.TypeNameIdentifier":"MudSwipeArea","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1837482380,"Kind":"Components.Component","Name":"MudBlazor.MudSwitch<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSwitch"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudSwitch<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"UnCheckedColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.UnCheckedColor\">\r\n            <summary>\r\n            The base color of the component in its none active/unchecked state. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UnCheckedColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.Label\">\r\n            <summary>\r\n            The text/label will be displayed next to the switch if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"MudBlazor.LabelPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.LabelPosition\">\r\n            <summary>\r\n            The position of the text/label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LabelPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.LabelPosition"}},{"Kind":"Components.Component","Name":"ThumbIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.ThumbIcon\">\r\n            <summary>\r\n            Shows an icon on Switch's thumb.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ThumbIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ThumbIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.ThumbIconColor\">\r\n            <summary>\r\n            The color of the thumb icon. Supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ThumbIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Checked\">\r\n            <summary>\r\n            The state of the component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Checked","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"StopClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.StopClickPropagation\">\r\n            <summary>\r\n            If true will prevent the click from bubbling up the event tree.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StopClickPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.CheckedChanged\">\r\n            <summary>\r\n            Fired when Checked changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.Boolean?>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.Boolean?>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSwitch<T>","Common.TypeNameIdentifier":"MudSwitch","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-20354077,"Kind":"Components.Component","Name":"MudBlazor.MudSwitch<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSwitch"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudSwitch<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"UnCheckedColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.UnCheckedColor\">\r\n            <summary>\r\n            The base color of the component in its none active/unchecked state. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UnCheckedColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.Label\">\r\n            <summary>\r\n            The text/label will be displayed next to the switch if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"MudBlazor.LabelPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.LabelPosition\">\r\n            <summary>\r\n            The position of the text/label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LabelPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.LabelPosition"}},{"Kind":"Components.Component","Name":"ThumbIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.ThumbIcon\">\r\n            <summary>\r\n            Shows an icon on Switch's thumb.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ThumbIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ThumbIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.ThumbIconColor\">\r\n            <summary>\r\n            The color of the thumb icon. Supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ThumbIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSwitch`1.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.Checked\">\r\n            <summary>\r\n            The state of the component\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Checked","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"StopClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.StopClickPropagation\">\r\n            <summary>\r\n            If true will prevent the click from bubbling up the event tree.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StopClickPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBooleanInput`1.CheckedChanged\">\r\n            <summary>\r\n            Fired when Checked changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.Boolean?>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.Boolean?>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSwitch<T>","Common.TypeNameIdentifier":"MudSwitch","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":684654376,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSwitch<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudSwitch"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSwitch<T>.ChildContent","Common.TypeNameIdentifier":"MudSwitch","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":71712900,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSwitch<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudSwitch"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSwitch<T>.ChildContent","Common.TypeNameIdentifier":"MudSwitch","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-661377906,"Kind":"Components.Component","Name":"MudBlazor.MudColumn<T>","AssemblyName":"MudBlazor","Documentation":"<member name=\"T:MudBlazor.MudColumn`1\">\r\n            <summary>\r\n            Binds an object's property to a column by its property name \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudColumn<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudColumn`1.Value\">\r\n            <summary>\r\n            Specifies the name of the object's property bound to the column\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterValue","TypeName":"T","Metadata":{"Common.PropertyName":"FooterValue","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColumn`1.FooterText\">\r\n            <summary>\r\n            Used if no FooterValue is available\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DataFormatString","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColumn`1.DataFormatString\">\r\n            <summary>\r\n            Specifies which string format should be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DataFormatString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudColumn<T>","Common.TypeNameIdentifier":"MudColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":892101253,"Kind":"Components.Component","Name":"MudBlazor.MudColumn<T>","AssemblyName":"MudBlazor","Documentation":"<member name=\"T:MudBlazor.MudColumn`1\">\r\n            <summary>\r\n            Binds an object's property to a column by its property name \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudColumn<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudColumn`1.Value\">\r\n            <summary>\r\n            Specifies the name of the object's property bound to the column\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterValue","TypeName":"T","Metadata":{"Common.PropertyName":"FooterValue","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColumn`1.FooterText\">\r\n            <summary>\r\n            Used if no FooterValue is available\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DataFormatString","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudColumn`1.DataFormatString\">\r\n            <summary>\r\n            Specifies which string format should be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DataFormatString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudColumn<T>","Common.TypeNameIdentifier":"MudColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":365741931,"Kind":"Components.Component","Name":"MudBlazor.MudSortableColumn<T, ModelType>","AssemblyName":"MudBlazor","Documentation":"<member name=\"T:MudBlazor.MudSortableColumn`2\">\r\n            <summary>\r\n            Binds an object's property to a column by its property name \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSortableColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudSortableColumn<T, ModelType>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ModelType","TypeName":"System.Type","Documentation":{"Id":13,"Args":["ModelType","MudBlazor.MudSortableColumn<T, ModelType>"]},"Metadata":{"Common.PropertyName":"ModelType","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSortableColumn`2.Value\">\r\n            <summary>\r\n            Specifies the name of the object's property bound to the column\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterValue","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSortableColumn`2.FooterValue\">\r\n            <summary>\r\n            Specifies the name of the object's property bound to the footer\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterValue","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSortableColumn`2.FooterText\">\r\n            <summary>\r\n            Used if no FooterValue is available\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DataFormatString","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSortableColumn`2.DataFormatString\">\r\n            <summary>\r\n            Specifies which string format should be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DataFormatString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSortableColumn`2.ReadOnly\">\r\n            <summary>\r\n            Specifies if the column should be readonly even if the DataTable is in editmode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SortLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"SortLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SortBy","TypeName":"System.Func<ModelType, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<ModelType, global::System.Object>","Common.PropertyName":"SortBy","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSortableColumn<T, ModelType>","Common.TypeNameIdentifier":"MudSortableColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":433257635,"Kind":"Components.Component","Name":"MudBlazor.MudSortableColumn<T, ModelType>","AssemblyName":"MudBlazor","Documentation":"<member name=\"T:MudBlazor.MudSortableColumn`2\">\r\n            <summary>\r\n            Binds an object's property to a column by its property name \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSortableColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudSortableColumn<T, ModelType>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ModelType","TypeName":"System.Type","Documentation":{"Id":13,"Args":["ModelType","MudBlazor.MudSortableColumn<T, ModelType>"]},"Metadata":{"Common.PropertyName":"ModelType","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSortableColumn`2.Value\">\r\n            <summary>\r\n            Specifies the name of the object's property bound to the column\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterValue","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudSortableColumn`2.FooterValue\">\r\n            <summary>\r\n            Specifies the name of the object's property bound to the footer\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterValue","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSortableColumn`2.FooterText\">\r\n            <summary>\r\n            Used if no FooterValue is available\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DataFormatString","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudSortableColumn`2.DataFormatString\">\r\n            <summary>\r\n            Specifies which string format should be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DataFormatString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSortableColumn`2.ReadOnly\">\r\n            <summary>\r\n            Specifies if the column should be readonly even if the DataTable is in editmode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SortLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"SortLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SortBy","TypeName":"System.Func<ModelType, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<ModelType, global::System.Object>","Common.PropertyName":"SortBy","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSortableColumn<T, ModelType>","Common.TypeNameIdentifier":"MudSortableColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1551795584,"Kind":"Components.Component","Name":"MudBlazor.MudTable<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTable<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"RowTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowTemplate\">\r\n            <summary>\r\n            Defines how a table row looks like. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"RowTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildRowContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.ChildRowContent\">\r\n            <summary>\r\n            Row Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ChildRowContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"RowEditingTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowEditingTemplate\">\r\n            <summary>\r\n            Defines how a table row looks like in edit mode (for selected row). Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"RowEditingTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.Columns\">\r\n            <summary>\r\n            Defines how a table column looks like. Columns components should inherit from MudBaseColumn\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"Columns","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"QuickColumns","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTable`1.QuickColumns\">\r\n            <summary>\r\n            Comma separated list of columns to show if there is no templates defined\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"QuickColumns","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NoRecordsContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTable`1.NoRecordsContent\">\r\n            <summary>\r\n            Defines the table body content when there are no matching records found\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoRecordsContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadingContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTable`1.LoadingContent\">\r\n            <summary>\r\n            Defines the table body content  the table has no rows and is loading\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HorizontalScrollbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTable`1.HorizontalScrollbar\">\r\n            <summary>\r\n            Defines if the table has a horizontal scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HorizontalScrollbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.Items\">\r\n            <summary>\r\n            The data to display in the table. MudTable will render one row per item\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Filter","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.Filter\">\r\n            <summary>\r\n            A function that returns whether or not an item should be displayed in the table. You can use this to implement your own search function.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"Filter","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"OnRowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.TableRowClickEventArgs<T>>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.OnRowClick\">\r\n            <summary>\r\n            Row click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.TableRowClickEventArgs<T>>","Common.PropertyName":"OnRowClick","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"RowClassFunc","TypeName":"System.Func<T, System.Int32, System.String>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowClassFunc\">\r\n            <summary>\r\n            Returns the class that will get joined with RowClass. Takes the current item and row index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Int32, global::System.String>","Common.PropertyName":"RowClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"RowStyleFunc","TypeName":"System.Func<T, System.Int32, System.String>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowStyleFunc\">\r\n            <summary>\r\n            Returns the style that will get joined with RowStyle. Takes the current item and row index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Int32, global::System.String>","Common.PropertyName":"RowStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudTable`1.SelectedItem\">\r\n            <summary>\r\n            Returns the item which was last clicked on in single selection mode (that is, if MultiSelection is false)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItem","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.SelectedItemChanged\">\r\n            <summary>\r\n            Callback is called when a row has been clicked and returns the selected item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItems","TypeName":"System.Collections.Generic.HashSet<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.SelectedItems\">\r\n            <summary>\r\n            If MultiSelection is true, this returns the currently selected items. You can bind this property and the initial content of the HashSet you bind it to will cause these rows to be selected initially.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Comparer","TypeName":"System.Collections.Generic.IEqualityComparer<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.Comparer\">\r\n            <summary>\r\n            The Comparer to use for comparing selected items internally.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Comparer","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEqualityComparer<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItemsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<T>>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.SelectedItemsChanged\">\r\n            <summary>\r\n            Callback is called whenever items are selected or deselected in multi selection mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.HashSet<T>>","Common.PropertyName":"SelectedItemsChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupBy","TypeName":"MudBlazor.TableGroupDefinition<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupBy\">\r\n            <summary>\r\n            Defines data grouping parameters. It can has N hierarchical levels\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupBy","Common.GloballyQualifiedTypeName":"global::MudBlazor.TableGroupDefinition<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupHeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.TableGroupData<System.Object, T>>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupHeaderTemplate\">\r\n            <summary>\r\n            Defines how a table grouping row header looks like. It works only when GroupBy is not null. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.TableGroupData<global::System.Object, T>>","Common.PropertyName":"GroupHeaderTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupHeaderClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupHeaderClass\">\r\n            <summary>\r\n            Defines custom CSS classes for using on Group Header's MudTr.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupHeaderClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupHeaderStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupHeaderStyle\">\r\n            <summary>\r\n            Defines custom styles for using on Group Header's MudTr.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupHeaderStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupFooterClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupFooterClass\">\r\n            <summary>\r\n            Defines custom CSS classes for using on Group Footer's MudTr.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupFooterClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupFooterStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupFooterStyle\">\r\n            <summary>\r\n            Defines custom styles for using on Group Footer's MudTr.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupFooterStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupFooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.TableGroupData<System.Object, T>>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupFooterTemplate\">\r\n            <summary>\r\n            Defines how a table grouping row footer looks like. It works only when GroupBy is not null. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.TableGroupData<global::System.Object, T>>","Common.PropertyName":"GroupFooterTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ServerData","TypeName":"System.Func<MudBlazor.TableState, System.Threading.Tasks.Task<MudBlazor.TableData<T>>>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.ServerData\">\r\n            <summary>\r\n            Supply an async function which (re)loads filtered, paginated and sorted data from server.\r\n            Table will await this func and update based on the returned TableData.\r\n            Used only with ServerData\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::MudBlazor.TableState, global::System.Threading.Tasks.Task<global::MudBlazor.TableData<T>>>","Common.PropertyName":"ServerData","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"IsEditRowSwitchingBlocked","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.IsEditRowSwitchingBlocked\">\r\n            <summary>\r\n            When editing a row and this is true, the editing row must be saved/canceled before a new row will be selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsEditRowSwitchingBlocked","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Square\">\r\n            <summary>\r\n            Set true to disable rounded corners\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Outlined\">\r\n            <summary>\r\n            If true, table will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Bordered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Bordered\">\r\n            <summary>\r\n            If true, table's cells will have left/right borders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bordered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Dense\">\r\n            <summary>\r\n            Set true for rows with a narrow height\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Hover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Hover\">\r\n            <summary>\r\n            Set true to see rows hover on mouse-over.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Striped\">\r\n            <summary>\r\n            If true, striped table rows will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MudBlazor.Breakpoint","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTableBase.Breakpoint\">\r\n            <summary>\r\n            At what breakpoint the table should switch to mobile layout. Takes None, Xs, Sm, Md, Lg and Xl the default behavior is breaking on Xs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Breakpoint","Common.GloballyQualifiedTypeName":"global::MudBlazor.Breakpoint"}},{"Kind":"Components.Component","Name":"FixedHeader","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.FixedHeader\">\r\n            <summary>\r\n            When true, the header will stay in place when the table is scrolled. Note: set Height to make the table scrollable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixedHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FixedFooter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.FixedFooter\">\r\n            <summary>\r\n            When true, the footer will be visible is not scrolled to the bottom. Note: set Height to make the table scrollable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixedFooter","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Height\">\r\n            <summary>\r\n            Setting a height will allow to scroll the table. If not set, it will try to grow in height. You can set this to any CSS value that the\r\n            attribute 'height' accepts, i.e. 500px. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SortLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.SortLabel\">\r\n            <summary>\r\n            If table is in smalldevice mode and uses any kind of sorting the text applied here will be the sort selects label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SortLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AllowUnsorted","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.AllowUnsorted\">\r\n            <summary>\r\n            If true allows table to be in an unsorted state through column clicks (i.e. first click sorts \"Ascending\", second \"Descending\", third \"None\").\r\n            If false only \"Ascending\" and \"Descending\" states are allowed (i.e. there always should be a column to sort).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowUnsorted","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RowsPerPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowsPerPage\">\r\n            <summary>\r\n            If the table has more items than this number, it will break the rows into pages of said size.\r\n            Note: requires a MudTablePager in PagerContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowsPerPage","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"RowsPerPageChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowsPerPageChanged\">\r\n            <summary>\r\n            Rows Per Page two-way bindable parameter\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowsPerPageChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CurrentPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CurrentPage\">\r\n            <summary>\r\n            The page index of the currently displayed page (Zero based). Usually called by MudTablePager.\r\n            Note: requires a MudTablePager in PagerContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CurrentPage","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.MultiSelection\">\r\n            <summary>\r\n            Set to true to enable selection of multiple rows with check boxes. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectOnRowClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.SelectOnRowClick\">\r\n            <summary>\r\n            When <c>true</c>, a row-click also toggles the checkbox state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectOnRowClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTableBase.ToolBarContent\">\r\n            <summary>\r\n            Optional. Add any kind of toolbar to this render fragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Loading","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Loading\">\r\n            <summary>\r\n            Show a loading animation, if true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Loading","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LoadingProgressColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTableBase.LoadingProgressColor\">\r\n            <summary>\r\n            The color of the loading progress if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingProgressColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"HeaderContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTableBase.HeaderContent\">\r\n            <summary>\r\n            Add MudTh cells here to define the table header. If <see cref=\"P:MudBlazor.MudTableBase.CustomHeader\" /> is set, add one or more MudTHeadRow instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CustomHeader","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CustomHeader\">\r\n            <summary>\r\n            Specify if the header has multiple rows. In that case, you need to provide the MudTHeadRow tags.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.HeaderClass\">\r\n            <summary>\r\n            Add a class to the thead tag\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTableBase.FooterContent\">\r\n            <summary>\r\n            Add MudTd cells here to define the table footer. If<see cref=\"P:MudBlazor.MudTableBase.CustomFooter\" /> is set, add one or more MudTFootRow instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CustomFooter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CustomFooter\">\r\n            <summary>\r\n            Specify if the footer has multiple rows. In that case, you need to provide the MudTFootRow tags.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomFooter","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FooterClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.FooterClass\">\r\n            <summary>\r\n            Add a class to the tfoot tag\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColGroup","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTableBase.ColGroup\">\r\n            <summary>\r\n            Specifies a group of one or more columns in a table for formatting.\r\n            Ex:\r\n            table\r\n                colgroup\r\n                   col span=\"2\" style=\"background-color:red\"\r\n                   col style=\"background-color:yellow\"\r\n                 colgroup\r\n                 header\r\n                 body\r\n            table\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ColGroup","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PagerContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTableBase.PagerContent\">\r\n            <summary>\r\n            Add MudTablePager here to enable breaking the rows in to multiple pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PagerContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.ReadOnly\">\r\n            <summary>\r\n            Locks Inline Edit mode, if true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnCommitEditClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.OnCommitEditClick\">\r\n            <summary>\r\n            Button commit edit click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnCommitEditClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnCancelEditClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.OnCancelEditClick\">\r\n            <summary>\r\n            Button cancel edit click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnCancelEditClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPreviewEditClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.OnPreviewEditClick\">\r\n            <summary>\r\n            Event is called before the item is modified in inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPreviewEditClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CommitEditCommand","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CommitEditCommand\">\r\n            <summary>\r\n            Command executed when the user clicks on the CommitEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommitEditCommand","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommitEditCommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CommitEditCommandParameter\">\r\n            <summary>\r\n            Command parameter for the CommitEdit Button. By default, will be the row level item model, if you won't set anything else.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommitEditCommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"CommitEditTooltip","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CommitEditTooltip\">\r\n            <summary>\r\n            Tooltip for the CommitEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommitEditTooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CancelEditTooltip","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CancelEditTooltip\">\r\n            <summary>\r\n            Tooltip for the CancelEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CancelEditTooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CommitEditIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CommitEditIcon\">\r\n            <summary>\r\n            Sets the Icon of the CommitEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommitEditIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CancelEditIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CancelEditIcon\">\r\n            <summary>\r\n            Sets the Icon of the CancelEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CancelEditIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CanCancelEdit","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CanCancelEdit\">\r\n            <summary>\r\n            Define if Cancel button is present or not for inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanCancelEdit","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ApplyButtonPosition","TypeName":"MudBlazor.TableApplyButtonPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTableBase.ApplyButtonPosition\">\r\n            <summary>\r\n            Set the positon of the CommitEdit and CancelEdit button, if <see cref=\"P:MudBlazor.MudTableBase.IsEditable\" /> IsEditable is true. Defaults to the end of the row\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApplyButtonPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TableApplyButtonPosition"}},{"Kind":"Components.Component","Name":"EditButtonPosition","TypeName":"MudBlazor.TableEditButtonPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTableBase.EditButtonPosition\">\r\n            <summary>\r\n            Set the positon of the StartEdit button, if <see cref=\"P:MudBlazor.MudTableBase.IsEditable\" /> IsEditable is true. Defaults to the end of the row\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditButtonPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TableEditButtonPosition"}},{"Kind":"Components.Component","Name":"EditTrigger","TypeName":"MudBlazor.TableEditTrigger","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTableBase.EditTrigger\">\r\n            <summary>\r\n            Defines how a table row edit will be triggered\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditTrigger","Common.GloballyQualifiedTypeName":"global::MudBlazor.TableEditTrigger"}},{"Kind":"Components.Component","Name":"EditButtonContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazorFix.EditButtonContext>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.EditButtonContent\">\r\n            <summary>\r\n            Defines the edit button that will be rendered when EditTrigger.EditButton\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditButtonContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazorFix.EditButtonContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"RowEditPreview","TypeName":"System.Action<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowEditPreview\">\r\n            <summary>\r\n            The method is called before the item is modified in inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Common.PropertyName":"RowEditPreview","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"RowEditCommit","TypeName":"System.Action<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowEditCommit\">\r\n            <summary>\r\n            The method is called when the edition of the item has been committed in inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Common.PropertyName":"RowEditCommit","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"RowEditCancel","TypeName":"System.Action<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowEditCancel\">\r\n            <summary>\r\n            The method is called when the edition of the item has been canceled in inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Common.PropertyName":"RowEditCancel","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"TotalItems","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTableBase.TotalItems\">\r\n            <summary>\r\n            Number of items. Used only with ServerData=\"true\"\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TotalItems","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"RowClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowClass\">\r\n            <summary>\r\n            CSS class for the table rows. Note, many CSS settings are overridden by MudTd though\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RowStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowStyle\">\r\n            <summary>\r\n            CSS styles for the table rows. Note, many CSS settings are overridden by MudTd though\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Virtualize","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Virtualize\">\r\n            <summary>\r\n            If true, the results are displayed in a Virtualize component, allowing a boost in rendering speed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Virtualize","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTableBase.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"RightAlignSmall","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RightAlignSmall\">\r\n            <summary>\r\n            Alignment of the table cell text when breakpoint is smaller than <see cref=\"P:MudBlazor.MudTableBase.Breakpoint\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RightAlignSmall","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-1306891906,"Kind":"Components.Component","Name":"MudBlazor.MudTable<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTable<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"RowTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowTemplate\">\r\n            <summary>\r\n            Defines how a table row looks like. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"RowTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildRowContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.ChildRowContent\">\r\n            <summary>\r\n            Row Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ChildRowContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"RowEditingTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowEditingTemplate\">\r\n            <summary>\r\n            Defines how a table row looks like in edit mode (for selected row). Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"RowEditingTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.Columns\">\r\n            <summary>\r\n            Defines how a table column looks like. Columns components should inherit from MudBaseColumn\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"Columns","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"QuickColumns","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTable`1.QuickColumns\">\r\n            <summary>\r\n            Comma separated list of columns to show if there is no templates defined\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"QuickColumns","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NoRecordsContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTable`1.NoRecordsContent\">\r\n            <summary>\r\n            Defines the table body content when there are no matching records found\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoRecordsContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadingContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTable`1.LoadingContent\">\r\n            <summary>\r\n            Defines the table body content  the table has no rows and is loading\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HorizontalScrollbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTable`1.HorizontalScrollbar\">\r\n            <summary>\r\n            Defines if the table has a horizontal scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HorizontalScrollbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.Items\">\r\n            <summary>\r\n            The data to display in the table. MudTable will render one row per item\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Filter","TypeName":"System.Func<T, System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.Filter\">\r\n            <summary>\r\n            A function that returns whether or not an item should be displayed in the table. You can use this to implement your own search function.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"Filter","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"OnRowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.TableRowClickEventArgs<T>>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.OnRowClick\">\r\n            <summary>\r\n            Row click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.TableRowClickEventArgs<T>>","Common.PropertyName":"OnRowClick","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"RowClassFunc","TypeName":"System.Func<T, System.Int32, System.String>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowClassFunc\">\r\n            <summary>\r\n            Returns the class that will get joined with RowClass. Takes the current item and row index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Int32, global::System.String>","Common.PropertyName":"RowClassFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"RowStyleFunc","TypeName":"System.Func<T, System.Int32, System.String>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowStyleFunc\">\r\n            <summary>\r\n            Returns the style that will get joined with RowStyle. Takes the current item and row index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Int32, global::System.String>","Common.PropertyName":"RowStyleFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudTable`1.SelectedItem\">\r\n            <summary>\r\n            Returns the item which was last clicked on in single selection mode (that is, if MultiSelection is false)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItem","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.SelectedItemChanged\">\r\n            <summary>\r\n            Callback is called when a row has been clicked and returns the selected item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItems","TypeName":"System.Collections.Generic.HashSet<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.SelectedItems\">\r\n            <summary>\r\n            If MultiSelection is true, this returns the currently selected items. You can bind this property and the initial content of the HashSet you bind it to will cause these rows to be selected initially.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Comparer","TypeName":"System.Collections.Generic.IEqualityComparer<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.Comparer\">\r\n            <summary>\r\n            The Comparer to use for comparing selected items internally.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Comparer","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEqualityComparer<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItemsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<T>>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.SelectedItemsChanged\">\r\n            <summary>\r\n            Callback is called whenever items are selected or deselected in multi selection mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.HashSet<T>>","Common.PropertyName":"SelectedItemsChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupBy","TypeName":"MudBlazor.TableGroupDefinition<T>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupBy\">\r\n            <summary>\r\n            Defines data grouping parameters. It can has N hierarchical levels\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupBy","Common.GloballyQualifiedTypeName":"global::MudBlazor.TableGroupDefinition<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupHeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.TableGroupData<System.Object, T>>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupHeaderTemplate\">\r\n            <summary>\r\n            Defines how a table grouping row header looks like. It works only when GroupBy is not null. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.TableGroupData<global::System.Object, T>>","Common.PropertyName":"GroupHeaderTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupHeaderClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupHeaderClass\">\r\n            <summary>\r\n            Defines custom CSS classes for using on Group Header's MudTr.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupHeaderClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupHeaderStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupHeaderStyle\">\r\n            <summary>\r\n            Defines custom styles for using on Group Header's MudTr.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupHeaderStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupFooterClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupFooterClass\">\r\n            <summary>\r\n            Defines custom CSS classes for using on Group Footer's MudTr.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupFooterClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupFooterStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupFooterStyle\">\r\n            <summary>\r\n            Defines custom styles for using on Group Footer's MudTr.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupFooterStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GroupFooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.TableGroupData<System.Object, T>>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupFooterTemplate\">\r\n            <summary>\r\n            Defines how a table grouping row footer looks like. It works only when GroupBy is not null. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.TableGroupData<global::System.Object, T>>","Common.PropertyName":"GroupFooterTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ServerData","TypeName":"System.Func<MudBlazor.TableState, System.Threading.Tasks.Task<MudBlazor.TableData<T>>>","Documentation":"<member name=\"P:MudBlazor.MudTable`1.ServerData\">\r\n            <summary>\r\n            Supply an async function which (re)loads filtered, paginated and sorted data from server.\r\n            Table will await this func and update based on the returned TableData.\r\n            Used only with ServerData\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::MudBlazor.TableState, global::System.Threading.Tasks.Task<global::MudBlazor.TableData<T>>>","Common.PropertyName":"ServerData","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"IsEditRowSwitchingBlocked","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.IsEditRowSwitchingBlocked\">\r\n            <summary>\r\n            When editing a row and this is true, the editing row must be saved/canceled before a new row will be selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsEditRowSwitchingBlocked","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Square\">\r\n            <summary>\r\n            Set true to disable rounded corners\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Outlined\">\r\n            <summary>\r\n            If true, table will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Bordered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Bordered\">\r\n            <summary>\r\n            If true, table's cells will have left/right borders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bordered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Dense\">\r\n            <summary>\r\n            Set true for rows with a narrow height\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Hover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Hover\">\r\n            <summary>\r\n            Set true to see rows hover on mouse-over.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Striped\">\r\n            <summary>\r\n            If true, striped table rows will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MudBlazor.Breakpoint","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTableBase.Breakpoint\">\r\n            <summary>\r\n            At what breakpoint the table should switch to mobile layout. Takes None, Xs, Sm, Md, Lg and Xl the default behavior is breaking on Xs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Breakpoint","Common.GloballyQualifiedTypeName":"global::MudBlazor.Breakpoint"}},{"Kind":"Components.Component","Name":"FixedHeader","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.FixedHeader\">\r\n            <summary>\r\n            When true, the header will stay in place when the table is scrolled. Note: set Height to make the table scrollable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixedHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FixedFooter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.FixedFooter\">\r\n            <summary>\r\n            When true, the footer will be visible is not scrolled to the bottom. Note: set Height to make the table scrollable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixedFooter","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Height\">\r\n            <summary>\r\n            Setting a height will allow to scroll the table. If not set, it will try to grow in height. You can set this to any CSS value that the\r\n            attribute 'height' accepts, i.e. 500px. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SortLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.SortLabel\">\r\n            <summary>\r\n            If table is in smalldevice mode and uses any kind of sorting the text applied here will be the sort selects label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SortLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AllowUnsorted","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.AllowUnsorted\">\r\n            <summary>\r\n            If true allows table to be in an unsorted state through column clicks (i.e. first click sorts \"Ascending\", second \"Descending\", third \"None\").\r\n            If false only \"Ascending\" and \"Descending\" states are allowed (i.e. there always should be a column to sort).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowUnsorted","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RowsPerPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowsPerPage\">\r\n            <summary>\r\n            If the table has more items than this number, it will break the rows into pages of said size.\r\n            Note: requires a MudTablePager in PagerContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowsPerPage","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"RowsPerPageChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowsPerPageChanged\">\r\n            <summary>\r\n            Rows Per Page two-way bindable parameter\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowsPerPageChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CurrentPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CurrentPage\">\r\n            <summary>\r\n            The page index of the currently displayed page (Zero based). Usually called by MudTablePager.\r\n            Note: requires a MudTablePager in PagerContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CurrentPage","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.MultiSelection\">\r\n            <summary>\r\n            Set to true to enable selection of multiple rows with check boxes. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectOnRowClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.SelectOnRowClick\">\r\n            <summary>\r\n            When <c>true</c>, a row-click also toggles the checkbox state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectOnRowClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTableBase.ToolBarContent\">\r\n            <summary>\r\n            Optional. Add any kind of toolbar to this render fragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Loading","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Loading\">\r\n            <summary>\r\n            Show a loading animation, if true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Loading","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LoadingProgressColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTableBase.LoadingProgressColor\">\r\n            <summary>\r\n            The color of the loading progress if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingProgressColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"HeaderContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTableBase.HeaderContent\">\r\n            <summary>\r\n            Add MudTh cells here to define the table header. If <see cref=\"P:MudBlazor.MudTableBase.CustomHeader\" /> is set, add one or more MudTHeadRow instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CustomHeader","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CustomHeader\">\r\n            <summary>\r\n            Specify if the header has multiple rows. In that case, you need to provide the MudTHeadRow tags.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.HeaderClass\">\r\n            <summary>\r\n            Add a class to the thead tag\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTableBase.FooterContent\">\r\n            <summary>\r\n            Add MudTd cells here to define the table footer. If<see cref=\"P:MudBlazor.MudTableBase.CustomFooter\" /> is set, add one or more MudTFootRow instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CustomFooter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CustomFooter\">\r\n            <summary>\r\n            Specify if the footer has multiple rows. In that case, you need to provide the MudTFootRow tags.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomFooter","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FooterClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.FooterClass\">\r\n            <summary>\r\n            Add a class to the tfoot tag\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FooterClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColGroup","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTableBase.ColGroup\">\r\n            <summary>\r\n            Specifies a group of one or more columns in a table for formatting.\r\n            Ex:\r\n            table\r\n                colgroup\r\n                   col span=\"2\" style=\"background-color:red\"\r\n                   col style=\"background-color:yellow\"\r\n                 colgroup\r\n                 header\r\n                 body\r\n            table\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ColGroup","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PagerContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTableBase.PagerContent\">\r\n            <summary>\r\n            Add MudTablePager here to enable breaking the rows in to multiple pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PagerContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.ReadOnly\">\r\n            <summary>\r\n            Locks Inline Edit mode, if true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnCommitEditClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.OnCommitEditClick\">\r\n            <summary>\r\n            Button commit edit click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnCommitEditClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnCancelEditClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.OnCancelEditClick\">\r\n            <summary>\r\n            Button cancel edit click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnCancelEditClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPreviewEditClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.OnPreviewEditClick\">\r\n            <summary>\r\n            Event is called before the item is modified in inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPreviewEditClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CommitEditCommand","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CommitEditCommand\">\r\n            <summary>\r\n            Command executed when the user clicks on the CommitEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommitEditCommand","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"CommitEditCommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CommitEditCommandParameter\">\r\n            <summary>\r\n            Command parameter for the CommitEdit Button. By default, will be the row level item model, if you won't set anything else.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommitEditCommandParameter","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"CommitEditTooltip","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CommitEditTooltip\">\r\n            <summary>\r\n            Tooltip for the CommitEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommitEditTooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CancelEditTooltip","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CancelEditTooltip\">\r\n            <summary>\r\n            Tooltip for the CancelEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CancelEditTooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CommitEditIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CommitEditIcon\">\r\n            <summary>\r\n            Sets the Icon of the CommitEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CommitEditIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CancelEditIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CancelEditIcon\">\r\n            <summary>\r\n            Sets the Icon of the CancelEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CancelEditIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CanCancelEdit","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.CanCancelEdit\">\r\n            <summary>\r\n            Define if Cancel button is present or not for inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanCancelEdit","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ApplyButtonPosition","TypeName":"MudBlazor.TableApplyButtonPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTableBase.ApplyButtonPosition\">\r\n            <summary>\r\n            Set the positon of the CommitEdit and CancelEdit button, if <see cref=\"P:MudBlazor.MudTableBase.IsEditable\" /> IsEditable is true. Defaults to the end of the row\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApplyButtonPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TableApplyButtonPosition"}},{"Kind":"Components.Component","Name":"EditButtonPosition","TypeName":"MudBlazor.TableEditButtonPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTableBase.EditButtonPosition\">\r\n            <summary>\r\n            Set the positon of the StartEdit button, if <see cref=\"P:MudBlazor.MudTableBase.IsEditable\" /> IsEditable is true. Defaults to the end of the row\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditButtonPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TableEditButtonPosition"}},{"Kind":"Components.Component","Name":"EditTrigger","TypeName":"MudBlazor.TableEditTrigger","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTableBase.EditTrigger\">\r\n            <summary>\r\n            Defines how a table row edit will be triggered\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditTrigger","Common.GloballyQualifiedTypeName":"global::MudBlazor.TableEditTrigger"}},{"Kind":"Components.Component","Name":"EditButtonContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazorFix.EditButtonContext>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.EditButtonContent\">\r\n            <summary>\r\n            Defines the edit button that will be rendered when EditTrigger.EditButton\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditButtonContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazorFix.EditButtonContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"RowEditPreview","TypeName":"System.Action<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowEditPreview\">\r\n            <summary>\r\n            The method is called before the item is modified in inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Common.PropertyName":"RowEditPreview","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"RowEditCommit","TypeName":"System.Action<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowEditCommit\">\r\n            <summary>\r\n            The method is called when the edition of the item has been committed in inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Common.PropertyName":"RowEditCommit","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"RowEditCancel","TypeName":"System.Action<System.Object>","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowEditCancel\">\r\n            <summary>\r\n            The method is called when the edition of the item has been canceled in inline editing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Common.PropertyName":"RowEditCancel","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"TotalItems","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTableBase.TotalItems\">\r\n            <summary>\r\n            Number of items. Used only with ServerData=\"true\"\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TotalItems","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"RowClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowClass\">\r\n            <summary>\r\n            CSS class for the table rows. Note, many CSS settings are overridden by MudTd though\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RowStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RowStyle\">\r\n            <summary>\r\n            CSS styles for the table rows. Note, many CSS settings are overridden by MudTd though\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Virtualize","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.Virtualize\">\r\n            <summary>\r\n            If true, the results are displayed in a Virtualize component, allowing a boost in rendering speed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Virtualize","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTableBase.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"RightAlignSmall","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableBase.RightAlignSmall\">\r\n            <summary>\r\n            Alignment of the table cell text when breakpoint is smaller than <see cref=\"P:MudBlazor.MudTableBase.Breakpoint\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RightAlignSmall","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1399833484,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.RowTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowTemplate\">\r\n            <summary>\r\n            Defines how a table row looks like. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RowTemplate","ParentTag":"MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["RowTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.RowTemplate","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1108590384,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.RowTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowTemplate\">\r\n            <summary>\r\n            Defines how a table row looks like. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RowTemplate","ParentTag":"MudBlazor.MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["RowTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.RowTemplate","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-652474199,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.ChildRowContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.ChildRowContent\">\r\n            <summary>\r\n            Row Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildRowContent","ParentTag":"MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildRowContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.ChildRowContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2008219855,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.ChildRowContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.ChildRowContent\">\r\n            <summary>\r\n            Row Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildRowContent","ParentTag":"MudBlazor.MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildRowContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.ChildRowContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":350687402,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.RowEditingTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowEditingTemplate\">\r\n            <summary>\r\n            Defines how a table row looks like in edit mode (for selected row). Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RowEditingTemplate","ParentTag":"MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["RowEditingTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.RowEditingTemplate","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1411825484,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.RowEditingTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.RowEditingTemplate\">\r\n            <summary>\r\n            Defines how a table row looks like in edit mode (for selected row). Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RowEditingTemplate","ParentTag":"MudBlazor.MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["RowEditingTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.RowEditingTemplate","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1969521131,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.Columns","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.Columns\">\r\n            <summary>\r\n            Defines how a table column looks like. Columns components should inherit from MudBaseColumn\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Columns","ParentTag":"MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Columns"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.Columns","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1643515099,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.Columns","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.Columns\">\r\n            <summary>\r\n            Defines how a table column looks like. Columns components should inherit from MudBaseColumn\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Columns","ParentTag":"MudBlazor.MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Columns"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.Columns","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1374840998,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.NoRecordsContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.NoRecordsContent\">\r\n            <summary>\r\n            Defines the table body content when there are no matching records found\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsContent","ParentTag":"MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.NoRecordsContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-546056553,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.NoRecordsContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.NoRecordsContent\">\r\n            <summary>\r\n            Defines the table body content when there are no matching records found\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsContent","ParentTag":"MudBlazor.MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.NoRecordsContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1942126669,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.LoadingContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.LoadingContent\">\r\n            <summary>\r\n            Defines the table body content  the table has no rows and is loading\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoadingContent","ParentTag":"MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.LoadingContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-531817842,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.LoadingContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.LoadingContent\">\r\n            <summary>\r\n            Defines the table body content  the table has no rows and is loading\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoadingContent","ParentTag":"MudBlazor.MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.LoadingContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-95092203,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.GroupHeaderTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupHeaderTemplate\">\r\n            <summary>\r\n            Defines how a table grouping row header looks like. It works only when GroupBy is not null. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupHeaderTemplate","ParentTag":"MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["GroupHeaderTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.GroupHeaderTemplate","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-267612530,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.GroupHeaderTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupHeaderTemplate\">\r\n            <summary>\r\n            Defines how a table grouping row header looks like. It works only when GroupBy is not null. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupHeaderTemplate","ParentTag":"MudBlazor.MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["GroupHeaderTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.GroupHeaderTemplate","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1608109149,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.GroupFooterTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupFooterTemplate\">\r\n            <summary>\r\n            Defines how a table grouping row footer looks like. It works only when GroupBy is not null. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupFooterTemplate","ParentTag":"MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["GroupFooterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.GroupFooterTemplate","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":6698134,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.GroupFooterTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTable`1.GroupFooterTemplate\">\r\n            <summary>\r\n            Defines how a table grouping row footer looks like. It works only when GroupBy is not null. Use MudTd to define the table cells and their content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupFooterTemplate","ParentTag":"MudBlazor.MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["GroupFooterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.GroupFooterTemplate","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1409794167,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.ToolBarContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.ToolBarContent\">\r\n            <summary>\r\n            Optional. Add any kind of toolbar to this render fragment.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToolBarContent","ParentTag":"MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.ToolBarContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1694476560,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.ToolBarContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.ToolBarContent\">\r\n            <summary>\r\n            Optional. Add any kind of toolbar to this render fragment.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToolBarContent","ParentTag":"MudBlazor.MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.ToolBarContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1185709106,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.HeaderContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.HeaderContent\">\r\n            <summary>\r\n            Add MudTh cells here to define the table header. If <see cref=\"P:MudBlazor.MudTableBase.CustomHeader\" /> is set, add one or more MudTHeadRow instead.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderContent","ParentTag":"MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.HeaderContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1000840655,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.HeaderContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.HeaderContent\">\r\n            <summary>\r\n            Add MudTh cells here to define the table header. If <see cref=\"P:MudBlazor.MudTableBase.CustomHeader\" /> is set, add one or more MudTHeadRow instead.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderContent","ParentTag":"MudBlazor.MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.HeaderContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1986354169,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.FooterContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.FooterContent\">\r\n            <summary>\r\n            Add MudTd cells here to define the table footer. If<see cref=\"P:MudBlazor.MudTableBase.CustomFooter\" /> is set, add one or more MudTFootRow instead.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterContent","ParentTag":"MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.FooterContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":208498076,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.FooterContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.FooterContent\">\r\n            <summary>\r\n            Add MudTd cells here to define the table footer. If<see cref=\"P:MudBlazor.MudTableBase.CustomFooter\" /> is set, add one or more MudTFootRow instead.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterContent","ParentTag":"MudBlazor.MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.FooterContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":761834085,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.ColGroup","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.ColGroup\">\r\n            <summary>\r\n            Specifies a group of one or more columns in a table for formatting.\r\n            Ex:\r\n            table\r\n                colgroup\r\n                   col span=\"2\" style=\"background-color:red\"\r\n                   col style=\"background-color:yellow\"\r\n                 colgroup\r\n                 header\r\n                 body\r\n            table\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColGroup","ParentTag":"MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.ColGroup","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1553635257,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.ColGroup","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.ColGroup\">\r\n            <summary>\r\n            Specifies a group of one or more columns in a table for formatting.\r\n            Ex:\r\n            table\r\n                colgroup\r\n                   col span=\"2\" style=\"background-color:red\"\r\n                   col style=\"background-color:yellow\"\r\n                 colgroup\r\n                 header\r\n                 body\r\n            table\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColGroup","ParentTag":"MudBlazor.MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.ColGroup","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1684284956,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.PagerContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.PagerContent\">\r\n            <summary>\r\n            Add MudTablePager here to enable breaking the rows in to multiple pages.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PagerContent","ParentTag":"MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.PagerContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1125098205,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.PagerContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.PagerContent\">\r\n            <summary>\r\n            Add MudTablePager here to enable breaking the rows in to multiple pages.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PagerContent","ParentTag":"MudBlazor.MudTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.PagerContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2104404712,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.EditButtonContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.EditButtonContent\">\r\n            <summary>\r\n            Defines the edit button that will be rendered when EditTrigger.EditButton\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditButtonContent","ParentTag":"MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["EditButtonContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.EditButtonContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1015121074,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTable<T>.EditButtonContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableBase.EditButtonContent\">\r\n            <summary>\r\n            Defines the edit button that will be rendered when EditTrigger.EditButton\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditButtonContent","ParentTag":"MudBlazor.MudTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["EditButtonContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>.EditButtonContent","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1413551079,"Kind":"Components.Component","Name":"MudBlazor.MudTableGroupRow<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTableGroupRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTableGroupRow<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"GroupDefinition","TypeName":"MudBlazor.TableGroupDefinition<T>","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.GroupDefinition\">\r\n            <summary>\r\n            The group definition for this grouping level. It's recursive.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupDefinition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TableGroupDefinition<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Linq.IGrouping<System.Object, T>","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.Items\">\r\n            <summary>\r\n            Inner Items List for the Group\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Linq.IGrouping<global::System.Object, T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.TableGroupData<System.Object, T>>","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.HeaderTemplate\">\r\n            <summary>\r\n            Defines Group Header Data Template\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.TableGroupData<global::System.Object, T>>","Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.TableGroupData<System.Object, T>>","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.FooterTemplate\">\r\n            <summary>\r\n            Defines Group Header Data Template\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.TableGroupData<global::System.Object, T>>","Common.PropertyName":"FooterTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.IsCheckable\">\r\n            <summary>\r\n            Add a multi-select checkbox that will select/unselect every item in the table\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsCheckable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterStyle","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.ExpandIcon\">\r\n            <summary>\r\n            Custom expand icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.CollapseIcon\">\r\n            <summary>\r\n            Custom collapse icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnRowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.OnRowClick\">\r\n            <summary>\r\n            On click event\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnRowClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableGroupRow<T>","Common.TypeNameIdentifier":"MudTableGroupRow","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1490995430,"Kind":"Components.Component","Name":"MudBlazor.MudTableGroupRow<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTableGroupRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTableGroupRow<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"GroupDefinition","TypeName":"MudBlazor.TableGroupDefinition<T>","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.GroupDefinition\">\r\n            <summary>\r\n            The group definition for this grouping level. It's recursive.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GroupDefinition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TableGroupDefinition<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Linq.IGrouping<System.Object, T>","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.Items\">\r\n            <summary>\r\n            Inner Items List for the Group\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Linq.IGrouping<global::System.Object, T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.TableGroupData<System.Object, T>>","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.HeaderTemplate\">\r\n            <summary>\r\n            Defines Group Header Data Template\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.TableGroupData<global::System.Object, T>>","Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.TableGroupData<System.Object, T>>","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.FooterTemplate\">\r\n            <summary>\r\n            Defines Group Header Data Template\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.TableGroupData<global::System.Object, T>>","Common.PropertyName":"FooterTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.IsCheckable\">\r\n            <summary>\r\n            Add a multi-select checkbox that will select/unselect every item in the table\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsCheckable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterStyle","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.ExpandIcon\">\r\n            <summary>\r\n            Custom expand icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.CollapseIcon\">\r\n            <summary>\r\n            Custom collapse icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnRowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.OnRowClick\">\r\n            <summary>\r\n            On click event\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnRowClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableGroupRow<T>","Common.TypeNameIdentifier":"MudTableGroupRow","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":622952204,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTableGroupRow<T>.HeaderTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.HeaderTemplate\">\r\n            <summary>\r\n            Defines Group Header Data Template\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"MudTableGroupRow"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["HeaderTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableGroupRow<T>.HeaderTemplate","Common.TypeNameIdentifier":"MudTableGroupRow","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":967683910,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTableGroupRow<T>.HeaderTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.HeaderTemplate\">\r\n            <summary>\r\n            Defines Group Header Data Template\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"MudBlazor.MudTableGroupRow"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["HeaderTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableGroupRow<T>.HeaderTemplate","Common.TypeNameIdentifier":"MudTableGroupRow","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":550311175,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTableGroupRow<T>.FooterTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.FooterTemplate\">\r\n            <summary>\r\n            Defines Group Header Data Template\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"MudTableGroupRow"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["FooterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableGroupRow<T>.FooterTemplate","Common.TypeNameIdentifier":"MudTableGroupRow","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-548136803,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTableGroupRow<T>.FooterTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTableGroupRow`1.FooterTemplate\">\r\n            <summary>\r\n            Defines Group Header Data Template\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"MudBlazor.MudTableGroupRow"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["FooterTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableGroupRow<T>.FooterTemplate","Common.TypeNameIdentifier":"MudTableGroupRow","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":201458169,"Kind":"Components.Component","Name":"MudBlazor.MudTablePager","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTablePager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HideRowsPerPage","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTablePager.HideRowsPerPage\">\r\n            <summary>\r\n            Set true to hide the part of the pager which allows to change the page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideRowsPerPage","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRowsPerPage","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTablePager.DisableRowsPerPage\">\r\n            <summary>\r\n            Set true to hide the part of the pager which allows to change the page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRowsPerPage","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HidePageNumber","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTablePager.HidePageNumber\">\r\n            <summary>\r\n            Set true to hide the number of pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HidePageNumber","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HidePagination","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTablePager.HidePagination\">\r\n            <summary>\r\n            Set true to hide the pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HidePagination","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"MudBlazor.HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTablePager.HorizontalAlignment\">\r\n            <summary>\r\n            Set the horizontal alignment position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HorizontalAlignment","Common.GloballyQualifiedTypeName":"global::MudBlazor.HorizontalAlignment"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Int32[]","Documentation":"<member name=\"P:MudBlazor.MudTablePager.PageSizeOptions\">\r\n            <summary>\r\n            Define a list of available page size options for the user to choose from\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PageSizeOptions","Common.GloballyQualifiedTypeName":"global::System.Int32[]"}},{"Kind":"Components.Component","Name":"InfoFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.InfoFormat\">\r\n            <summary>\r\n            Format string for the display of the current page, which you can localize to your language. Available variables are:\r\n            {first_item}, {last_item} and {all_items} which will replaced with the indices of the page's first and last item, as well as the total number of items.\r\n            Default: \"{first_item}-{last_item} of {all_items}\" which is transformed into \"0-25 of 77\". \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InfoFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AllItemsText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.AllItemsText\">\r\n            <summary>\r\n            Defines the text shown in the items per page dropdown when a user provides int.MaxValue as an option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllItemsText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RowsPerPageString","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.RowsPerPageString\">\r\n            <summary>\r\n            The localizable \"Rows per page:\" text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowsPerPageString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FirstIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.FirstIcon\">\r\n            <summary>\r\n            Custom first icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FirstIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BeforeIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.BeforeIcon\">\r\n            <summary>\r\n            Custom before icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BeforeIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.NextIcon\">\r\n            <summary>\r\n            Custom next icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LastIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.LastIcon\">\r\n            <summary>\r\n            Custom last icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LastIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTablePager","Common.TypeNameIdentifier":"MudTablePager","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-745627786,"Kind":"Components.Component","Name":"MudBlazor.MudTablePager","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTablePager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HideRowsPerPage","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTablePager.HideRowsPerPage\">\r\n            <summary>\r\n            Set true to hide the part of the pager which allows to change the page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideRowsPerPage","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRowsPerPage","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTablePager.DisableRowsPerPage\">\r\n            <summary>\r\n            Set true to hide the part of the pager which allows to change the page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRowsPerPage","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HidePageNumber","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTablePager.HidePageNumber\">\r\n            <summary>\r\n            Set true to hide the number of pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HidePageNumber","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HidePagination","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTablePager.HidePagination\">\r\n            <summary>\r\n            Set true to hide the pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HidePagination","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"MudBlazor.HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTablePager.HorizontalAlignment\">\r\n            <summary>\r\n            Set the horizontal alignment position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HorizontalAlignment","Common.GloballyQualifiedTypeName":"global::MudBlazor.HorizontalAlignment"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Int32[]","Documentation":"<member name=\"P:MudBlazor.MudTablePager.PageSizeOptions\">\r\n            <summary>\r\n            Define a list of available page size options for the user to choose from\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PageSizeOptions","Common.GloballyQualifiedTypeName":"global::System.Int32[]"}},{"Kind":"Components.Component","Name":"InfoFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.InfoFormat\">\r\n            <summary>\r\n            Format string for the display of the current page, which you can localize to your language. Available variables are:\r\n            {first_item}, {last_item} and {all_items} which will replaced with the indices of the page's first and last item, as well as the total number of items.\r\n            Default: \"{first_item}-{last_item} of {all_items}\" which is transformed into \"0-25 of 77\". \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InfoFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AllItemsText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.AllItemsText\">\r\n            <summary>\r\n            Defines the text shown in the items per page dropdown when a user provides int.MaxValue as an option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllItemsText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RowsPerPageString","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.RowsPerPageString\">\r\n            <summary>\r\n            The localizable \"Rows per page:\" text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RowsPerPageString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FirstIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.FirstIcon\">\r\n            <summary>\r\n            Custom first icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FirstIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BeforeIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.BeforeIcon\">\r\n            <summary>\r\n            Custom before icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BeforeIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.NextIcon\">\r\n            <summary>\r\n            Custom next icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LastIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTablePager.LastIcon\">\r\n            <summary>\r\n            Custom last icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LastIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTablePager","Common.TypeNameIdentifier":"MudTablePager","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1015031086,"Kind":"Components.Component","Name":"MudBlazor.MudTableSortLabel<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTableSortLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTableSortLabel<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InitialDirection","TypeName":"MudBlazor.SortDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"InitialDirection","Common.GloballyQualifiedTypeName":"global::MudBlazor.SortDirection"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableSortLabel`1.Enabled\">\r\n            <summary>\r\n            Enable the sorting. Set to true by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SortIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableSortLabel`1.SortIcon\">\r\n            <summary>\r\n            The Icon used to display sortdirection.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SortIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AppendIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableSortLabel`1.AppendIcon\">\r\n            <summary>\r\n            If true the icon will be placed before the label text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SortDirection","TypeName":"MudBlazor.SortDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"SortDirection","Common.GloballyQualifiedTypeName":"global::MudBlazor.SortDirection"}},{"Kind":"Components.Component","Name":"SortDirectionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.SortDirection>","Metadata":{"Common.PropertyName":"SortDirectionChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.SortDirection>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SortBy","TypeName":"System.Func<T, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Object>","Common.PropertyName":"SortBy","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"SortLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"SortLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableSortLabel<T>","Common.TypeNameIdentifier":"MudTableSortLabel","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":465297147,"Kind":"Components.Component","Name":"MudBlazor.MudTableSortLabel<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTableSortLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTableSortLabel<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InitialDirection","TypeName":"MudBlazor.SortDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"InitialDirection","Common.GloballyQualifiedTypeName":"global::MudBlazor.SortDirection"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableSortLabel`1.Enabled\">\r\n            <summary>\r\n            Enable the sorting. Set to true by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SortIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTableSortLabel`1.SortIcon\">\r\n            <summary>\r\n            The Icon used to display sortdirection.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SortIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AppendIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTableSortLabel`1.AppendIcon\">\r\n            <summary>\r\n            If true the icon will be placed before the label text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendIcon","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SortDirection","TypeName":"MudBlazor.SortDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"SortDirection","Common.GloballyQualifiedTypeName":"global::MudBlazor.SortDirection"}},{"Kind":"Components.Component","Name":"SortDirectionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.SortDirection>","Metadata":{"Common.PropertyName":"SortDirectionChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.SortDirection>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SortBy","TypeName":"System.Func<T, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Object>","Common.PropertyName":"SortBy","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"SortLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"SortLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableSortLabel<T>","Common.TypeNameIdentifier":"MudTableSortLabel","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-2023293183,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTableSortLabel<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTableSortLabel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableSortLabel<T>.ChildContent","Common.TypeNameIdentifier":"MudTableSortLabel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1895200609,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTableSortLabel<T>.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTableSortLabel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableSortLabel<T>.ChildContent","Common.TypeNameIdentifier":"MudTableSortLabel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-909441195,"Kind":"Components.Component","Name":"MudBlazor.MudTd","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTd"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DataLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"DataLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HideSmall","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTd.HideSmall\">\r\n            <summary>\r\n            Hide cell when breakpoint is smaller than the defined value in table.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSmall","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTd","Common.TypeNameIdentifier":"MudTd","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":832225462,"Kind":"Components.Component","Name":"MudBlazor.MudTd","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTd"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DataLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"DataLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HideSmall","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTd.HideSmall\">\r\n            <summary>\r\n            Hide cell when breakpoint is smaller than the defined value in table.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSmall","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTd","Common.TypeNameIdentifier":"MudTd","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":723382166,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTd.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTd"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTd.ChildContent","Common.TypeNameIdentifier":"MudTd","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1405420475,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTd.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTd"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTd.ChildContent","Common.TypeNameIdentifier":"MudTd","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1546286789,"Kind":"Components.Component","Name":"MudBlazor.MudTFootRow","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTFootRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTFootRow.IsCheckable\">\r\n            <summary>\r\n            Add a multi-select checkbox that will select/unselect every item in the table\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsCheckable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IgnoreCheckbox","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTFootRow.IgnoreCheckbox\">\r\n            <summary>\r\n            Specify behavior in case the table is multi-select mode. If set to <code>true</code>, it won't render an additional empty column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IgnoreCheckbox","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IgnoreEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTFootRow.IgnoreEditable\">\r\n            <summary>\r\n            Specify behavior in case the table is editable. If set to <code>true</code>, it won't render an additional empty column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IgnoreEditable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsExpandable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsExpandable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnRowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTFootRow.OnRowClick\">\r\n            <summary>\r\n            On click event\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnRowClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTFootRow","Common.TypeNameIdentifier":"MudTFootRow","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-764092671,"Kind":"Components.Component","Name":"MudBlazor.MudTFootRow","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTFootRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTFootRow.IsCheckable\">\r\n            <summary>\r\n            Add a multi-select checkbox that will select/unselect every item in the table\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsCheckable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IgnoreCheckbox","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTFootRow.IgnoreCheckbox\">\r\n            <summary>\r\n            Specify behavior in case the table is multi-select mode. If set to <code>true</code>, it won't render an additional empty column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IgnoreCheckbox","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IgnoreEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTFootRow.IgnoreEditable\">\r\n            <summary>\r\n            Specify behavior in case the table is editable. If set to <code>true</code>, it won't render an additional empty column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IgnoreEditable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsExpandable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsExpandable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnRowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTFootRow.OnRowClick\">\r\n            <summary>\r\n            On click event\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnRowClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTFootRow","Common.TypeNameIdentifier":"MudTFootRow","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-385360080,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTFootRow.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTFootRow"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTFootRow.ChildContent","Common.TypeNameIdentifier":"MudTFootRow","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2003335463,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTFootRow.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTFootRow"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTFootRow.ChildContent","Common.TypeNameIdentifier":"MudTFootRow","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":942141419,"Kind":"Components.Component","Name":"MudBlazor.MudTh","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTh"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTh","Common.TypeNameIdentifier":"MudTh","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":308854310,"Kind":"Components.Component","Name":"MudBlazor.MudTh","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTh"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTh","Common.TypeNameIdentifier":"MudTh","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-407887510,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTh.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTh"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTh.ChildContent","Common.TypeNameIdentifier":"MudTh","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":419533566,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTh.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTh"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTh.ChildContent","Common.TypeNameIdentifier":"MudTh","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":216142400,"Kind":"Components.Component","Name":"MudBlazor.MudTHeadRow","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTHeadRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTHeadRow.IsCheckable\">\r\n            <summary>\r\n            Add a multi-select checkbox that will select/unselect every item in the table\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsCheckable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IgnoreCheckbox","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTHeadRow.IgnoreCheckbox\">\r\n            <summary>\r\n            Specify behavior in case the table is multi-select mode. If set to <code>true</code>, it won't render an additional empty column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IgnoreCheckbox","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IgnoreEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTHeadRow.IgnoreEditable\">\r\n            <summary>\r\n            Specify behavior in case the table is editable. If set to <code>true</code>, it won't render an additional empty column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IgnoreEditable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsExpandable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsExpandable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnRowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTHeadRow.OnRowClick\">\r\n            <summary>\r\n            On click event\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnRowClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTHeadRow","Common.TypeNameIdentifier":"MudTHeadRow","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1548140443,"Kind":"Components.Component","Name":"MudBlazor.MudTHeadRow","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTHeadRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTHeadRow.IsCheckable\">\r\n            <summary>\r\n            Add a multi-select checkbox that will select/unselect every item in the table\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsCheckable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IgnoreCheckbox","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTHeadRow.IgnoreCheckbox\">\r\n            <summary>\r\n            Specify behavior in case the table is multi-select mode. If set to <code>true</code>, it won't render an additional empty column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IgnoreCheckbox","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IgnoreEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTHeadRow.IgnoreEditable\">\r\n            <summary>\r\n            Specify behavior in case the table is editable. If set to <code>true</code>, it won't render an additional empty column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IgnoreEditable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsExpandable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsExpandable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnRowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTHeadRow.OnRowClick\">\r\n            <summary>\r\n            On click event\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnRowClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTHeadRow","Common.TypeNameIdentifier":"MudTHeadRow","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-316212782,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTHeadRow.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTHeadRow"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTHeadRow.ChildContent","Common.TypeNameIdentifier":"MudTHeadRow","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":590737295,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTHeadRow.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTHeadRow"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTHeadRow.ChildContent","Common.TypeNameIdentifier":"MudTHeadRow","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-126082187,"Kind":"Components.Component","Name":"MudBlazor.MudTr","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTr"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Item","TypeName":"System.Object","Metadata":{"Common.PropertyName":"Item","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsCheckable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsEditing","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditing","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsEditSwitchBlocked","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditSwitchBlocked","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsExpandable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsExpandable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"IsCheckedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsChecked","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTr","Common.TypeNameIdentifier":"MudTr","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":616471509,"Kind":"Components.Component","Name":"MudBlazor.MudTr","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTr"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Item","TypeName":"System.Object","Metadata":{"Common.PropertyName":"Item","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsCheckable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsEditing","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditing","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsEditSwitchBlocked","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditSwitchBlocked","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsExpandable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsExpandable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"IsCheckedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsChecked","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTr","Common.TypeNameIdentifier":"MudTr","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1118725801,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTr.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTr"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTr.ChildContent","Common.TypeNameIdentifier":"MudTr","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1372352618,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTr.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTr"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTr.ChildContent","Common.TypeNameIdentifier":"MudTr","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":147528593,"Kind":"Components.Component","Name":"MudBlazor.MudSimpleTable","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSimpleTable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Elevation\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Hover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Hover\">\r\n            <summary>\r\n            If true, the table row will shade on hover.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Dense\">\r\n            <summary>\r\n            If true, compact padding will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Outlined\">\r\n            <summary>\r\n            If true, table will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Bordered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Bordered\">\r\n            <summary>\r\n            If true, table's cells will have left/right borders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bordered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Striped\">\r\n            <summary>\r\n            If true, striped table rows will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FixedHeader","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.FixedHeader\">\r\n            <summary>\r\n            When true, the header will stay in place when the table is scrolled. Note: set Height to make the table scrollable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixedHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSimpleTable","Common.TypeNameIdentifier":"MudSimpleTable","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":490697318,"Kind":"Components.Component","Name":"MudBlazor.MudSimpleTable","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSimpleTable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Elevation\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Hover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Hover\">\r\n            <summary>\r\n            If true, the table row will shade on hover.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Dense\">\r\n            <summary>\r\n            If true, compact padding will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Outlined\">\r\n            <summary>\r\n            If true, table will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Bordered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Bordered\">\r\n            <summary>\r\n            If true, table's cells will have left/right borders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Bordered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.Striped\">\r\n            <summary>\r\n            If true, striped table rows will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FixedHeader","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.FixedHeader\">\r\n            <summary>\r\n            When true, the header will stay in place when the table is scrolled. Note: set Height to make the table scrollable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FixedHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSimpleTable","Common.TypeNameIdentifier":"MudSimpleTable","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":717762336,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSimpleTable.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudSimpleTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSimpleTable.ChildContent","Common.TypeNameIdentifier":"MudSimpleTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1786609340,"Kind":"Components.ChildContent","Name":"MudBlazor.MudSimpleTable.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudSimpleTable.ChildContent\">\r\n            <summary>\r\n            Child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudSimpleTable"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSimpleTable.ChildContent","Common.TypeNameIdentifier":"MudSimpleTable","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1708984368,"Kind":"Components.Component","Name":"MudBlazor.MudDynamicTabs","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDynamicTabs"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AddTabIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.AddTabIcon\">\r\n            <summary>\r\n            The icon used for the add button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AddTabIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseTabIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.CloseTabIcon\">\r\n            <summary>\r\n            the icon used of the close button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseTabIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AddTab","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.AddTab\">\r\n            <summary>\r\n            The callback, when the add button has been clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AddTab","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CloseTab","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudTabPanel>","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.CloseTab\">\r\n            <summary>\r\n            The callback, when the a close button has been clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseTab","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudTabPanel>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AddIconClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.AddIconClass\">\r\n            <summary>\r\n            Classes that are applied to the icon button of the add button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AddIconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AddIconStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.AddIconStyle\">\r\n            <summary>\r\n            Styles that are applied to the icon button of the add button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AddIconStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseIconClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.CloseIconClass\">\r\n            <summary>\r\n            Classes that are applied to the icon button of the close button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseIconStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.CloseIconStyle\">\r\n            <summary>\r\n            Styles that are applied to the icon button of the close button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIconStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AddIconToolTip","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.AddIconToolTip\">\r\n            <summary>\r\n            Tooltip that shown when a user hovers of the add button. Empty or null, if no tooltip should be visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AddIconToolTip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseIconToolTip","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.CloseIconToolTip\">\r\n            <summary>\r\n            Tooltip that shown when a user hovers of the close button. Empty or null, if no tooltip should be visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIconToolTip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"KeepPanelsAlive","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.KeepPanelsAlive\">\r\n            <summary>\r\n            If true, render all tabs and hide (display:none) every non-active.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeepPanelsAlive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Rounded\">\r\n            <summary>\r\n            If true, sets the border-radius to theme default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Border","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Border\">\r\n            <summary>\r\n            If true, sets a border between the content and the toolbar depending on the position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Border","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Outlined\">\r\n            <summary>\r\n            If true, toolbar will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Centered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Centered\">\r\n            <summary>\r\n            If true, centers the tabitems.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Centered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HideSlider","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.HideSlider\">\r\n            <summary>\r\n            Hides the active tab slider.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSlider","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PrevIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrevIcon\">\r\n            <summary>\r\n            Icon to use for left pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PrevIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.NextIcon\">\r\n            <summary>\r\n            Icon to use for right pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AlwaysShowScrollButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.AlwaysShowScrollButtons\">\r\n            <summary>\r\n            If true, always display the scroll buttons even if the tabs are smaller than the required with, buttons will be disabled if there is nothing to scroll.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AlwaysShowScrollButtons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudTabs.MaxHeight\">\r\n            <summary>\r\n            Sets the maxheight the component can have.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinimumTabWidth","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.MinimumTabWidth\">\r\n            <summary>\r\n            Sets the min-wdth of the tabs. 160px by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinimumTabWidth","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.Position\">\r\n            <summary>\r\n            Sets the position of the tabs itself.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"SliderColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.SliderColor\">\r\n            <summary>\r\n            The color of the tab slider. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SliderColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ScrollIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.ScrollIconColor\">\r\n            <summary>\r\n            The color of the next/prev icons. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ScrollIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTabs.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow, applies around the whole component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ApplyEffectsToContainer","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.ApplyEffectsToContainer\">\r\n            <summary>\r\n            If true, will apply elevation, rounded, outlined effects to the whole tab component instead of just toolbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApplyEffectsToContainer","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableSliderAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.DisableSliderAnimation\">\r\n            <summary>\r\n            If true, disables slider animation\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableSliderAnimation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTabs.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PrePanelContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabPanel>","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrePanelContent\">\r\n            <summary>\r\n            This fragment is placed between toolbar and panels. \r\n            It can be used to display additional content like an address line in a browser.\r\n            The active tab will be the content of this RenderFragement\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PrePanelContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabPanel>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabPanelClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelClass\">\r\n            <summary>\r\n            Custom class/classes for TabPanel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PanelClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.PanelClass\">\r\n            <summary>\r\n            Custom class/classes for Selected Content Panel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PanelClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ActivePanelIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTabs.ActivePanelIndex\">\r\n            <summary>\r\n            The current active panel index. Also with Bidirectional Binding\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivePanelIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ActivePanelIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudTabs.ActivePanelIndexChanged\">\r\n            <summary>\r\n            Fired when ActivePanelIndex changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivePanelIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabs>","Documentation":"<member name=\"P:MudBlazor.MudTabs.Header\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) the tabs inside the header panel of the tab control\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Header","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabs>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderPosition","TypeName":"MudBlazor.TabHeaderPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.HeaderPosition\">\r\n            <summary>\r\n            Additional content specified by Header is placed either before the tabs, after or not at all\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TabHeaderPosition"}},{"Kind":"Components.Component","Name":"TabPanelHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabPanel>","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeader\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) inside each tab panel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelHeader","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabPanel>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabPanelHeaderPosition","TypeName":"MudBlazor.TabHeaderPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeaderPosition\">\r\n            <summary>\r\n            Additional content specified by Header is placed either before the tabs, after or not at all\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelHeaderPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TabHeaderPosition"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1591738233,"Kind":"Components.Component","Name":"MudBlazor.MudDynamicTabs","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDynamicTabs"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AddTabIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.AddTabIcon\">\r\n            <summary>\r\n            The icon used for the add button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AddTabIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseTabIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.CloseTabIcon\">\r\n            <summary>\r\n            the icon used of the close button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseTabIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AddTab","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.AddTab\">\r\n            <summary>\r\n            The callback, when the add button has been clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AddTab","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CloseTab","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudTabPanel>","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.CloseTab\">\r\n            <summary>\r\n            The callback, when the a close button has been clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseTab","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MudBlazor.MudTabPanel>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AddIconClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.AddIconClass\">\r\n            <summary>\r\n            Classes that are applied to the icon button of the add button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AddIconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AddIconStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.AddIconStyle\">\r\n            <summary>\r\n            Styles that are applied to the icon button of the add button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AddIconStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseIconClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.CloseIconClass\">\r\n            <summary>\r\n            Classes that are applied to the icon button of the close button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseIconStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.CloseIconStyle\">\r\n            <summary>\r\n            Styles that are applied to the icon button of the close button\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIconStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AddIconToolTip","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.AddIconToolTip\">\r\n            <summary>\r\n            Tooltip that shown when a user hovers of the add button. Empty or null, if no tooltip should be visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AddIconToolTip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CloseIconToolTip","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudDynamicTabs.CloseIconToolTip\">\r\n            <summary>\r\n            Tooltip that shown when a user hovers of the close button. Empty or null, if no tooltip should be visible\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseIconToolTip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"KeepPanelsAlive","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.KeepPanelsAlive\">\r\n            <summary>\r\n            If true, render all tabs and hide (display:none) every non-active.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeepPanelsAlive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Rounded\">\r\n            <summary>\r\n            If true, sets the border-radius to theme default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Border","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Border\">\r\n            <summary>\r\n            If true, sets a border between the content and the toolbar depending on the position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Border","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Outlined\">\r\n            <summary>\r\n            If true, toolbar will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Centered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Centered\">\r\n            <summary>\r\n            If true, centers the tabitems.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Centered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HideSlider","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.HideSlider\">\r\n            <summary>\r\n            Hides the active tab slider.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSlider","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PrevIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrevIcon\">\r\n            <summary>\r\n            Icon to use for left pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PrevIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.NextIcon\">\r\n            <summary>\r\n            Icon to use for right pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AlwaysShowScrollButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.AlwaysShowScrollButtons\">\r\n            <summary>\r\n            If true, always display the scroll buttons even if the tabs are smaller than the required with, buttons will be disabled if there is nothing to scroll.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AlwaysShowScrollButtons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudTabs.MaxHeight\">\r\n            <summary>\r\n            Sets the maxheight the component can have.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinimumTabWidth","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.MinimumTabWidth\">\r\n            <summary>\r\n            Sets the min-wdth of the tabs. 160px by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinimumTabWidth","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.Position\">\r\n            <summary>\r\n            Sets the position of the tabs itself.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"SliderColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.SliderColor\">\r\n            <summary>\r\n            The color of the tab slider. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SliderColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ScrollIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.ScrollIconColor\">\r\n            <summary>\r\n            The color of the next/prev icons. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ScrollIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTabs.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow, applies around the whole component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ApplyEffectsToContainer","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.ApplyEffectsToContainer\">\r\n            <summary>\r\n            If true, will apply elevation, rounded, outlined effects to the whole tab component instead of just toolbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApplyEffectsToContainer","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableSliderAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.DisableSliderAnimation\">\r\n            <summary>\r\n            If true, disables slider animation\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableSliderAnimation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTabs.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PrePanelContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabPanel>","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrePanelContent\">\r\n            <summary>\r\n            This fragment is placed between toolbar and panels. \r\n            It can be used to display additional content like an address line in a browser.\r\n            The active tab will be the content of this RenderFragement\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PrePanelContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabPanel>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabPanelClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelClass\">\r\n            <summary>\r\n            Custom class/classes for TabPanel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PanelClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.PanelClass\">\r\n            <summary>\r\n            Custom class/classes for Selected Content Panel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PanelClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ActivePanelIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTabs.ActivePanelIndex\">\r\n            <summary>\r\n            The current active panel index. Also with Bidirectional Binding\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivePanelIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ActivePanelIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudTabs.ActivePanelIndexChanged\">\r\n            <summary>\r\n            Fired when ActivePanelIndex changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivePanelIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabs>","Documentation":"<member name=\"P:MudBlazor.MudTabs.Header\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) the tabs inside the header panel of the tab control\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Header","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabs>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderPosition","TypeName":"MudBlazor.TabHeaderPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.HeaderPosition\">\r\n            <summary>\r\n            Additional content specified by Header is placed either before the tabs, after or not at all\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TabHeaderPosition"}},{"Kind":"Components.Component","Name":"TabPanelHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabPanel>","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeader\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) inside each tab panel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelHeader","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabPanel>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabPanelHeaderPosition","TypeName":"MudBlazor.TabHeaderPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeaderPosition\">\r\n            <summary>\r\n            Additional content specified by Header is placed either before the tabs, after or not at all\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelHeaderPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TabHeaderPosition"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1296315928,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDynamicTabs.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudDynamicTabs"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs.ChildContent","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-583826246,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDynamicTabs.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudDynamicTabs"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs.ChildContent","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1240121133,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDynamicTabs.PrePanelContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrePanelContent\">\r\n            <summary>\r\n            This fragment is placed between toolbar and panels. \r\n            It can be used to display additional content like an address line in a browser.\r\n            The active tab will be the content of this RenderFragement\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrePanelContent","ParentTag":"MudDynamicTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PrePanelContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs.PrePanelContent","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1209256400,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDynamicTabs.PrePanelContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrePanelContent\">\r\n            <summary>\r\n            This fragment is placed between toolbar and panels. \r\n            It can be used to display additional content like an address line in a browser.\r\n            The active tab will be the content of this RenderFragement\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrePanelContent","ParentTag":"MudBlazor.MudDynamicTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PrePanelContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs.PrePanelContent","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1053153363,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDynamicTabs.Header","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.Header\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) the tabs inside the header panel of the tab control\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"MudDynamicTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Header"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs.Header","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1861647412,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDynamicTabs.Header","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.Header\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) the tabs inside the header panel of the tab control\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"MudBlazor.MudDynamicTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Header"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs.Header","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1456466075,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDynamicTabs.TabPanelHeader","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeader\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) inside each tab panel\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabPanelHeader","ParentTag":"MudDynamicTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["TabPanelHeader"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs.TabPanelHeader","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1951881013,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDynamicTabs.TabPanelHeader","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeader\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) inside each tab panel\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabPanelHeader","ParentTag":"MudBlazor.MudDynamicTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["TabPanelHeader"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs.TabPanelHeader","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":132595942,"Kind":"Components.Component","Name":"MudBlazor.MudTabs","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTabs"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"KeepPanelsAlive","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.KeepPanelsAlive\">\r\n            <summary>\r\n            If true, render all tabs and hide (display:none) every non-active.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeepPanelsAlive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Rounded\">\r\n            <summary>\r\n            If true, sets the border-radius to theme default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Border","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Border\">\r\n            <summary>\r\n            If true, sets a border between the content and the toolbar depending on the position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Border","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Outlined\">\r\n            <summary>\r\n            If true, toolbar will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Centered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Centered\">\r\n            <summary>\r\n            If true, centers the tabitems.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Centered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HideSlider","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.HideSlider\">\r\n            <summary>\r\n            Hides the active tab slider.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSlider","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PrevIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrevIcon\">\r\n            <summary>\r\n            Icon to use for left pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PrevIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.NextIcon\">\r\n            <summary>\r\n            Icon to use for right pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AlwaysShowScrollButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.AlwaysShowScrollButtons\">\r\n            <summary>\r\n            If true, always display the scroll buttons even if the tabs are smaller than the required with, buttons will be disabled if there is nothing to scroll.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AlwaysShowScrollButtons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudTabs.MaxHeight\">\r\n            <summary>\r\n            Sets the maxheight the component can have.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinimumTabWidth","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.MinimumTabWidth\">\r\n            <summary>\r\n            Sets the min-wdth of the tabs. 160px by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinimumTabWidth","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.Position\">\r\n            <summary>\r\n            Sets the position of the tabs itself.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"SliderColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.SliderColor\">\r\n            <summary>\r\n            The color of the tab slider. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SliderColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ScrollIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.ScrollIconColor\">\r\n            <summary>\r\n            The color of the next/prev icons. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ScrollIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTabs.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow, applies around the whole component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ApplyEffectsToContainer","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.ApplyEffectsToContainer\">\r\n            <summary>\r\n            If true, will apply elevation, rounded, outlined effects to the whole tab component instead of just toolbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApplyEffectsToContainer","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableSliderAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.DisableSliderAnimation\">\r\n            <summary>\r\n            If true, disables slider animation\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableSliderAnimation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTabs.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PrePanelContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabPanel>","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrePanelContent\">\r\n            <summary>\r\n            This fragment is placed between toolbar and panels. \r\n            It can be used to display additional content like an address line in a browser.\r\n            The active tab will be the content of this RenderFragement\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PrePanelContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabPanel>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabPanelClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelClass\">\r\n            <summary>\r\n            Custom class/classes for TabPanel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PanelClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.PanelClass\">\r\n            <summary>\r\n            Custom class/classes for Selected Content Panel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PanelClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ActivePanelIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTabs.ActivePanelIndex\">\r\n            <summary>\r\n            The current active panel index. Also with Bidirectional Binding\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivePanelIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ActivePanelIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudTabs.ActivePanelIndexChanged\">\r\n            <summary>\r\n            Fired when ActivePanelIndex changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivePanelIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabs>","Documentation":"<member name=\"P:MudBlazor.MudTabs.Header\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) the tabs inside the header panel of the tab control\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Header","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabs>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderPosition","TypeName":"MudBlazor.TabHeaderPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.HeaderPosition\">\r\n            <summary>\r\n            Additional content specified by Header is placed either before the tabs, after or not at all\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TabHeaderPosition"}},{"Kind":"Components.Component","Name":"TabPanelHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabPanel>","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeader\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) inside each tab panel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelHeader","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabPanel>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabPanelHeaderPosition","TypeName":"MudBlazor.TabHeaderPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeaderPosition\">\r\n            <summary>\r\n            Additional content specified by Header is placed either before the tabs, after or not at all\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelHeaderPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TabHeaderPosition"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1772004369,"Kind":"Components.Component","Name":"MudBlazor.MudTabs","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTabs"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"KeepPanelsAlive","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.KeepPanelsAlive\">\r\n            <summary>\r\n            If true, render all tabs and hide (display:none) every non-active.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeepPanelsAlive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Rounded\">\r\n            <summary>\r\n            If true, sets the border-radius to theme default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Border","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Border\">\r\n            <summary>\r\n            If true, sets a border between the content and the toolbar depending on the position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Border","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Outlined\">\r\n            <summary>\r\n            If true, toolbar will be outlined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Outlined","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Centered","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.Centered\">\r\n            <summary>\r\n            If true, centers the tabitems.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Centered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HideSlider","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.HideSlider\">\r\n            <summary>\r\n            Hides the active tab slider.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideSlider","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PrevIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrevIcon\">\r\n            <summary>\r\n            Icon to use for left pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PrevIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.NextIcon\">\r\n            <summary>\r\n            Icon to use for right pagination.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NextIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AlwaysShowScrollButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.AlwaysShowScrollButtons\">\r\n            <summary>\r\n            If true, always display the scroll buttons even if the tabs are smaller than the required with, buttons will be disabled if there is nothing to scroll.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AlwaysShowScrollButtons","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudTabs.MaxHeight\">\r\n            <summary>\r\n            Sets the maxheight the component can have.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinimumTabWidth","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.MinimumTabWidth\">\r\n            <summary>\r\n            Sets the min-wdth of the tabs. 160px by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinimumTabWidth","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.Position\">\r\n            <summary>\r\n            Sets the position of the tabs itself.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"SliderColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.SliderColor\">\r\n            <summary>\r\n            The color of the tab slider. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SliderColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ScrollIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.ScrollIconColor\">\r\n            <summary>\r\n            The color of the next/prev icons. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ScrollIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTabs.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow, applies around the whole component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ApplyEffectsToContainer","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.ApplyEffectsToContainer\">\r\n            <summary>\r\n            If true, will apply elevation, rounded, outlined effects to the whole tab component instead of just toolbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApplyEffectsToContainer","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableRipple","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.DisableRipple\">\r\n            <summary>\r\n            If true, disables ripple effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableRipple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableSliderAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabs.DisableSliderAnimation\">\r\n            <summary>\r\n            If true, disables slider animation\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableSliderAnimation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTabs.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PrePanelContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabPanel>","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrePanelContent\">\r\n            <summary>\r\n            This fragment is placed between toolbar and panels. \r\n            It can be used to display additional content like an address line in a browser.\r\n            The active tab will be the content of this RenderFragement\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PrePanelContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabPanel>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabPanelClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelClass\">\r\n            <summary>\r\n            Custom class/classes for TabPanel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PanelClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabs.PanelClass\">\r\n            <summary>\r\n            Custom class/classes for Selected Content Panel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PanelClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ActivePanelIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTabs.ActivePanelIndex\">\r\n            <summary>\r\n            The current active panel index. Also with Bidirectional Binding\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivePanelIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ActivePanelIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudTabs.ActivePanelIndexChanged\">\r\n            <summary>\r\n            Fired when ActivePanelIndex changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivePanelIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabs>","Documentation":"<member name=\"P:MudBlazor.MudTabs.Header\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) the tabs inside the header panel of the tab control\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Header","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabs>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderPosition","TypeName":"MudBlazor.TabHeaderPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.HeaderPosition\">\r\n            <summary>\r\n            Additional content specified by Header is placed either before the tabs, after or not at all\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TabHeaderPosition"}},{"Kind":"Components.Component","Name":"TabPanelHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudTabPanel>","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeader\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) inside each tab panel\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelHeader","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudTabPanel>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabPanelHeaderPosition","TypeName":"MudBlazor.TabHeaderPosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeaderPosition\">\r\n            <summary>\r\n            Additional content specified by Header is placed either before the tabs, after or not at all\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabPanelHeaderPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TabHeaderPosition"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-238402205,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabs.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTabs"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs.ChildContent","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1091935619,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabs.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTabs"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs.ChildContent","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":482855653,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabs.PrePanelContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrePanelContent\">\r\n            <summary>\r\n            This fragment is placed between toolbar and panels. \r\n            It can be used to display additional content like an address line in a browser.\r\n            The active tab will be the content of this RenderFragement\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrePanelContent","ParentTag":"MudTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PrePanelContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs.PrePanelContent","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-535458730,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabs.PrePanelContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.PrePanelContent\">\r\n            <summary>\r\n            This fragment is placed between toolbar and panels. \r\n            It can be used to display additional content like an address line in a browser.\r\n            The active tab will be the content of this RenderFragement\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrePanelContent","ParentTag":"MudBlazor.MudTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PrePanelContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs.PrePanelContent","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1204378939,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabs.Header","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.Header\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) the tabs inside the header panel of the tab control\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"MudTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Header"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs.Header","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":139351169,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabs.Header","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.Header\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) the tabs inside the header panel of the tab control\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"MudBlazor.MudTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Header"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs.Header","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1060334873,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabs.TabPanelHeader","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeader\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) inside each tab panel\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabPanelHeader","ParentTag":"MudTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["TabPanelHeader"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs.TabPanelHeader","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1392491854,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabs.TabPanelHeader","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabs.TabPanelHeader\">\r\n            <summary>\r\n            A render fragment that is added before or after (based on the value of HeaderPosition) inside each tab panel\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabPanelHeader","ParentTag":"MudBlazor.MudTabs"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["TabPanelHeader"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs.TabPanelHeader","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1729428122,"Kind":"Components.Component","Name":"MudBlazor.MudTextField<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTextField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTextField<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTextField`1.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.Mask\">\r\n            <summary>\r\n            Provide a masking object. Built-in masks are PatternMask, MultiMask, RegexMask and BlockMask\r\n            Note: when Mask is set, TextField will ignore some properties such as Lines, Pattern or HideSpinButtons, OnKeyDown and OnKeyUp, etc.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"DebounceInterval","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.DebounceInterval\">\r\n            <summary>\r\n            Interval to be awaited in milliseconds before changing the Text value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DebounceInterval","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"OnDebounceIntervalElapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.OnDebounceIntervalElapsed\">\r\n            <summary>\r\n            callback to be called when the debounce interval has elapsed\r\n            receives the Text as a parameter\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDebounceIntervalElapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextField<T>","Common.TypeNameIdentifier":"MudTextField","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":142320018,"Kind":"Components.Component","Name":"MudBlazor.MudTextField<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTextField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTextField<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTextField`1.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.Mask\">\r\n            <summary>\r\n            Provide a masking object. Built-in masks are PatternMask, MultiMask, RegexMask and BlockMask\r\n            Note: when Mask is set, TextField will ignore some properties such as Lines, Pattern or HideSpinButtons, OnKeyDown and OnKeyUp, etc.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"DebounceInterval","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.DebounceInterval\">\r\n            <summary>\r\n            Interval to be awaited in milliseconds before changing the Text value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DebounceInterval","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"OnDebounceIntervalElapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.OnDebounceIntervalElapsed\">\r\n            <summary>\r\n            callback to be called when the debounce interval has elapsed\r\n            receives the Text as a parameter\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDebounceIntervalElapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<T, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<T, global::System.String>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextField<T>","Common.TypeNameIdentifier":"MudTextField","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":2145551864,"Kind":"Components.Component","Name":"MudBlazor.MudTextFieldString","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTextFieldString"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTextField`1.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.Mask\">\r\n            <summary>\r\n            Provide a masking object. Built-in masks are PatternMask, MultiMask, RegexMask and BlockMask\r\n            Note: when Mask is set, TextField will ignore some properties such as Lines, Pattern or HideSpinButtons, OnKeyDown and OnKeyUp, etc.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"DebounceInterval","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.DebounceInterval\">\r\n            <summary>\r\n            Interval to be awaited in milliseconds before changing the Text value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DebounceInterval","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"OnDebounceIntervalElapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.OnDebounceIntervalElapsed\">\r\n            <summary>\r\n            callback to be called when the debounce interval has elapsed\r\n            receives the Text as a parameter\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDebounceIntervalElapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.String, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextFieldString","Common.TypeNameIdentifier":"MudTextFieldString","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1307532114,"Kind":"Components.Component","Name":"MudBlazor.MudTextFieldString","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTextFieldString"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputType","TypeName":"MudBlazor.InputType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTextField`1.InputType\">\r\n            <summary>\r\n            Type of the input element. It should be a valid HTML5 input type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputType","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputType"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClearButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.OnClearButtonClick\">\r\n            <summary>\r\n            Button click event for clear button. Called after text and value has been cleared.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClearButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudTextField`1.Mask\">\r\n            <summary>\r\n            Provide a masking object. Built-in masks are PatternMask, MultiMask, RegexMask and BlockMask\r\n            Note: when Mask is set, TextField will ignore some properties such as Lines, Pattern or HideSpinButtons, OnKeyDown and OnKeyUp, etc.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"DebounceInterval","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.DebounceInterval\">\r\n            <summary>\r\n            Interval to be awaited in milliseconds before changing the Text value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DebounceInterval","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"OnDebounceIntervalElapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudDebouncedInput`1.OnDebounceIntervalElapsed\">\r\n            <summary>\r\n            callback to be called when the debounce interval has elapsed\r\n            receives the Text as a parameter\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDebounceIntervalElapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Disabled\">\r\n            <summary>\r\n            If true, the input element will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ReadOnly\">\r\n            <summary>\r\n            If true, the input will be read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.FullWidth\">\r\n            <summary>\r\n            If true, the input will take up the full width of its container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FullWidth","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Immediate\">\r\n            <summary>\r\n            If true, the input will update the Value immediately on typing.\r\n            If false, the Value is updated only on Enter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Immediate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableUnderLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.DisableUnderLine\">\r\n            <summary>\r\n            If true, the input will not have an underline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableUnderLine","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperText\">\r\n            <summary>\r\n            The HelperText will be displayed below the text field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentIcon\">\r\n            <summary>\r\n            Icon that will be used if Adornment is set to Start or End.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentText\">\r\n            <summary>\r\n            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Adornment\">\r\n            <summary>\r\n            The Adornment if used. By default, it is set to None.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"OnlyValidateIfDirty","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnlyValidateIfDirty\">\r\n            <summary>\r\n            The validation is only triggered if the user has changed the input value at least once. By default, it is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnlyValidateIfDirty","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            The aria-label of the adornment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.IconSize\">\r\n            <summary>\r\n            The Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"OnAdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnAdornmentClick\">\r\n            <summary>\r\n            Button click event if set and Adornment used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnAdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Variant\">\r\n            <summary>\r\n            Variant to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Counter","TypeName":"System.Int32?","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Counter\">\r\n            <summary>\r\n            If set, will display the counter, value 0 will display current count but no stop count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Counter","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.MaxLength\">\r\n            <summary>\r\n            Maximum number of characters that the input will accept\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.AutoFocus\">\r\n            <summary>\r\n            If true the input will focus automatically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Lines","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Lines\">\r\n            <summary>\r\n             A multiline input (textarea) will be shown, if set to more than one line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lines","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Text\">\r\n            <summary>\r\n             The text to be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextUpdateSuppression","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextUpdateSuppression\">\r\n            <summary>\r\n            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).\r\n            This solves issue #1012: Textfield swallowing chars when typing rapidly\r\n            If you need to update the input's text while it is focused you can set this parameter to false.\r\n            Note: on WASM text update suppression is not active, so this parameter has no effect.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextUpdateSuppression","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"MudBlazor.InputMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.InputMode\">\r\n            <summary>\r\n             Hints at the type of data that might be entered by the user while editing the input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.InputMode"}},{"Kind":"Components.Component","Name":"Pattern","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Pattern\">\r\n            <summary>\r\n            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression\r\n            Not Supported in multline input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Pattern","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text value changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnBlur\">\r\n            <summary>\r\n            Fired when the element loses focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInternalInputChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnInternalInputChanged\">\r\n            <summary>\r\n            Fired when the element changes internally its text value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInternalInputChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyDown\">\r\n            <summary>\r\n            Fired on the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyDownPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyDownPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyDown event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyDownPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyPress\">\r\n            <summary>\r\n            Fired on the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyPress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyPressPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyPress event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyPressPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.OnKeyUp\">\r\n            <summary>\r\n            Fired on the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyUpPreventDefault","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.KeyUpPreventDefault\">\r\n            <summary>\r\n            Prevent the default action for the KeyUp event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"KeyUpPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.ValueChanged\">\r\n            <summary>\r\n            Fired when the Value property changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Value\">\r\n            <summary>\r\n            The value of this input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudBaseInput`1.Format\">\r\n            <summary>\r\n            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.String, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextFieldString","Common.TypeNameIdentifier":"MudTextFieldString","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":260064574,"Kind":"Components.Component","Name":"MudBlazor.BaseMudThemeProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMudThemeProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Theme","TypeName":"MudBlazor.MudTheme","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.Theme\">\r\n            <summary>\r\n            The theme used by the application.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Theme","Common.GloballyQualifiedTypeName":"global::MudBlazor.MudTheme"}},{"Kind":"Components.Component","Name":"DefaultScrollbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.DefaultScrollbar\">\r\n            <summary>\r\n             If true, will not apply MudBlazor styled scrollbar and use browser default. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultScrollbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDarkMode","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.IsDarkMode\">\r\n            <summary>\r\n            The active palette of the theme.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsDarkMode","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDarkModeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.IsDarkModeChanged\">\r\n            <summary>\r\n            Invoked when the dark mode changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsDarkModeChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.BaseMudThemeProvider","Common.TypeNameIdentifier":"BaseMudThemeProvider","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1652929510,"Kind":"Components.Component","Name":"MudBlazor.BaseMudThemeProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.BaseMudThemeProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Theme","TypeName":"MudBlazor.MudTheme","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.Theme\">\r\n            <summary>\r\n            The theme used by the application.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Theme","Common.GloballyQualifiedTypeName":"global::MudBlazor.MudTheme"}},{"Kind":"Components.Component","Name":"DefaultScrollbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.DefaultScrollbar\">\r\n            <summary>\r\n             If true, will not apply MudBlazor styled scrollbar and use browser default. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultScrollbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDarkMode","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.IsDarkMode\">\r\n            <summary>\r\n            The active palette of the theme.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsDarkMode","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDarkModeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.IsDarkModeChanged\">\r\n            <summary>\r\n            Invoked when the dark mode changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsDarkModeChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.BaseMudThemeProvider","Common.TypeNameIdentifier":"BaseMudThemeProvider","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":65789053,"Kind":"Components.Component","Name":"MudBlazor.MudTimeline","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTimeline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TimelineOrientation","TypeName":"MudBlazor.TimelineOrientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimeline.TimelineOrientation\">\r\n            <summary>\r\n            Sets the orientation of the timeline and its timeline items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimelineOrientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.TimelineOrientation"}},{"Kind":"Components.Component","Name":"TimelinePosition","TypeName":"MudBlazor.TimelinePosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimeline.TimelinePosition\">\r\n            <summary>\r\n            The position the timeline itself and how the timeline items should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimelinePosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TimelinePosition"}},{"Kind":"Components.Component","Name":"TimelineAlign","TypeName":"MudBlazor.TimelineAlign","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimeline.TimelineAlign\">\r\n            <summary>\r\n            Aligns the dot and any item modifiers is changed, in default mode they are centered to the item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimelineAlign","Common.GloballyQualifiedTypeName":"global::MudBlazor.TimelineAlign"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTimeline.Reverse\">\r\n            <summary>\r\n            Reverse the order of TimelineItems when TimelinePosition is set to Alternate.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableModifiers","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTimeline.DisableModifiers\">\r\n            <summary>\r\n            If true, disables all TimelineItem modifiers, like adding a caret to a MudCard.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableModifiers","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.ChildContent\">\r\n            <summary>\r\n            Collection of T\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.SelectedIndex\">\r\n            <summary>\r\n            Selected Item's index\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimeline","Common.TypeNameIdentifier":"MudTimeline","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1112055361,"Kind":"Components.Component","Name":"MudBlazor.MudTimeline","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTimeline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TimelineOrientation","TypeName":"MudBlazor.TimelineOrientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimeline.TimelineOrientation\">\r\n            <summary>\r\n            Sets the orientation of the timeline and its timeline items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimelineOrientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.TimelineOrientation"}},{"Kind":"Components.Component","Name":"TimelinePosition","TypeName":"MudBlazor.TimelinePosition","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimeline.TimelinePosition\">\r\n            <summary>\r\n            The position the timeline itself and how the timeline items should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimelinePosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.TimelinePosition"}},{"Kind":"Components.Component","Name":"TimelineAlign","TypeName":"MudBlazor.TimelineAlign","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimeline.TimelineAlign\">\r\n            <summary>\r\n            Aligns the dot and any item modifiers is changed, in default mode they are centered to the item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimelineAlign","Common.GloballyQualifiedTypeName":"global::MudBlazor.TimelineAlign"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTimeline.Reverse\">\r\n            <summary>\r\n            Reverse the order of TimelineItems when TimelinePosition is set to Alternate.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableModifiers","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTimeline.DisableModifiers\">\r\n            <summary>\r\n            If true, disables all TimelineItem modifiers, like adding a caret to a MudCard.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableModifiers","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.ChildContent\">\r\n            <summary>\r\n            Collection of T\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.SelectedIndex\">\r\n            <summary>\r\n            Selected Item's index\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimeline","Common.TypeNameIdentifier":"MudTimeline","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":294654698,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimeline.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.ChildContent\">\r\n            <summary>\r\n            Collection of T\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTimeline"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimeline.ChildContent","Common.TypeNameIdentifier":"MudTimeline","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":530385608,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimeline.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudBaseItemsControl`1.ChildContent\">\r\n            <summary>\r\n            Collection of T\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTimeline"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimeline.ChildContent","Common.TypeNameIdentifier":"MudTimeline","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-950877391,"Kind":"Components.Component","Name":"MudBlazor.MudTimelineItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTimelineItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.Icon\">\r\n            <summary>\r\n            Dot Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.Variant\">\r\n            <summary>\r\n            Variant of the dot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"DotStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.DotStyle\">\r\n            <summary>\r\n            User styles, applied to the lineItem dot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DotStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.Color\">\r\n            <summary>\r\n            Color of the dot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.Size\">\r\n            <summary>\r\n            Size of the dot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.Elevation\">\r\n            <summary>\r\n            Elevation of the dot. The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"TimelineAlign","TypeName":"MudBlazor.TimelineAlign","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.TimelineAlign\">\r\n            <summary>\r\n            Overrides Timeline Parents default sorting method in Default and Reverse mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimelineAlign","Common.GloballyQualifiedTypeName":"global::MudBlazor.TimelineAlign"}},{"Kind":"Components.Component","Name":"HideDot","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.HideDot\">\r\n            <summary>\r\n            If true, dot will not be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideDot","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ItemOpposite","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemOpposite\">\r\n            <summary>\r\n            If used renders child content of the ItemOpposite.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemOpposite","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemContent\">\r\n            <summary>\r\n            If used renders child content of the ItemContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemDot","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemDot\">\r\n            <summary>\r\n            If used renders child content of the ItemDot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemDot","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ChildContent\">\r\n            <summary>\r\n            Optional child content if no other RenderFragments is used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimelineItem","Common.TypeNameIdentifier":"MudTimelineItem","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":171597936,"Kind":"Components.Component","Name":"MudBlazor.MudTimelineItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTimelineItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.Icon\">\r\n            <summary>\r\n            Dot Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.Variant\">\r\n            <summary>\r\n            Variant of the dot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"DotStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.DotStyle\">\r\n            <summary>\r\n            User styles, applied to the lineItem dot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DotStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.Color\">\r\n            <summary>\r\n            Color of the dot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.Size\">\r\n            <summary>\r\n            Size of the dot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.Elevation\">\r\n            <summary>\r\n            Elevation of the dot. The higher the number, the heavier the drop-shadow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"TimelineAlign","TypeName":"MudBlazor.TimelineAlign","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.TimelineAlign\">\r\n            <summary>\r\n            Overrides Timeline Parents default sorting method in Default and Reverse mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimelineAlign","Common.GloballyQualifiedTypeName":"global::MudBlazor.TimelineAlign"}},{"Kind":"Components.Component","Name":"HideDot","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.HideDot\">\r\n            <summary>\r\n            If true, dot will not be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HideDot","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ItemOpposite","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemOpposite\">\r\n            <summary>\r\n            If used renders child content of the ItemOpposite.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemOpposite","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemContent\">\r\n            <summary>\r\n            If used renders child content of the ItemContent.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemDot","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemDot\">\r\n            <summary>\r\n            If used renders child content of the ItemDot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemDot","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ChildContent\">\r\n            <summary>\r\n            Optional child content if no other RenderFragments is used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimelineItem","Common.TypeNameIdentifier":"MudTimelineItem","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1330347855,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimelineItem.ItemOpposite","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemOpposite\">\r\n            <summary>\r\n            If used renders child content of the ItemOpposite.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemOpposite","ParentTag":"MudTimelineItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimelineItem.ItemOpposite","Common.TypeNameIdentifier":"MudTimelineItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1253822503,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimelineItem.ItemOpposite","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemOpposite\">\r\n            <summary>\r\n            If used renders child content of the ItemOpposite.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemOpposite","ParentTag":"MudBlazor.MudTimelineItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimelineItem.ItemOpposite","Common.TypeNameIdentifier":"MudTimelineItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2061989608,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimelineItem.ItemContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemContent\">\r\n            <summary>\r\n            If used renders child content of the ItemContent.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"MudTimelineItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimelineItem.ItemContent","Common.TypeNameIdentifier":"MudTimelineItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":752006179,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimelineItem.ItemContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemContent\">\r\n            <summary>\r\n            If used renders child content of the ItemContent.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"MudBlazor.MudTimelineItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimelineItem.ItemContent","Common.TypeNameIdentifier":"MudTimelineItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":556587599,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimelineItem.ItemDot","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemDot\">\r\n            <summary>\r\n            If used renders child content of the ItemDot.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemDot","ParentTag":"MudTimelineItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimelineItem.ItemDot","Common.TypeNameIdentifier":"MudTimelineItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-34089499,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimelineItem.ItemDot","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ItemDot\">\r\n            <summary>\r\n            If used renders child content of the ItemDot.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemDot","ParentTag":"MudBlazor.MudTimelineItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimelineItem.ItemDot","Common.TypeNameIdentifier":"MudTimelineItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-810854721,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimelineItem.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ChildContent\">\r\n            <summary>\r\n            Optional child content if no other RenderFragments is used.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTimelineItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimelineItem.ChildContent","Common.TypeNameIdentifier":"MudTimelineItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":439289228,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimelineItem.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTimelineItem.ChildContent\">\r\n            <summary>\r\n            Optional child content if no other RenderFragments is used.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTimelineItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimelineItem.ChildContent","Common.TypeNameIdentifier":"MudTimelineItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1815276581,"Kind":"Components.Component","Name":"MudBlazor.MudTimePicker","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTimePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OpenTo","TypeName":"MudBlazor.OpenTo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimePicker.OpenTo\">\r\n            <summary>\r\n            First view to show in the MudDatePicker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenTo","Common.GloballyQualifiedTypeName":"global::MudBlazor.OpenTo"}},{"Kind":"Components.Component","Name":"TimeEditMode","TypeName":"MudBlazor.TimeEditMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimePicker.TimeEditMode\">\r\n            <summary>\r\n            Choose the edition mode. By default, you can edit hours and minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeEditMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.TimeEditMode"}},{"Kind":"Components.Component","Name":"ClosingDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.ClosingDelay\">\r\n            <summary>\r\n            Sets the amount of time in milliseconds to wait before closing the picker. This helps the user see that the time was selected before the popover disappears.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClosingDelay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.AutoClose\">\r\n            <summary>\r\n            If AutoClose is set to true and PickerActions are defined, the hour and the minutes can be defined without any action.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AmPm","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.AmPm\">\r\n            <summary>\r\n            If true, sets 12 hour selection clock.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AmPm","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TimeFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.TimeFormat\">\r\n            <summary>\r\n            String Format for selected time view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Time","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.Time\">\r\n            <summary>\r\n            The currently selected time (two-way bindable). If null, then nothing was selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Time","Common.GloballyQualifiedTypeName":"global::System.TimeSpan?"}},{"Kind":"Components.Component","Name":"TimeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan?>","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.TimeChanged\">\r\n            <summary>\r\n            Fired when the date changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.TimeSpan?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InputIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            Sets the aria-label of the input text field icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerOpened","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerOpened\">\r\n            <summary>\r\n            Fired when the dropdown / dialog opens\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerOpened","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PickerClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerClosed\">\r\n            <summary>\r\n            Fired when the dropdown / dialog closes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0 this is set to true automatically in static mode but can be overridden with Rounded bool.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ReadOnly\">\r\n            <summary>\r\n            If true, no date or time can be defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to theme default when in Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperText\">\r\n            <summary>\r\n            If string has value, HelperText will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Disabled\">\r\n            <summary>\r\n            If true, the picker will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Editable\">\r\n            <summary>\r\n            If true, the picker will be editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.DisableToolbar\">\r\n            <summary>\r\n            Hide toolbar and show only date/time views.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ToolBarClass\">\r\n            <summary>\r\n            User class names for picker's ToolBar, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerVariant","TypeName":"MudBlazor.PickerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerVariant\">\r\n            <summary>\r\n            Picker container option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.PickerVariant"}},{"Kind":"Components.Component","Name":"InputVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputVariant\">\r\n            <summary>\r\n             Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Variant\">\r\n            <summary>\r\n            Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Adornment\">\r\n            <summary>\r\n            Sets if the icon will be att start or end, set to false to disable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Orientation\">\r\n            <summary>\r\n            What orientation to render in when in PickerVariant Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Color\">\r\n            <summary>\r\n            The color of the toolbar, selected and active. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AllowKeyboardInput","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AllowKeyboardInput\">\r\n            <summary>\r\n            Changes the cursor appearance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowKeyboardInput","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Text\">\r\n            <summary>\r\n            The currently selected string value (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudPicker<System.TimeSpan?>>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudPicker<global::System.TimeSpan?>>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Mask\">\r\n            <summary>\r\n            A mask for structured input of the date (requires Editable to be true).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AnchorOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's anchor. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TransformOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's transform. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.TimeSpan?, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.TimeSpan?, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.TimeSpan?>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.TimeSpan?>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimePicker","Common.TypeNameIdentifier":"MudTimePicker","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1972178108,"Kind":"Components.Component","Name":"MudBlazor.MudTimePicker","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTimePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OpenTo","TypeName":"MudBlazor.OpenTo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimePicker.OpenTo\">\r\n            <summary>\r\n            First view to show in the MudDatePicker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OpenTo","Common.GloballyQualifiedTypeName":"global::MudBlazor.OpenTo"}},{"Kind":"Components.Component","Name":"TimeEditMode","TypeName":"MudBlazor.TimeEditMode","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTimePicker.TimeEditMode\">\r\n            <summary>\r\n            Choose the edition mode. By default, you can edit hours and minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeEditMode","Common.GloballyQualifiedTypeName":"global::MudBlazor.TimeEditMode"}},{"Kind":"Components.Component","Name":"ClosingDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.ClosingDelay\">\r\n            <summary>\r\n            Sets the amount of time in milliseconds to wait before closing the picker. This helps the user see that the time was selected before the popover disappears.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClosingDelay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.AutoClose\">\r\n            <summary>\r\n            If AutoClose is set to true and PickerActions are defined, the hour and the minutes can be defined without any action.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AmPm","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.AmPm\">\r\n            <summary>\r\n            If true, sets 12 hour selection clock.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AmPm","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TimeFormat","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.TimeFormat\">\r\n            <summary>\r\n            String Format for selected time view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Time","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.Time\">\r\n            <summary>\r\n            The currently selected time (two-way bindable). If null, then nothing was selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Time","Common.GloballyQualifiedTypeName":"global::System.TimeSpan?"}},{"Kind":"Components.Component","Name":"TimeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan?>","Documentation":"<member name=\"P:MudBlazor.MudTimePicker.TimeChanged\">\r\n            <summary>\r\n            Fired when the date changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.TimeSpan?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InputIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentColor\">\r\n            <summary>\r\n            The color of the adornment if used. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AdornmentIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentIcon\">\r\n            <summary>\r\n            Sets the icon of the input text field\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentAriaLabel","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AdornmentAriaLabel\">\r\n            <summary>\r\n            Sets the aria-label of the input text field icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdornmentAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Placeholder\">\r\n            <summary>\r\n            The short hint displayed in the input before the user enters a value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerOpened","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerOpened\">\r\n            <summary>\r\n            Fired when the dropdown / dialog opens\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerOpened","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PickerClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerClosed\">\r\n            <summary>\r\n            Fired when the dropdown / dialog closes\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Elevation\">\r\n            <summary>\r\n            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Elevation","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Square\">\r\n            <summary>\r\n            If true, border-radius is set to 0 this is set to true automatically in static mode but can be overridden with Rounded bool.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Square","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ReadOnly\">\r\n            <summary>\r\n            If true, no date or time can be defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReadOnly","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Rounded\">\r\n            <summary>\r\n            If true, border-radius is set to theme default when in Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rounded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperText\">\r\n            <summary>\r\n            If string has value, HelperText will be applied.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HelperTextOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.HelperTextOnFocus\">\r\n            <summary>\r\n            If true, the helper text will only be visible on focus.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HelperTextOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Label\">\r\n            <summary>\r\n            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Clearable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Clearable\">\r\n            <summary>\r\n            Show clear button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Clearable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Disabled\">\r\n            <summary>\r\n            If true, the picker will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Editable\">\r\n            <summary>\r\n            If true, the picker will be editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.DisableToolbar\">\r\n            <summary>\r\n            Hide toolbar and show only date/time views.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ToolBarClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ToolBarClass\">\r\n            <summary>\r\n            User class names for picker's ToolBar, separated by space\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolBarClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerVariant","TypeName":"MudBlazor.PickerVariant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerVariant\">\r\n            <summary>\r\n            Picker container option\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.PickerVariant"}},{"Kind":"Components.Component","Name":"InputVariant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.InputVariant\">\r\n            <summary>\r\n             Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"InputVariant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"MudBlazor.Variant","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Variant\">\r\n            <summary>\r\n            Variant of the text input\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::MudBlazor.Variant"}},{"Kind":"Components.Component","Name":"Adornment","TypeName":"MudBlazor.Adornment","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Adornment\">\r\n            <summary>\r\n            Sets if the icon will be att start or end, set to false to disable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adornment","Common.GloballyQualifiedTypeName":"global::MudBlazor.Adornment"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Orientation\">\r\n            <summary>\r\n            What orientation to render in when in PickerVariant Static Mode.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.IconSize\">\r\n            <summary>\r\n            Sets the Icon Size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Color\">\r\n            <summary>\r\n            The color of the toolbar, selected and active. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AllowKeyboardInput","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AllowKeyboardInput\">\r\n            <summary>\r\n            Changes the cursor appearance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowKeyboardInput","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TextChanged\">\r\n            <summary>\r\n            Fired when the text changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Text\">\r\n            <summary>\r\n            The currently selected string value (two-way bindable)\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassActions","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.ClassActions\">\r\n            <summary>\r\n            CSS class that will be applied to the action buttons container\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassActions","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PickerActions","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MudBlazor.MudPicker<System.TimeSpan?>>","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PickerActions","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MudBlazor.MudPicker<global::System.TimeSpan?>>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"MudBlazor.Margin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Margin\">\r\n            <summary>\r\n             Will adjust vertical spacing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Margin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Margin"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"MudBlazor.IMask","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.Mask\">\r\n            <summary>\r\n            A mask for structured input of the date (requires Editable to be true).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mask","Common.GloballyQualifiedTypeName":"global::MudBlazor.IMask"}},{"Kind":"Components.Component","Name":"AnchorOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.AnchorOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's anchor. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AnchorOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"TransformOrigin","TypeName":"MudBlazor.Origin","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudPicker`1.TransformOrigin\">\r\n            <summary>\r\n            Gets or sets the origin of the popover's transform. Defaults to <see cref=\"F:MudBlazor.Origin.TopLeft\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TransformOrigin","Common.GloballyQualifiedTypeName":"global::MudBlazor.Origin"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Required\">\r\n            <summary>\r\n            If true, this form input is required to be filled out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Required","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiredError","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.RequiredError\">\r\n            <summary>\r\n            The error text that will be displayed if the input is not filled out but required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredError","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ErrorText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorText\">\r\n            <summary>\r\n            The ErrorText that will be displayed if Error true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Error","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Error\">\r\n            <summary>\r\n            If true, the label will be displayed in an error state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Error","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ErrorId","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.ErrorId\">\r\n            <summary>\r\n            The ErrorId that will be used by aria-describedby if Error true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"MudBlazor.Converter<System.TimeSpan?, System.String>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Converter\">\r\n            <summary>\r\n            The generic converter of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Converter","Common.GloballyQualifiedTypeName":"global::MudBlazor.Converter<global::System.TimeSpan?, global::System.String>"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Culture\">\r\n            <summary>\r\n            The culture of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Validation","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.Validation\">\r\n            <summary>\r\n            A validation func or a validation attribute. Supported types are:\r\n            <para>Func&lt;T, bool&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, string&gt; ... outputs the result as error message, no error if null </para>\r\n            <para>Func&lt;T, IEnumerable&lt; string &gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, IEnumerable&lt; string &gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;T, Task&lt; bool &gt;&gt; ... will output the standard error message \"Invalid\" if false</para>\r\n            <para>Func&lt;T, Task&lt; string &gt;&gt; ... outputs the result as error message, no error if null</para>\r\n            <para>Func&lt;T, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; ... outputs all the returned error messages, no error if empty</para>\r\n            <para>Func&lt;object, string, Task&lt;IEnumerable&lt; string &gt;&gt;&gt; input Form.Model, Full Path of Member ... outputs all the returned error messages, no error if empty</para>\r\n            <para>System.ComponentModel.DataAnnotations.ValidationAttribute instances</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Validation","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<System.TimeSpan?>>","Documentation":"<member name=\"P:MudBlazor.MudFormComponent`2.For\">\r\n            <summary>\r\n            Specify an expression which returns the model's field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.TimeSpan?>>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimePicker","Common.TypeNameIdentifier":"MudTimePicker","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":456702548,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimePicker.PickerActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PickerActions","ParentTag":"MudTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PickerActions"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimePicker.PickerActions","Common.TypeNameIdentifier":"MudTimePicker","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-368179502,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTimePicker.PickerActions","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudPicker`1.PickerActions\">\r\n            <summary>\r\n            Define the action buttons here\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PickerActions","ParentTag":"MudBlazor.MudTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["PickerActions"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimePicker.PickerActions","Common.TypeNameIdentifier":"MudTimePicker","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1097773742,"Kind":"Components.Component","Name":"MudBlazor.MudTooltip","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTooltip.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Text\">\r\n            <summary>\r\n            Sets the text to be displayed inside the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Arrow","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Arrow\">\r\n            <summary>\r\n            If true, a arrow will be displayed pointing towards the content from the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Arrow","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Duration\">\r\n            <summary>\r\n            Sets the length of time that the opening transition takes to complete.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Duration","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Delay\">\r\n            <summary>\r\n            Sets the amount of time in milliseconds to wait from opening the popover before beginning to perform the transition. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Delayed","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Delayed\">\r\n            <summary>\r\n            Changes the default transition delay in seconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Delayed","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"MudBlazor.Placement","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTooltip.Placement\">\r\n            <summary>\r\n            Tooltip placement.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::MudBlazor.Placement"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTooltip.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TooltipContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTooltip.TooltipContent\">\r\n            <summary>\r\n            Tooltip content. May contain any valid html\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TooltipContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Inline\">\r\n            <summary>\r\n            Determines if this component should be inline with it's surrounding (default) or if it should behave like a block element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RootStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTooltip.RootStyle\">\r\n            <summary>\r\n            Styles applied directly to root component of the tooltip\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RootStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RootClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTooltip.RootClass\">\r\n            Classes applied directly to root component of the tooltip\r\n        </member>","Metadata":{"Common.PropertyName":"RootClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowOnHover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTooltip.ShowOnHover\">\r\n            <summary>\r\n            Determines on which events the tooltip will act\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowOnHover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTooltip.ShowOnFocus\">\r\n            <summary>\r\n            Determines on which events the tooltip will act\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowOnClick","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowOnClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTooltip.IsVisible\">\r\n            <summary>\r\n            The visible state of the Tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsVisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTooltip.IsVisibleChanged\">\r\n            <summary>\r\n            An event triggered when the state of IsVisible has changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisibleChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTooltip","Common.TypeNameIdentifier":"MudTooltip","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":257143073,"Kind":"Components.Component","Name":"MudBlazor.MudTooltip","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTooltip.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Text\">\r\n            <summary>\r\n            Sets the text to be displayed inside the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Arrow","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Arrow\">\r\n            <summary>\r\n            If true, a arrow will be displayed pointing towards the content from the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Arrow","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Duration\">\r\n            <summary>\r\n            Sets the length of time that the opening transition takes to complete.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Duration","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Delay\">\r\n            <summary>\r\n            Sets the amount of time in milliseconds to wait from opening the popover before beginning to perform the transition. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Delayed","TypeName":"System.Double","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Delayed\">\r\n            <summary>\r\n            Changes the default transition delay in seconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Delayed","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"MudBlazor.Placement","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTooltip.Placement\">\r\n            <summary>\r\n            Tooltip placement.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::MudBlazor.Placement"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTooltip.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TooltipContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTooltip.TooltipContent\">\r\n            <summary>\r\n            Tooltip content. May contain any valid html\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TooltipContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTooltip.Inline\">\r\n            <summary>\r\n            Determines if this component should be inline with it's surrounding (default) or if it should behave like a block element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RootStyle","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTooltip.RootStyle\">\r\n            <summary>\r\n            Styles applied directly to root component of the tooltip\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RootStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RootClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTooltip.RootClass\">\r\n            Classes applied directly to root component of the tooltip\r\n        </member>","Metadata":{"Common.PropertyName":"RootClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowOnHover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTooltip.ShowOnHover\">\r\n            <summary>\r\n            Determines on which events the tooltip will act\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowOnHover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowOnFocus","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTooltip.ShowOnFocus\">\r\n            <summary>\r\n            Determines on which events the tooltip will act\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowOnFocus","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowOnClick","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowOnClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTooltip.IsVisible\">\r\n            <summary>\r\n            The visible state of the Tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsVisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTooltip.IsVisibleChanged\">\r\n            <summary>\r\n            An event triggered when the state of IsVisible has changed\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsVisibleChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTooltip","Common.TypeNameIdentifier":"MudTooltip","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1375529319,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTooltip.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTooltip.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTooltip"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTooltip.ChildContent","Common.TypeNameIdentifier":"MudTooltip","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":99656627,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTooltip.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTooltip.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTooltip"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTooltip.ChildContent","Common.TypeNameIdentifier":"MudTooltip","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-328311671,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTooltip.TooltipContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTooltip.TooltipContent\">\r\n            <summary>\r\n            Tooltip content. May contain any valid html\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TooltipContent","ParentTag":"MudTooltip"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTooltip.TooltipContent","Common.TypeNameIdentifier":"MudTooltip","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1746414434,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTooltip.TooltipContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTooltip.TooltipContent\">\r\n            <summary>\r\n            Tooltip content. May contain any valid html\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TooltipContent","ParentTag":"MudBlazor.MudTooltip"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTooltip.TooltipContent","Common.TypeNameIdentifier":"MudTooltip","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":481866089,"Kind":"Components.Component","Name":"MudBlazor.MudTreeView<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTreeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTreeView<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Color\">\r\n            <summary>\r\n            The color of the selected treeviewitem.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"CheckBoxColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.CheckBoxColor\">\r\n            <summary>\r\n            Check box color if multiselection is used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckBoxColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"MultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.MultiSelection\">\r\n            <summary>\r\n            if true, multiple values can be selected via checkboxes which are automatically shown in the tree view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CanSelect","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.CanSelect\">\r\n            <summary>\r\n            if true, multiple values can be selected via checkboxes which are automatically shown in the tree view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanSelect","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CanActivate","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"CanActivate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ExpandOnClick\">\r\n            <summary>\r\n            If true, clicking anywhere on the item will expand it, if it has childs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandOnClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandOnDoubleClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ExpandOnDoubleClick\">\r\n            <summary>\r\n            If true, double clicking anywhere on the item will expand it, if it has childs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandOnDoubleClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Hover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Hover\">\r\n            <summary>\r\n            Hover effect for item's on mouse-over.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CanHover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.CanHover\">\r\n            <summary>\r\n            Hover effect for item's on mouse-over.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanHover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all treeview items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Height\">\r\n            <summary>\r\n            Setting a height will allow to scroll the treeview. If not set, it will try to grow in height. \r\n            You can set this to any CSS value that the attribute 'height' accepts, i.e. 500px. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.MaxHeight\">\r\n            <summary>\r\n            Setting a maximum height will allow to scroll the treeview. If not set, it will try to grow in height. \r\n            You can set this to any CSS value that the attribute 'height' accepts, i.e. 500px. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Width\">\r\n            <summary>\r\n            Setting a width the treeview. You can set this to any CSS value that the attribute 'height' accepts, i.e. 500px. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Disabled\">\r\n            <summary>\r\n            If true, treeview will be disabled and all its childitems.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.HashSet<T>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ActivatedValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ActivatedValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.SelectedValueChanged\">\r\n            <summary>\r\n            Called whenever the selected value changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"SelectedValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedValuesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<T>>","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.SelectedValuesChanged\">\r\n            <summary>\r\n            Called whenever the selectedvalues changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.HashSet<T>>","Common.PropertyName":"SelectedValuesChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate for rendering children.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ServerData","TypeName":"System.Func<T, System.Threading.Tasks.Task<System.Collections.Generic.HashSet<T>>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Threading.Tasks.Task<global::System.Collections.Generic.HashSet<T>>>","Common.PropertyName":"ServerData","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeView<T>","Common.TypeNameIdentifier":"MudTreeView","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1826630987,"Kind":"Components.Component","Name":"MudBlazor.MudTreeView<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTreeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTreeView<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Color\">\r\n            <summary>\r\n            The color of the selected treeviewitem.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"CheckBoxColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.CheckBoxColor\">\r\n            <summary>\r\n            Check box color if multiselection is used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckBoxColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"MultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.MultiSelection\">\r\n            <summary>\r\n            if true, multiple values can be selected via checkboxes which are automatically shown in the tree view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MultiSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CanSelect","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.CanSelect\">\r\n            <summary>\r\n            if true, multiple values can be selected via checkboxes which are automatically shown in the tree view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanSelect","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CanActivate","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"CanActivate","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ExpandOnClick\">\r\n            <summary>\r\n            If true, clicking anywhere on the item will expand it, if it has childs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandOnClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandOnDoubleClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ExpandOnDoubleClick\">\r\n            <summary>\r\n            If true, double clicking anywhere on the item will expand it, if it has childs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandOnDoubleClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Hover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Hover\">\r\n            <summary>\r\n            Hover effect for item's on mouse-over.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CanHover","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.CanHover\">\r\n            <summary>\r\n            Hover effect for item's on mouse-over.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanHover","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Dense\">\r\n            <summary>\r\n            If true, compact vertical padding will be applied to all treeview items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Height\">\r\n            <summary>\r\n            Setting a height will allow to scroll the treeview. If not set, it will try to grow in height. \r\n            You can set this to any CSS value that the attribute 'height' accepts, i.e. 500px. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.MaxHeight\">\r\n            <summary>\r\n            Setting a maximum height will allow to scroll the treeview. If not set, it will try to grow in height. \r\n            You can set this to any CSS value that the attribute 'height' accepts, i.e. 500px. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxHeight","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Width\">\r\n            <summary>\r\n            Setting a width the treeview. You can set this to any CSS value that the attribute 'height' accepts, i.e. 500px. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.Disabled\">\r\n            <summary>\r\n            If true, treeview will be disabled and all its childitems.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.HashSet<T>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ActivatedValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"ActivatedValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.SelectedValueChanged\">\r\n            <summary>\r\n            Called whenever the selected value changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Common.PropertyName":"SelectedValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedValuesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<T>>","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.SelectedValuesChanged\">\r\n            <summary>\r\n            Called whenever the selectedvalues changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.HashSet<T>>","Common.PropertyName":"SelectedValuesChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate for rendering children.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ServerData","TypeName":"System.Func<T, System.Threading.Tasks.Task<System.Collections.Generic.HashSet<T>>>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Threading.Tasks.Task<global::System.Collections.Generic.HashSet<T>>>","Common.PropertyName":"ServerData","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeView<T>","Common.TypeNameIdentifier":"MudTreeView","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1550643130,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTreeView<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTreeView"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeView<T>.ChildContent","Common.TypeNameIdentifier":"MudTreeView","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-68469502,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTreeView<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTreeView"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeView<T>.ChildContent","Common.TypeNameIdentifier":"MudTreeView","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2102503347,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTreeView<T>.ItemTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate for rendering children.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MudTreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeView<T>.ItemTemplate","Common.TypeNameIdentifier":"MudTreeView","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-932913853,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTreeView<T>.ItemTemplate","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTreeView`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate for rendering children.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MudBlazor.MudTreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemTemplate"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeView<T>.ItemTemplate","Common.TypeNameIdentifier":"MudTreeView","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1016976546,"Kind":"Components.Component","Name":"MudBlazor.MudTreeViewItem<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTreeViewItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTreeViewItem<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"CheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.CheckedIcon\">\r\n            <summary>\r\n            Custom checked icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UncheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.UncheckedIcon\">\r\n            <summary>\r\n            Custom unchecked icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UncheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Value\">\r\n            <summary>\r\n            Value of the treeviewitem. Acts as the displayed text if no text is set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Text\">\r\n            <summary>\r\n            The text to display\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextTypo","TypeName":"MudBlazor.Typo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.TextTypo\">\r\n            <summary>\r\n            Tyopography for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextTypo","Common.GloballyQualifiedTypeName":"global::MudBlazor.Typo"}},{"Kind":"Components.Component","Name":"TextClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.TextClass\">\r\n            <summary>\r\n            User class names for the text, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.EndText\">\r\n            <summary>\r\n            The text at the end of the item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndTextTypo","TypeName":"MudBlazor.Typo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.EndTextTypo\">\r\n            <summary>\r\n            Tyopography for the endtext.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndTextTypo","Common.GloballyQualifiedTypeName":"global::MudBlazor.Typo"}},{"Kind":"Components.Component","Name":"EndTextClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.EndTextClass\">\r\n            <summary>\r\n            User class names for the endtext, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndTextClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Disabled\">\r\n            <summary>\r\n            If true, treeviewitem will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CanExpand","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.CanExpand\">\r\n            <summary>\r\n            If false, TreeViewItem will not be able to expand.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanExpand","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ChildContent\">\r\n            <summary>\r\n            Child content of component used to create sub levels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Content\">\r\n            <summary>\r\n            Content of the item, if used completly replaced the default rendering.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.HashSet<T>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on the CommitEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Expanded\">\r\n            <summary>\r\n            Expand or collapse treeview item when it has children. Two-way bindable. Note: if you directly set this to\r\n            true or false (instead of using two-way binding) it will force the item's expansion state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ExpandedChanged\">\r\n            <summary>\r\n            Called whenever expanded changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Activated","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Activated","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Selected","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Icon\">\r\n            <summary>\r\n            Icon placed before the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"EndIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.EndIcon\">\r\n            <summary>\r\n            Icon placed after the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.EndIconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ExpandedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ExpandedIcon\">\r\n            <summary>\r\n            The expand/collapse icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandedIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ExpandedIconColor\">\r\n            <summary>\r\n            The color of the expand/collapse button. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"LoadingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.LoadingIcon\">\r\n            <summary>\r\n            The loading icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LoadingIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.LoadingIconColor\">\r\n            <summary>\r\n            The color of the loading. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ActivatedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ActivatedChanged\">\r\n            <summary>\r\n            Called whenever the activated value changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivatedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.SelectedChanged\">\r\n            <summary>\r\n            Called whenever the selected value changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.OnClick\">\r\n            <summary>\r\n            Tree item click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.OnDoubleClick\">\r\n            <summary>\r\n            Tree item double click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-533955866,"Kind":"Components.Component","Name":"MudBlazor.MudTreeViewItem<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTreeViewItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTreeViewItem<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"CheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.CheckedIcon\">\r\n            <summary>\r\n            Custom checked icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UncheckedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.UncheckedIcon\">\r\n            <summary>\r\n            Custom unchecked icon, leave null for default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UncheckedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Value\">\r\n            <summary>\r\n            Value of the treeviewitem. Acts as the displayed text if no text is set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Culture","TypeName":"System.Globalization.CultureInfo","Metadata":{"Common.PropertyName":"Culture","Common.GloballyQualifiedTypeName":"global::System.Globalization.CultureInfo"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Text\">\r\n            <summary>\r\n            The text to display\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextTypo","TypeName":"MudBlazor.Typo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.TextTypo\">\r\n            <summary>\r\n            Tyopography for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextTypo","Common.GloballyQualifiedTypeName":"global::MudBlazor.Typo"}},{"Kind":"Components.Component","Name":"TextClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.TextClass\">\r\n            <summary>\r\n            User class names for the text, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TextClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndText","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.EndText\">\r\n            <summary>\r\n            The text at the end of the item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndTextTypo","TypeName":"MudBlazor.Typo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.EndTextTypo\">\r\n            <summary>\r\n            Tyopography for the endtext.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndTextTypo","Common.GloballyQualifiedTypeName":"global::MudBlazor.Typo"}},{"Kind":"Components.Component","Name":"EndTextClass","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.EndTextClass\">\r\n            <summary>\r\n            User class names for the endtext, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndTextClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Disabled\">\r\n            <summary>\r\n            If true, treeviewitem will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CanExpand","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.CanExpand\">\r\n            <summary>\r\n            If false, TreeViewItem will not be able to expand.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CanExpand","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ChildContent\">\r\n            <summary>\r\n            Child content of component used to create sub levels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Content\">\r\n            <summary>\r\n            Content of the item, if used completly replaced the default rendering.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.HashSet<T>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on the CommitEdit Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Command","Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Expanded\">\r\n            <summary>\r\n            Expand or collapse treeview item when it has children. Two-way bindable. Note: if you directly set this to\r\n            true or false (instead of using two-way binding) it will force the item's expansion state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ExpandedChanged\">\r\n            <summary>\r\n            Called whenever expanded changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Activated","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Activated","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Selected","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Icon\">\r\n            <summary>\r\n            Icon placed before the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.IconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"EndIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.EndIcon\">\r\n            <summary>\r\n            Icon placed after the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EndIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.EndIconColor\">\r\n            <summary>\r\n            The color of the icon. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EndIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ExpandedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ExpandedIcon\">\r\n            <summary>\r\n            The expand/collapse icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandedIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ExpandedIconColor\">\r\n            <summary>\r\n            The color of the expand/collapse button. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"LoadingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.LoadingIcon\">\r\n            <summary>\r\n            The loading icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LoadingIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.LoadingIconColor\">\r\n            <summary>\r\n            The color of the loading. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ActivatedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ActivatedChanged\">\r\n            <summary>\r\n            Called whenever the activated value changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActivatedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.SelectedChanged\">\r\n            <summary>\r\n            Called whenever the selected value changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.OnClick\">\r\n            <summary>\r\n            Tree item click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.OnDoubleClick\">\r\n            <summary>\r\n            Tree item double click event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":65212546,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTreeViewItem<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ChildContent\">\r\n            <summary>\r\n            Child content of component used to create sub levels.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTreeViewItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>.ChildContent","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":187914039,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTreeViewItem<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.ChildContent\">\r\n            <summary>\r\n            Child content of component used to create sub levels.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTreeViewItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>.ChildContent","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1862894180,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTreeViewItem<T>.Content","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Content\">\r\n            <summary>\r\n            Content of the item, if used completly replaced the default rendering.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"MudTreeViewItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>.Content","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-226518329,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTreeViewItem<T>.Content","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItem`1.Content\">\r\n            <summary>\r\n            Content of the item, if used completly replaced the default rendering.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"MudBlazor.MudTreeViewItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>.Content","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1153519609,"Kind":"Components.Component","Name":"MudBlazor.MudText","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Typo","TypeName":"MudBlazor.Typo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudText.Typo\">\r\n            <summary>\r\n            Applies the theme typography styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Typo","Common.GloballyQualifiedTypeName":"global::MudBlazor.Typo"}},{"Kind":"Components.Component","Name":"Align","TypeName":"MudBlazor.Align","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudText.Align\">\r\n            <summary>\r\n            Set the text-align on the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Align","Common.GloballyQualifiedTypeName":"global::MudBlazor.Align"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudText.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"GutterBottom","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudText.GutterBottom\">\r\n            <summary>\r\n            If true, the text will have a bottom margin.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GutterBottom","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudText.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudText.Inline\">\r\n            <summary>\r\n            If true, Sets display inline\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudText","Common.TypeNameIdentifier":"MudText","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-525241306,"Kind":"Components.Component","Name":"MudBlazor.MudText","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Typo","TypeName":"MudBlazor.Typo","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudText.Typo\">\r\n            <summary>\r\n            Applies the theme typography styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Typo","Common.GloballyQualifiedTypeName":"global::MudBlazor.Typo"}},{"Kind":"Components.Component","Name":"Align","TypeName":"MudBlazor.Align","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudText.Align\">\r\n            <summary>\r\n            Set the text-align on the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Align","Common.GloballyQualifiedTypeName":"global::MudBlazor.Align"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudText.Color\">\r\n            <summary>\r\n            The color of the component. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"GutterBottom","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudText.GutterBottom\">\r\n            <summary>\r\n            If true, the text will have a bottom margin.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GutterBottom","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudText.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudText.Inline\">\r\n            <summary>\r\n            If true, Sets display inline\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudText","Common.TypeNameIdentifier":"MudText","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-719664388,"Kind":"Components.ChildContent","Name":"MudBlazor.MudText.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudText.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudText"}],"Metadata":{"Common.TypeName":"MudBlazor.MudText.ChildContent","Common.TypeNameIdentifier":"MudText","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1905110834,"Kind":"Components.ChildContent","Name":"MudBlazor.MudText.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudText.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudText"}],"Metadata":{"Common.TypeName":"MudBlazor.MudText.ChildContent","Common.TypeNameIdentifier":"MudText","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-480460456,"Kind":"Components.Component","Name":"MudBlazor.MudVirtualize<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudVirtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudVirtualize<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudVirtualize`1.IsEnabled\">\r\n            <summary>\r\n            Set false to turn off virtualization\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudVirtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<T>","Documentation":"<member name=\"P:MudBlazor.MudVirtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudVirtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudVirtualize<T>","Common.TypeNameIdentifier":"MudVirtualize","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1132175155,"Kind":"Components.Component","Name":"MudBlazor.MudVirtualize<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudVirtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudVirtualize<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudVirtualize`1.IsEnabled\">\r\n            <summary>\r\n            Set false to turn off virtualization\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:MudBlazor.MudVirtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<T>","Documentation":"<member name=\"P:MudBlazor.MudVirtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<T>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudVirtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudVirtualize<T>","Common.TypeNameIdentifier":"MudVirtualize","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1602103237,"Kind":"Components.ChildContent","Name":"MudBlazor.MudVirtualize<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudVirtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudVirtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudVirtualize<T>.ChildContent","Common.TypeNameIdentifier":"MudVirtualize","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1369165147,"Kind":"Components.ChildContent","Name":"MudBlazor.MudVirtualize<T>.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudVirtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudVirtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudVirtualize<T>.ChildContent","Common.TypeNameIdentifier":"MudVirtualize","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-663335215,"Kind":"Components.Component","Name":"MudBlazor.MudAppBarSpacer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudAppBarSpacer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAppBarSpacer","Common.TypeNameIdentifier":"MudAppBarSpacer","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1597874751,"Kind":"Components.Component","Name":"MudBlazor.MudAppBarSpacer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudAppBarSpacer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudAppBarSpacer","Common.TypeNameIdentifier":"MudAppBarSpacer","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1027045558,"Kind":"Components.Component","Name":"MudBlazor.BreadcrumbLink","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BreadcrumbLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Item","TypeName":"MudBlazor.BreadcrumbItem","Metadata":{"Common.PropertyName":"Item","Common.GloballyQualifiedTypeName":"global::MudBlazor.BreadcrumbItem"}}],"Metadata":{"Common.TypeName":"MudBlazor.BreadcrumbLink","Common.TypeNameIdentifier":"BreadcrumbLink","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-723422292,"Kind":"Components.Component","Name":"MudBlazor.BreadcrumbLink","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.BreadcrumbLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Item","TypeName":"MudBlazor.BreadcrumbItem","Metadata":{"Common.PropertyName":"Item","Common.GloballyQualifiedTypeName":"global::MudBlazor.BreadcrumbItem"}}],"Metadata":{"Common.TypeName":"MudBlazor.BreadcrumbLink","Common.TypeNameIdentifier":"BreadcrumbLink","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1279296531,"Kind":"Components.Component","Name":"MudBlazor.BreadcrumbSeparator","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BreadcrumbSeparator"}],"Metadata":{"Common.TypeName":"MudBlazor.BreadcrumbSeparator","Common.TypeNameIdentifier":"BreadcrumbSeparator","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1300712604,"Kind":"Components.Component","Name":"MudBlazor.BreadcrumbSeparator","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.BreadcrumbSeparator"}],"Metadata":{"Common.TypeName":"MudBlazor.BreadcrumbSeparator","Common.TypeNameIdentifier":"BreadcrumbSeparator","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1017994331,"Kind":"Components.Component","Name":"MudBlazor.MudChart","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudChart","Common.TypeNameIdentifier":"MudChart","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":920682328,"Kind":"Components.Component","Name":"MudBlazor.MudChart","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudChart","Common.TypeNameIdentifier":"MudChart","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":634386586,"Kind":"Components.ChildContent","Name":"MudBlazor.MudChart.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"MudChart"}],"Metadata":{"Common.TypeName":"MudBlazor.MudChart.CustomGraphics","Common.TypeNameIdentifier":"MudChart","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1974767605,"Kind":"Components.ChildContent","Name":"MudBlazor.MudChart.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"MudBlazor.MudChart"}],"Metadata":{"Common.TypeName":"MudBlazor.MudChart.CustomGraphics","Common.TypeNameIdentifier":"MudChart","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-448329393,"Kind":"Components.Component","Name":"MudBlazor.MudContainer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudContainer.Fixed\">\r\n            <summary>\r\n            Set the max-width to match the min-width of the current breakpoint. This is useful if you'd prefer to design for a fixed set of sizes instead of trying to accommodate a fully fluid viewport. It's fluid by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"MudBlazor.MaxWidth","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudContainer.MaxWidth\">\r\n            <summary>\r\n            Determine the max-width of the container. The container width grows with the size of the screen. Set to false to disable maxWidth.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxWidth","Common.GloballyQualifiedTypeName":"global::MudBlazor.MaxWidth"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudContainer.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudContainer","Common.TypeNameIdentifier":"MudContainer","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":404920983,"Kind":"Components.Component","Name":"MudBlazor.MudContainer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudContainer.Fixed\">\r\n            <summary>\r\n            Set the max-width to match the min-width of the current breakpoint. This is useful if you'd prefer to design for a fixed set of sizes instead of trying to accommodate a fully fluid viewport. It's fluid by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"MudBlazor.MaxWidth","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudContainer.MaxWidth\">\r\n            <summary>\r\n            Determine the max-width of the container. The container width grows with the size of the screen. Set to false to disable maxWidth.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxWidth","Common.GloballyQualifiedTypeName":"global::MudBlazor.MaxWidth"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudContainer.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudContainer","Common.TypeNameIdentifier":"MudContainer","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":677139345,"Kind":"Components.ChildContent","Name":"MudBlazor.MudContainer.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudContainer.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudContainer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudContainer.ChildContent","Common.TypeNameIdentifier":"MudContainer","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1302733105,"Kind":"Components.ChildContent","Name":"MudBlazor.MudContainer.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudContainer.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudContainer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudContainer.ChildContent","Common.TypeNameIdentifier":"MudContainer","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1244994122,"Kind":"Components.Component","Name":"MudBlazor.HierarchyColumn<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HierarchyColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.HierarchyColumn<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ClosedIcon","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClosedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OpenIcon","TypeName":"System.String","Metadata":{"Common.PropertyName":"OpenIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"ButtonDisabledFunc","TypeName":"System.Func<T, System.Boolean>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"ButtonDisabledFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.HierarchyColumn<T>","Common.TypeNameIdentifier":"HierarchyColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-335019536,"Kind":"Components.Component","Name":"MudBlazor.HierarchyColumn<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.HierarchyColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.HierarchyColumn<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ClosedIcon","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClosedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OpenIcon","TypeName":"System.String","Metadata":{"Common.PropertyName":"OpenIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconSize","TypeName":"MudBlazor.Size","IsEnum":true,"Metadata":{"Common.PropertyName":"IconSize","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"ButtonDisabledFunc","TypeName":"System.Func<T, System.Boolean>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<T, global::System.Boolean>","Common.PropertyName":"ButtonDisabledFunc","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.HierarchyColumn<T>","Common.TypeNameIdentifier":"HierarchyColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1060553511,"Kind":"Components.Component","Name":"MudBlazor.SelectColumn<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SelectColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.SelectColumn<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ShowInHeader","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowInHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowInFooter","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowInFooter","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.SelectColumn<T>","Common.TypeNameIdentifier":"SelectColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":542025951,"Kind":"Components.Component","Name":"MudBlazor.SelectColumn<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.SelectColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.SelectColumn<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ShowInHeader","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowInHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowInFooter","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowInFooter","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.SelectColumn<T>","Common.TypeNameIdentifier":"SelectColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":676882211,"Kind":"Components.Component","Name":"MudBlazor.MudDivider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDivider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Absolute","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDivider.Absolute\">\r\n            <summary>\r\n            Sets absolute position to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Absolute","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FlexItem","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDivider.FlexItem\">\r\n            <summary>\r\n            If true, a vertical divider will have the correct height when used in flex container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FlexItem","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Light","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDivider.Light\">\r\n            <summary>\r\n            If true, the divider will have a lighter color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Light","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Vertical","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDivider.Vertical\">\r\n            <summary>\r\n            If true, the divider is displayed vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Vertical","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DividerType","TypeName":"MudBlazor.DividerType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDivider.DividerType\">\r\n            <summary>\r\n            The Divider type to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DividerType","Common.GloballyQualifiedTypeName":"global::MudBlazor.DividerType"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDivider","Common.TypeNameIdentifier":"MudDivider","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1452078317,"Kind":"Components.Component","Name":"MudBlazor.MudDivider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDivider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Absolute","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDivider.Absolute\">\r\n            <summary>\r\n            Sets absolute position to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Absolute","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FlexItem","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDivider.FlexItem\">\r\n            <summary>\r\n            If true, a vertical divider will have the correct height when used in flex container.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FlexItem","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Light","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDivider.Light\">\r\n            <summary>\r\n            If true, the divider will have a lighter color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Light","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Vertical","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDivider.Vertical\">\r\n            <summary>\r\n            If true, the divider is displayed vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Vertical","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DividerType","TypeName":"MudBlazor.DividerType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudDivider.DividerType\">\r\n            <summary>\r\n            The Divider type to use.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DividerType","Common.GloballyQualifiedTypeName":"global::MudBlazor.DividerType"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDivider","Common.TypeNameIdentifier":"MudDivider","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-94697149,"Kind":"Components.Component","Name":"MudBlazor.MudDrawerHeader","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDrawerHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawerHeader.Dense\">\r\n            <summary>\r\n            If true, compact padding will be used, same as the Appbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDrawerHeader.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LinkToIndex","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawerHeader.LinkToIndex\">\r\n            <summary>\r\n            If true, the component will link to index page with an a element instead of div.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LinkToIndex","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawerHeader","Common.TypeNameIdentifier":"MudDrawerHeader","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1522164297,"Kind":"Components.Component","Name":"MudBlazor.MudDrawerHeader","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDrawerHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawerHeader.Dense\">\r\n            <summary>\r\n            If true, compact padding will be used, same as the Appbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudDrawerHeader.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LinkToIndex","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudDrawerHeader.LinkToIndex\">\r\n            <summary>\r\n            If true, the component will link to index page with an a element instead of div.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LinkToIndex","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawerHeader","Common.TypeNameIdentifier":"MudDrawerHeader","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-77338883,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDrawerHeader.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDrawerHeader.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudDrawerHeader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawerHeader.ChildContent","Common.TypeNameIdentifier":"MudDrawerHeader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-504410548,"Kind":"Components.ChildContent","Name":"MudBlazor.MudDrawerHeader.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudDrawerHeader.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudDrawerHeader"}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawerHeader.ChildContent","Common.TypeNameIdentifier":"MudDrawerHeader","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1685899954,"Kind":"Components.Component","Name":"MudBlazor.MudGrid","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudGrid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Spacing","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Spacing","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Justify","TypeName":"MudBlazor.Justify","IsEnum":true,"Metadata":{"Common.PropertyName":"Justify","Common.GloballyQualifiedTypeName":"global::MudBlazor.Justify"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudGrid","Common.TypeNameIdentifier":"MudGrid","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1715262077,"Kind":"Components.Component","Name":"MudBlazor.MudGrid","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudGrid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Spacing","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Spacing","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Justify","TypeName":"MudBlazor.Justify","IsEnum":true,"Metadata":{"Common.PropertyName":"Justify","Common.GloballyQualifiedTypeName":"global::MudBlazor.Justify"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudGrid","Common.TypeNameIdentifier":"MudGrid","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1426700877,"Kind":"Components.ChildContent","Name":"MudBlazor.MudGrid.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudGrid.ChildContent","Common.TypeNameIdentifier":"MudGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-61073761,"Kind":"Components.ChildContent","Name":"MudBlazor.MudGrid.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudGrid"}],"Metadata":{"Common.TypeName":"MudBlazor.MudGrid.ChildContent","Common.TypeNameIdentifier":"MudGrid","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1802258075,"Kind":"Components.Component","Name":"MudBlazor.MudItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"xs","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"xs","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"sm","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"sm","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"md","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"md","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"lg","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"lg","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"xl","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"xl","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"xxl","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"xxl","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudItem","Common.TypeNameIdentifier":"MudItem","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1939051484,"Kind":"Components.Component","Name":"MudBlazor.MudItem","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"xs","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"xs","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"sm","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"sm","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"md","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"md","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"lg","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"lg","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"xl","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"xl","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"xxl","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"xxl","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudItem","Common.TypeNameIdentifier":"MudItem","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1462799684,"Kind":"Components.ChildContent","Name":"MudBlazor.MudItem.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudItem.ChildContent","Common.TypeNameIdentifier":"MudItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-490044771,"Kind":"Components.ChildContent","Name":"MudBlazor.MudItem.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudItem"}],"Metadata":{"Common.TypeName":"MudBlazor.MudItem.ChildContent","Common.TypeNameIdentifier":"MudItem","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1957530180,"Kind":"Components.Component","Name":"MudBlazor.MudMainContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudMainContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudMainContent","Common.TypeNameIdentifier":"MudMainContent","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1586560359,"Kind":"Components.Component","Name":"MudBlazor.MudMainContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudMainContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudMainContent","Common.TypeNameIdentifier":"MudMainContent","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1574701681,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMainContent.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudMainContent"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMainContent.ChildContent","Common.TypeNameIdentifier":"MudMainContent","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1816749156,"Kind":"Components.ChildContent","Name":"MudBlazor.MudMainContent.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudMainContent"}],"Metadata":{"Common.TypeName":"MudBlazor.MudMainContent.ChildContent","Common.TypeNameIdentifier":"MudMainContent","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2104521751,"Kind":"Components.Component","Name":"MudBlazor.MudPickerContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudPickerContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPickerContent","Common.TypeNameIdentifier":"MudPickerContent","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1463597487,"Kind":"Components.Component","Name":"MudBlazor.MudPickerContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudPickerContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPickerContent","Common.TypeNameIdentifier":"MudPickerContent","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":2135391112,"Kind":"Components.ChildContent","Name":"MudBlazor.MudPickerContent.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudPickerContent"}],"Metadata":{"Common.TypeName":"MudBlazor.MudPickerContent.ChildContent","Common.TypeNameIdentifier":"MudPickerContent","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1539121653,"Kind":"Components.ChildContent","Name":"MudBlazor.MudPickerContent.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudPickerContent"}],"Metadata":{"Common.TypeName":"MudBlazor.MudPickerContent.ChildContent","Common.TypeNameIdentifier":"MudPickerContent","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1545634789,"Kind":"Components.Component","Name":"MudBlazor.MudPickerToolbar","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudPickerToolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPickerToolbar","Common.TypeNameIdentifier":"MudPickerToolbar","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":189360247,"Kind":"Components.Component","Name":"MudBlazor.MudPickerToolbar","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudPickerToolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DisableToolbar","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"DisableToolbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"MudBlazor.Orientation","IsEnum":true,"Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::MudBlazor.Orientation"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudPickerToolbar","Common.TypeNameIdentifier":"MudPickerToolbar","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1820248243,"Kind":"Components.ChildContent","Name":"MudBlazor.MudPickerToolbar.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudPickerToolbar"}],"Metadata":{"Common.TypeName":"MudBlazor.MudPickerToolbar.ChildContent","Common.TypeNameIdentifier":"MudPickerToolbar","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2020182910,"Kind":"Components.ChildContent","Name":"MudBlazor.MudPickerToolbar.ChildContent","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudPickerToolbar"}],"Metadata":{"Common.TypeName":"MudBlazor.MudPickerToolbar.ChildContent","Common.TypeNameIdentifier":"MudPickerToolbar","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1482209987,"Kind":"Components.Component","Name":"MudBlazor.MudRender","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRender"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudRender.ChildContent\">\r\n            <summary>\r\n            The content to render\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRender","Common.TypeNameIdentifier":"MudRender","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1705538604,"Kind":"Components.Component","Name":"MudBlazor.MudRender","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRender"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudRender.ChildContent\">\r\n            <summary>\r\n            The content to render\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudRender","Common.TypeNameIdentifier":"MudRender","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1146201169,"Kind":"Components.ChildContent","Name":"MudBlazor.MudRender.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudRender.ChildContent\">\r\n            <summary>\r\n            The content to render\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudRender"}],"Metadata":{"Common.TypeName":"MudBlazor.MudRender.ChildContent","Common.TypeNameIdentifier":"MudRender","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1335128564,"Kind":"Components.ChildContent","Name":"MudBlazor.MudRender.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudRender.ChildContent\">\r\n            <summary>\r\n            The content to render\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudRender"}],"Metadata":{"Common.TypeName":"MudBlazor.MudRender.ChildContent","Common.TypeNameIdentifier":"MudRender","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":323439443,"Kind":"Components.Component","Name":"MudBlazor.MudSpacer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSpacer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSpacer","Common.TypeNameIdentifier":"MudSpacer","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1450565359,"Kind":"Components.Component","Name":"MudBlazor.MudSpacer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSpacer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudSpacer","Common.TypeNameIdentifier":"MudSpacer","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1588360004,"Kind":"Components.Component","Name":"MudBlazor.MudSparkLine","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSparkLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"StrokeWidth","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSparkLine","Common.TypeNameIdentifier":"MudSparkLine","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":952220399,"Kind":"Components.Component","Name":"MudBlazor.MudSparkLine","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSparkLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"StrokeWidth","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudSparkLine","Common.TypeNameIdentifier":"MudSparkLine","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1436738821,"Kind":"Components.Component","Name":"MudBlazor.MudAvatarColumn<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudAvatarColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudAvatarColumn<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAvatarColumn<T>","Common.TypeNameIdentifier":"MudAvatarColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-875641253,"Kind":"Components.Component","Name":"MudBlazor.MudAvatarColumn<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudAvatarColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudAvatarColumn<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudAvatarColumn<T>","Common.TypeNameIdentifier":"MudAvatarColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1686543322,"Kind":"Components.Component","Name":"MudBlazor.MudTemplateColumn<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTemplateColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTemplateColumn<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DataContext","TypeName":"T","Metadata":{"Common.PropertyName":"DataContext","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"Header","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Row","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"Row","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Edit","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"Edit","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Footer","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"Footer","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTemplateColumn<T>","Common.TypeNameIdentifier":"MudTemplateColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":2014573892,"Kind":"Components.Component","Name":"MudBlazor.MudTemplateColumn<T>","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTemplateColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":{"Id":13,"Args":["T","MudBlazor.MudTemplateColumn<T>"]},"Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DataContext","TypeName":"T","Metadata":{"Common.PropertyName":"DataContext","Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"Header","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Row","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"Row","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Edit","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"Edit","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Footer","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Common.PropertyName":"Footer","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTemplateColumn<T>","Common.TypeNameIdentifier":"MudTemplateColumn","Common.TypeNamespace":"MudBlazor","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-571490329,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTemplateColumn<T>.Header","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"MudTemplateColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Header"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTemplateColumn<T>.Header","Common.TypeNameIdentifier":"MudTemplateColumn","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-152394985,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTemplateColumn<T>.Header","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"MudBlazor.MudTemplateColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Header"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTemplateColumn<T>.Header","Common.TypeNameIdentifier":"MudTemplateColumn","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-210457036,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTemplateColumn<T>.Row","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Row","ParentTag":"MudTemplateColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Row"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTemplateColumn<T>.Row","Common.TypeNameIdentifier":"MudTemplateColumn","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":401423149,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTemplateColumn<T>.Row","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Row","ParentTag":"MudBlazor.MudTemplateColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Row"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTemplateColumn<T>.Row","Common.TypeNameIdentifier":"MudTemplateColumn","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1509502695,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTemplateColumn<T>.Edit","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Edit","ParentTag":"MudTemplateColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Edit"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTemplateColumn<T>.Edit","Common.TypeNameIdentifier":"MudTemplateColumn","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-797684258,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTemplateColumn<T>.Edit","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Edit","ParentTag":"MudBlazor.MudTemplateColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Edit"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTemplateColumn<T>.Edit","Common.TypeNameIdentifier":"MudTemplateColumn","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":942830975,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTemplateColumn<T>.Footer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Footer","ParentTag":"MudTemplateColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Footer"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTemplateColumn<T>.Footer","Common.TypeNameIdentifier":"MudTemplateColumn","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":605732046,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTemplateColumn<T>.Footer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Footer","ParentTag":"MudBlazor.MudTemplateColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Footer"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTemplateColumn<T>.Footer","Common.TypeNameIdentifier":"MudTemplateColumn","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1630012200,"Kind":"Components.Component","Name":"MudBlazor.MudTabPanel","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTabPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.Text\">\r\n            <summary>\r\n            Text will be displayed in the TabPanel as TabTitle.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.Icon\">\r\n            <summary>\r\n            Icon placed before the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.Disabled\">\r\n            <summary>\r\n            If true, the tabpanel will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"BadgeData","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.BadgeData\">\r\n            <summary>\r\n            Optional information to be showed into a badge\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BadgeData","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"BadgeDot","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.BadgeDot\">\r\n            <summary>\r\n            Optional information to show the badge as a dot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BadgeDot","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"BadgeColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabPanel.BadgeColor\">\r\n            <summary>\r\n            The color of the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BadgeColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.ID\">\r\n            <summary>\r\n            Unique TabPanel ID. Useful for activation when Panels are dynamically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ID","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.OnClick\">\r\n            <summary>\r\n            Raised when tab is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.TabContent\">\r\n            <summary>\r\n            Tab content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabWrapperContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RenderFragment>","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.TabWrapperContent\">\r\n            <summary>\r\n            Tab content wrapper of component. It is used to wrap the content of a tab heading in a user supplied div or component. \r\n            Use @context in the TabWrapperContent to render the tab header within your custom wrapper. \r\n            This is most useful with tooltips, which must wrap the entire content they refer to.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabWrapperContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RenderFragment>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.ToolTip\">\r\n            <summary>\r\n            TabPanel Tooltip. It will be ignored if TabContent is provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolTip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabPanel","Common.TypeNameIdentifier":"MudTabPanel","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":2002738195,"Kind":"Components.Component","Name":"MudBlazor.MudTabPanel","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTabPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.Text\">\r\n            <summary>\r\n            Text will be displayed in the TabPanel as TabTitle.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.Icon\">\r\n            <summary>\r\n            Icon placed before the text if set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.Disabled\">\r\n            <summary>\r\n            If true, the tabpanel will be disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"BadgeData","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.BadgeData\">\r\n            <summary>\r\n            Optional information to be showed into a badge\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BadgeData","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"BadgeDot","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.BadgeDot\">\r\n            <summary>\r\n            Optional information to show the badge as a dot.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BadgeDot","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"BadgeColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTabPanel.BadgeColor\">\r\n            <summary>\r\n            The color of the badge.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BadgeColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.ID\">\r\n            <summary>\r\n            Unique TabPanel ID. Useful for activation when Panels are dynamically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ID","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.OnClick\">\r\n            <summary>\r\n            Raised when tab is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.TabContent\">\r\n            <summary>\r\n            Tab content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TabWrapperContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RenderFragment>","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.TabWrapperContent\">\r\n            <summary>\r\n            Tab content wrapper of component. It is used to wrap the content of a tab heading in a user supplied div or component. \r\n            Use @context in the TabWrapperContent to render the tab header within your custom wrapper. \r\n            This is most useful with tooltips, which must wrap the entire content they refer to.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TabWrapperContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RenderFragment>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.ToolTip\">\r\n            <summary>\r\n            TabPanel Tooltip. It will be ignored if TabContent is provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToolTip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabPanel","Common.TypeNameIdentifier":"MudTabPanel","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1980039866,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabPanel.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudTabPanel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabPanel.ChildContent","Common.TypeNameIdentifier":"MudTabPanel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1664022393,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabPanel.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudTabPanel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabPanel.ChildContent","Common.TypeNameIdentifier":"MudTabPanel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2070644946,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabPanel.TabContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.TabContent\">\r\n            <summary>\r\n            Tab content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabContent","ParentTag":"MudTabPanel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabPanel.TabContent","Common.TypeNameIdentifier":"MudTabPanel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-345354791,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabPanel.TabContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.TabContent\">\r\n            <summary>\r\n            Tab content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabContent","ParentTag":"MudBlazor.MudTabPanel"}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabPanel.TabContent","Common.TypeNameIdentifier":"MudTabPanel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2004638602,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabPanel.TabWrapperContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.TabWrapperContent\">\r\n            <summary>\r\n            Tab content wrapper of component. It is used to wrap the content of a tab heading in a user supplied div or component. \r\n            Use @context in the TabWrapperContent to render the tab header within your custom wrapper. \r\n            This is most useful with tooltips, which must wrap the entire content they refer to.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabWrapperContent","ParentTag":"MudTabPanel"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["TabWrapperContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabPanel.TabWrapperContent","Common.TypeNameIdentifier":"MudTabPanel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-564779320,"Kind":"Components.ChildContent","Name":"MudBlazor.MudTabPanel.TabWrapperContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudTabPanel.TabWrapperContent\">\r\n            <summary>\r\n            Tab content wrapper of component. It is used to wrap the content of a tab heading in a user supplied div or component. \r\n            Use @context in the TabWrapperContent to render the tab header within your custom wrapper. \r\n            This is most useful with tooltips, which must wrap the entire content they refer to.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabWrapperContent","ParentTag":"MudBlazor.MudTabPanel"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["TabWrapperContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabPanel.TabWrapperContent","Common.TypeNameIdentifier":"MudTabPanel","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":762770691,"Kind":"Components.Component","Name":"MudBlazor.MudThemeProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudThemeProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Theme","TypeName":"MudBlazor.MudTheme","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.Theme\">\r\n            <summary>\r\n            The theme used by the application.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Theme","Common.GloballyQualifiedTypeName":"global::MudBlazor.MudTheme"}},{"Kind":"Components.Component","Name":"DefaultScrollbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.DefaultScrollbar\">\r\n            <summary>\r\n             If true, will not apply MudBlazor styled scrollbar and use browser default. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultScrollbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDarkMode","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.IsDarkMode\">\r\n            <summary>\r\n            The active palette of the theme.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsDarkMode","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDarkModeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.IsDarkModeChanged\">\r\n            <summary>\r\n            Invoked when the dark mode changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsDarkModeChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudThemeProvider","Common.TypeNameIdentifier":"MudThemeProvider","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1426458359,"Kind":"Components.Component","Name":"MudBlazor.MudThemeProvider","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudThemeProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Theme","TypeName":"MudBlazor.MudTheme","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.Theme\">\r\n            <summary>\r\n            The theme used by the application.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Theme","Common.GloballyQualifiedTypeName":"global::MudBlazor.MudTheme"}},{"Kind":"Components.Component","Name":"DefaultScrollbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.DefaultScrollbar\">\r\n            <summary>\r\n             If true, will not apply MudBlazor styled scrollbar and use browser default. \r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultScrollbar","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDarkMode","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.IsDarkMode\">\r\n            <summary>\r\n            The active palette of the theme.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsDarkMode","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsDarkModeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.BaseMudThemeProvider.IsDarkModeChanged\">\r\n            <summary>\r\n            Invoked when the dark mode changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsDarkModeChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudThemeProvider","Common.TypeNameIdentifier":"MudThemeProvider","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-769797726,"Kind":"Components.Component","Name":"MudBlazor.MudToolBar","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudToolBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudToolBar.Dense\">\r\n            <summary>\r\n            If true, compact padding will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudToolBar.DisableGutters\">\r\n            <summary>\r\n            If true, disables gutter padding.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudToolBar.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudToolBar","Common.TypeNameIdentifier":"MudToolBar","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1335037247,"Kind":"Components.Component","Name":"MudBlazor.MudToolBar","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudToolBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudToolBar.Dense\">\r\n            <summary>\r\n            If true, compact padding will be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dense","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DisableGutters","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudToolBar.DisableGutters\">\r\n            <summary>\r\n            If true, disables gutter padding.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisableGutters","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudToolBar.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudToolBar","Common.TypeNameIdentifier":"MudToolBar","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1125041718,"Kind":"Components.ChildContent","Name":"MudBlazor.MudToolBar.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudToolBar.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudToolBar"}],"Metadata":{"Common.TypeName":"MudBlazor.MudToolBar.ChildContent","Common.TypeNameIdentifier":"MudToolBar","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2068327728,"Kind":"Components.ChildContent","Name":"MudBlazor.MudToolBar.ChildContent","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudToolBar.ChildContent\">\r\n            <summary>\r\n            Child content of component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MudBlazor.MudToolBar"}],"Metadata":{"Common.TypeName":"MudBlazor.MudToolBar.ChildContent","Common.TypeNameIdentifier":"MudToolBar","Common.TypeNamespace":"MudBlazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1392835740,"Kind":"Components.Component","Name":"MudBlazor.MudToolBarSpacer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudToolBarSpacer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudToolBarSpacer","Common.TypeNameIdentifier":"MudToolBarSpacer","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":2128058216,"Kind":"Components.Component","Name":"MudBlazor.MudToolBarSpacer","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudToolBarSpacer"}],"Metadata":{"Common.TypeName":"MudBlazor.MudToolBarSpacer","Common.TypeNameIdentifier":"MudToolBarSpacer","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1895797238,"Kind":"Components.Component","Name":"MudBlazor.MudTreeViewItemToggleButton","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTreeViewItemToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.Visible\">\r\n            <summary>\r\n            If true, displays the button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.Expanded\">\r\n            <summary>\r\n            Determens when to flip the expanded icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Loading","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.Loading\">\r\n            <summary>\r\n            If true, displays the loading icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Loading","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.ExpandedChanged\">\r\n            <summary>\r\n            Called whenever expanded changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"LoadingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.LoadingIcon\">\r\n            <summary>\r\n            The loading icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LoadingIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.LoadingIconColor\">\r\n            <summary>\r\n            The color of the loading. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ExpandedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.ExpandedIcon\">\r\n            <summary>\r\n            The expand/collapse icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandedIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.ExpandedIconColor\">\r\n            <summary>\r\n            The color of the expand/collapse. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItemToggleButton","Common.TypeNameIdentifier":"MudTreeViewItemToggleButton","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":1892105345,"Kind":"Components.Component","Name":"MudBlazor.MudTreeViewItemToggleButton","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTreeViewItemToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.Visible\">\r\n            <summary>\r\n            If true, displays the button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.Expanded\">\r\n            <summary>\r\n            Determens when to flip the expanded icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Loading","TypeName":"System.Boolean","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.Loading\">\r\n            <summary>\r\n            If true, displays the loading icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Loading","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.ExpandedChanged\">\r\n            <summary>\r\n            Called whenever expanded changed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"LoadingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.LoadingIcon\">\r\n            <summary>\r\n            The loading icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LoadingIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.LoadingIconColor\">\r\n            <summary>\r\n            The color of the loading. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadingIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"ExpandedIcon","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.ExpandedIcon\">\r\n            <summary>\r\n            The expand/collapse icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandedIconColor","TypeName":"MudBlazor.Color","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudTreeViewItemToggleButton.ExpandedIconColor\">\r\n            <summary>\r\n            The color of the expand/collapse. It supports the theme colors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandedIconColor","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItemToggleButton","Common.TypeNameIdentifier":"MudTreeViewItemToggleButton","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-2028369133,"Kind":"Components.Component","Name":"MudBlazor._Imports","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Common.TypeName":"MudBlazor._Imports","Common.TypeNameIdentifier":"_Imports","Common.TypeNamespace":"MudBlazor","Runtime.Name":"Components.IComponent"}},{"HashCode":360189655,"Kind":"Components.Component","Name":"MudBlazor._Imports","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor._Imports"}],"Metadata":{"Common.TypeName":"MudBlazor._Imports","Common.TypeNameIdentifier":"_Imports","Common.TypeNamespace":"MudBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":491903827,"Kind":"Components.Component","Name":"MudBlazor.Charts.Bar","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Bar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Bar","Common.TypeNameIdentifier":"Bar","Common.TypeNamespace":"MudBlazor.Charts","Runtime.Name":"Components.IComponent"}},{"HashCode":-2128497624,"Kind":"Components.Component","Name":"MudBlazor.Charts.Bar","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Bar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Bar","Common.TypeNameIdentifier":"Bar","Common.TypeNamespace":"MudBlazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-660926948,"Kind":"Components.ChildContent","Name":"MudBlazor.Charts.Bar.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"Bar"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Bar.CustomGraphics","Common.TypeNameIdentifier":"Bar","Common.TypeNamespace":"MudBlazor.Charts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1740823158,"Kind":"Components.ChildContent","Name":"MudBlazor.Charts.Bar.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"MudBlazor.Charts.Bar"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Bar.CustomGraphics","Common.TypeNameIdentifier":"Bar","Common.TypeNamespace":"MudBlazor.Charts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1914041798,"Kind":"Components.Component","Name":"MudBlazor.Charts.Donut","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Donut"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Donut","Common.TypeNameIdentifier":"Donut","Common.TypeNamespace":"MudBlazor.Charts","Runtime.Name":"Components.IComponent"}},{"HashCode":1904055834,"Kind":"Components.Component","Name":"MudBlazor.Charts.Donut","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Donut"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Donut","Common.TypeNameIdentifier":"Donut","Common.TypeNamespace":"MudBlazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":156145746,"Kind":"Components.ChildContent","Name":"MudBlazor.Charts.Donut.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"Donut"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Donut.CustomGraphics","Common.TypeNameIdentifier":"Donut","Common.TypeNamespace":"MudBlazor.Charts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1209674007,"Kind":"Components.ChildContent","Name":"MudBlazor.Charts.Donut.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"MudBlazor.Charts.Donut"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Donut.CustomGraphics","Common.TypeNameIdentifier":"Donut","Common.TypeNamespace":"MudBlazor.Charts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1057976609,"Kind":"Components.Component","Name":"MudBlazor.Charts.Line","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Line"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Line","Common.TypeNameIdentifier":"Line","Common.TypeNamespace":"MudBlazor.Charts","Runtime.Name":"Components.IComponent"}},{"HashCode":-1038204982,"Kind":"Components.Component","Name":"MudBlazor.Charts.Line","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Line"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Line","Common.TypeNameIdentifier":"Line","Common.TypeNamespace":"MudBlazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1467115458,"Kind":"Components.ChildContent","Name":"MudBlazor.Charts.Line.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"Line"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Line.CustomGraphics","Common.TypeNameIdentifier":"Line","Common.TypeNamespace":"MudBlazor.Charts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-286492157,"Kind":"Components.ChildContent","Name":"MudBlazor.Charts.Line.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"MudBlazor.Charts.Line"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Line.CustomGraphics","Common.TypeNameIdentifier":"Line","Common.TypeNamespace":"MudBlazor.Charts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1452633286,"Kind":"Components.Component","Name":"MudBlazor.Charts.Pie","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Pie"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Pie","Common.TypeNameIdentifier":"Pie","Common.TypeNamespace":"MudBlazor.Charts","Runtime.Name":"Components.IComponent"}},{"HashCode":145337976,"Kind":"Components.Component","Name":"MudBlazor.Charts.Pie","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Pie"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Pie","Common.TypeNameIdentifier":"Pie","Common.TypeNamespace":"MudBlazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":410770310,"Kind":"Components.ChildContent","Name":"MudBlazor.Charts.Pie.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"Pie"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Pie.CustomGraphics","Common.TypeNameIdentifier":"Pie","Common.TypeNamespace":"MudBlazor.Charts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":958762636,"Kind":"Components.ChildContent","Name":"MudBlazor.Charts.Pie.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"MudBlazor.Charts.Pie"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Pie.CustomGraphics","Common.TypeNameIdentifier":"Pie","Common.TypeNamespace":"MudBlazor.Charts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-214496263,"Kind":"Components.Component","Name":"MudBlazor.Charts.Legend","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Legend"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.List<MudBlazor.Charts.SVG.Models.SvgLegend>","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.Charts.SVG.Models.SvgLegend>"}},{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Legend","Common.TypeNameIdentifier":"Legend","Common.TypeNamespace":"MudBlazor.Charts","Runtime.Name":"Components.IComponent"}},{"HashCode":-652087717,"Kind":"Components.Component","Name":"MudBlazor.Charts.Legend","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Legend"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.List<MudBlazor.Charts.SVG.Models.SvgLegend>","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.Charts.SVG.Models.SvgLegend>"}},{"Kind":"Components.Component","Name":"InputData","TypeName":"System.Double[]","Metadata":{"Common.PropertyName":"InputData","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"InputLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"InputLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"XAxisLabels","TypeName":"System.String[]","Metadata":{"Common.PropertyName":"XAxisLabels","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"ChartSeries","TypeName":"System.Collections.Generic.List<MudBlazor.ChartSeries>","Metadata":{"Common.PropertyName":"ChartSeries","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::MudBlazor.ChartSeries>"}},{"Kind":"Components.Component","Name":"ChartOptions","TypeName":"MudBlazor.ChartOptions","Metadata":{"Common.PropertyName":"ChartOptions","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartOptions"}},{"Kind":"Components.Component","Name":"CustomGraphics","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CustomGraphics","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChartType","TypeName":"MudBlazor.ChartType","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.ChartType\">\r\n            <summary>\r\n            The Type of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChartType","Common.GloballyQualifiedTypeName":"global::MudBlazor.ChartType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Width\">\r\n            <summary>\r\n            The Width of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudChartBase.Height\">\r\n            <summary>\r\n            The Height of the chart, end with % or px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LegendPosition","TypeName":"MudBlazor.Position","IsEnum":true,"Documentation":"<member name=\"P:MudBlazor.MudChartBase.LegendPosition\">\r\n            <summary>\r\n            The placement direction of the legend if used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LegendPosition","Common.GloballyQualifiedTypeName":"global::MudBlazor.Position"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndex\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:MudBlazor.MudChartBase.SelectedIndexChanged\">\r\n            <summary>\r\n            Selected index of a portion of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Class\">\r\n            <summary>\r\n            User class names, separated by space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Style\">\r\n            <summary>\r\n            User styles, applied on top of the component's own classes and styles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.Tag\">\r\n            <summary>\r\n            Use Tag to attach any user data object to the component for your convenience.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tag","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"UserAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MudBlazor.MudComponentBase.UserAttributes\">\r\n            <summary>\r\n            UserAttributes carries all attributes you add to the component that don't match any of its parameters.\r\n            They will be splatted onto the underlying HTML tag.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UserAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Legend","Common.TypeNameIdentifier":"Legend","Common.TypeNamespace":"MudBlazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-154139076,"Kind":"Components.ChildContent","Name":"MudBlazor.Charts.Legend.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"Legend"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Legend.CustomGraphics","Common.TypeNameIdentifier":"Legend","Common.TypeNamespace":"MudBlazor.Charts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":370116715,"Kind":"Components.ChildContent","Name":"MudBlazor.Charts.Legend.CustomGraphics","AssemblyName":"MudBlazor","Documentation":"<member name=\"P:MudBlazor.MudChartBase.CustomGraphics\">\r\n            <summary>\r\n            RenderFragment for costumization inside the chart's svg.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomGraphics","ParentTag":"MudBlazor.Charts.Legend"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Legend.CustomGraphics","Common.TypeNameIdentifier":"Legend","Common.TypeNamespace":"MudBlazor.Charts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1573337004,"Kind":"Components.Component","Name":"MudBlazor.Charts.Filters","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Filters"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Filters","Common.TypeNameIdentifier":"Filters","Common.TypeNamespace":"MudBlazor.Charts","Runtime.Name":"Components.IComponent"}},{"HashCode":-194828545,"Kind":"Components.Component","Name":"MudBlazor.Charts.Filters","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Filters"}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Filters","Common.TypeNameIdentifier":"Filters","Common.TypeNamespace":"MudBlazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-394664884,"Kind":"Components.Component","Name":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageRenderFragment","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SnackbarMessageRenderFragment"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Message","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageRenderFragment","Common.TypeNameIdentifier":"SnackbarMessageRenderFragment","Common.TypeNamespace":"MudBlazor.Components.Snackbar.InternalComponents","Runtime.Name":"Components.IComponent"}},{"HashCode":1983781757,"Kind":"Components.Component","Name":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageRenderFragment","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageRenderFragment"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Message","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageRenderFragment","Common.TypeNameIdentifier":"SnackbarMessageRenderFragment","Common.TypeNamespace":"MudBlazor.Components.Snackbar.InternalComponents","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1715988331,"Kind":"Components.ChildContent","Name":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageRenderFragment.Message","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Message","ParentTag":"SnackbarMessageRenderFragment"}],"Metadata":{"Common.TypeName":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageRenderFragment.Message","Common.TypeNameIdentifier":"SnackbarMessageRenderFragment","Common.TypeNamespace":"MudBlazor.Components.Snackbar.InternalComponents","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1003011159,"Kind":"Components.ChildContent","Name":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageRenderFragment.Message","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Message","ParentTag":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageRenderFragment"}],"Metadata":{"Common.TypeName":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageRenderFragment.Message","Common.TypeNameIdentifier":"SnackbarMessageRenderFragment","Common.TypeNamespace":"MudBlazor.Components.Snackbar.InternalComponents","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-653432689,"Kind":"Components.Component","Name":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageText","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SnackbarMessageText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"Microsoft.AspNetCore.Components.MarkupString","Metadata":{"Common.PropertyName":"Message","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.MarkupString"}}],"Metadata":{"Common.TypeName":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageText","Common.TypeNameIdentifier":"SnackbarMessageText","Common.TypeNamespace":"MudBlazor.Components.Snackbar.InternalComponents","Runtime.Name":"Components.IComponent"}},{"HashCode":-1335243471,"Kind":"Components.Component","Name":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageText","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"Microsoft.AspNetCore.Components.MarkupString","Metadata":{"Common.PropertyName":"Message","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.MarkupString"}}],"Metadata":{"Common.TypeName":"MudBlazor.Components.Snackbar.InternalComponents.SnackbarMessageText","Common.TypeNameIdentifier":"SnackbarMessageText","Common.TypeNamespace":"MudBlazor.Components.Snackbar.InternalComponents","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1035529209,"Kind":"Components.Component","Name":"MudBlazor.Internal.MudInputAdornment","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudInputAdornment"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Edge","TypeName":"MudBlazor.Edge","IsEnum":true,"Metadata":{"Common.PropertyName":"Edge","Common.GloballyQualifiedTypeName":"global::MudBlazor.Edge"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AriaLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"AriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"AdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.Internal.MudInputAdornment","Common.TypeNameIdentifier":"MudInputAdornment","Common.TypeNamespace":"MudBlazor.Internal","Runtime.Name":"Components.IComponent"}},{"HashCode":-1712383954,"Kind":"Components.Component","Name":"MudBlazor.Internal.MudInputAdornment","AssemblyName":"MudBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Internal.MudInputAdornment"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Edge","TypeName":"MudBlazor.Edge","IsEnum":true,"Metadata":{"Common.PropertyName":"Edge","Common.GloballyQualifiedTypeName":"global::MudBlazor.Edge"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MudBlazor.Size","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::MudBlazor.Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MudBlazor.Color","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::MudBlazor.Color"}},{"Kind":"Components.Component","Name":"AriaLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"AriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdornmentClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"AdornmentClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"MudBlazor.Internal.MudInputAdornment","Common.TypeNameIdentifier":"MudInputAdornment","Common.TypeNamespace":"MudBlazor.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1659049326,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent"}},{"HashCode":-2067093338,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1602723046,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":109476351,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1127560569,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeRouteView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":6310419,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-97470475,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Policy","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Roles","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent"}},{"HashCode":-1591375188,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Policy","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Roles","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":529893422,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-283371522,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1730663890,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2080400133,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1428985557,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Authorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2020738019,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Authorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2013499727,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":621119194,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-472966043,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent"}},{"HashCode":859759164,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-113265668,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingAuthenticationState"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1063076882,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":112112172,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.CascadingValue<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsFixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-2006353105,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.CascadingValue<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsFixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-889459120,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingValue"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1095368138,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.CascadingValue"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":816413986,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Parameters","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNameIdentifier":"DynamicComponent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":1299178003,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Parameters","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNameIdentifier":"DynamicComponent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":443104849,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Layout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":2117237878,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Layout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1467088548,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayoutView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-752363043,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.LayoutView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1158605894,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNameIdentifier":"RouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":-1575418860,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNameIdentifier":"RouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":251306581,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AppAssembly","Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAssemblies","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotFound","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Found","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Navigating","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnNavigateAsync","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreferExactMatches","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":-1275292906,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AppAssembly","Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAssemblies","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotFound","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Found","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Navigating","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnNavigateAsync","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreferExactMatches","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1082338626,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-555496463,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":23965824,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Found"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-523621034,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Found"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1637319012,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1087896449,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1976229550,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnValidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":191090756,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnValidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":421419917,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":226510491,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2065312680,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":-350659821,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1258965888,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1020867059,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1382592640,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNameIdentifier":"InputFile","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":959106530,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNameIdentifier":"InputFile","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1394710171,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":2117387803,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1831010680,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Common.TypeNameIdentifier":"InputRadio","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":748163635,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Common.TypeNameIdentifier":"InputRadio","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":553938885,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-240189885,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-329149034,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputRadioGroup"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2051182940,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":508662150,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":92454017,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-761095015,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputSelect"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":85331601,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1127546831,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":1412090241,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1984013923,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":-283689260,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-245684300,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Common.TypeNameIdentifier":"ValidationMessage","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1528528215,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Common.TypeNameIdentifier":"ValidationMessage","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1959080929,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNameIdentifier":"ValidationSummary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":1490654527,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNameIdentifier":"ValidationSummary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":2012395568,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Selector","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNameIdentifier":"FocusOnNavigate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":-1759321182,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Selector","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNameIdentifier":"FocusOnNavigate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1380850759,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":642792029,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1920388826,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NavLink"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":792199978,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-230489831,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":128167545,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1689854822,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HeadContent"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":779040282,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1266783900,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadOutlet"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNameIdentifier":"HeadOutlet","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":550896023,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNameIdentifier":"HeadOutlet","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-886198252,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":-583895305,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":886568814,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PageTitle"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":206831603,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1532515791,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaximumErrorCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":748353587,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaximumErrorCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1582794375,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ErrorBoundary"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1559812008,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":873037395,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ErrorContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":103384670,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ErrorContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-732556857,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TItem","Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>"]},"Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemSize","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":172636577,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TItem","Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>"]},"Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemSize","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-514167269,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":215248206,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1800818476,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2112976254,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1807588775,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Placeholder"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1762038415,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Placeholder"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1621286849,"Kind":"Components.EventHandler","Name":"onanimationend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onanimationend","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onanimationend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onanimationend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onanimationend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onanimationend","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onanimationend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onanimationend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"MudBlazor.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"MudBlazor","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1002471268,"Kind":"Components.EventHandler","Name":"onmouseenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseenter","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseenter","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"MudBlazor.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"MudBlazor","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1692988645,"Kind":"Components.EventHandler","Name":"onmouseleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseleave","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseleave","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"MudBlazor.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"MudBlazor","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-727369005,"Kind":"Components.EventHandler","Name":"onfocus","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfocus","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocus","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onfocus","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocus"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfocus"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfocus"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1653693213,"Kind":"Components.EventHandler","Name":"onblur","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onblur","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onblur","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onblur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onblur","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onblur"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onblur"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onblur"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":778364182,"Kind":"Components.EventHandler","Name":"onfocusin","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfocusin","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusin","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onfocusin","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusin"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfocusin"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfocusin"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-517322429,"Kind":"Components.EventHandler","Name":"onfocusout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfocusout","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onfocusout","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfocusout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfocusout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-936888182,"Kind":"Components.EventHandler","Name":"onmouseover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseover","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseover","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseover"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseover"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-2029089480,"Kind":"Components.EventHandler","Name":"onmouseout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseout","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseout","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-392837186,"Kind":"Components.EventHandler","Name":"onmousemove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmousemove","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousemove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmousemove","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousemove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmousemove"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmousemove"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1242953820,"Kind":"Components.EventHandler","Name":"onmousedown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmousedown","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousedown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousedown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmousedown","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousedown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmousedown"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmousedown"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1914736575,"Kind":"Components.EventHandler","Name":"onmouseup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseup","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseup","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseup"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseup"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1331383727,"Kind":"Components.EventHandler","Name":"onclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onclick"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onclick"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":536006733,"Kind":"Components.EventHandler","Name":"ondblclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondblclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondblclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondblclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@ondblclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondblclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondblclick"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondblclick"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-366485848,"Kind":"Components.EventHandler","Name":"onwheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onwheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":{"Id":14,"Args":["@onwheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onwheel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onwheel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-160573819,"Kind":"Components.EventHandler","Name":"onmousewheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmousewheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousewheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousewheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":{"Id":14,"Args":["@onmousewheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousewheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmousewheel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmousewheel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1538066542,"Kind":"Components.EventHandler","Name":"oncontextmenu","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncontextmenu","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncontextmenu","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncontextmenu","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@oncontextmenu","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncontextmenu"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncontextmenu"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncontextmenu"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1705523732,"Kind":"Components.EventHandler","Name":"ondrag","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondrag","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrag","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondrag","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrag"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondrag"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondrag"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1290771231,"Kind":"Components.EventHandler","Name":"ondragend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragend","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragend","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-337171814,"Kind":"Components.EventHandler","Name":"ondragenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragenter","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragenter","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1201691127,"Kind":"Components.EventHandler","Name":"ondragleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragleave","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragleave","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-519835019,"Kind":"Components.EventHandler","Name":"ondragover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragover","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragover","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragover"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragover"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-202939013,"Kind":"Components.EventHandler","Name":"ondragstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragstart","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragstart","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":364403475,"Kind":"Components.EventHandler","Name":"ondrop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondrop","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondrop","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondrop"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondrop"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1929574430,"Kind":"Components.EventHandler","Name":"onkeydown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onkeydown","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeydown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeydown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":{"Id":14,"Args":["@onkeydown","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeydown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onkeydown"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onkeydown"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":110467606,"Kind":"Components.EventHandler","Name":"onkeyup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onkeyup","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeyup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeyup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":{"Id":14,"Args":["@onkeyup","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeyup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onkeyup"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onkeyup"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":582697943,"Kind":"Components.EventHandler","Name":"onkeypress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onkeypress","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeypress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":{"Id":14,"Args":["@onkeypress","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeypress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onkeypress"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onkeypress"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-365542076,"Kind":"Components.EventHandler","Name":"onchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onchange","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":{"Id":14,"Args":["@onchange","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":794708869,"Kind":"Components.EventHandler","Name":"oninput","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oninput","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninput","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":{"Id":14,"Args":["@oninput","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninput"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oninput"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oninput"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1603213185,"Kind":"Components.EventHandler","Name":"oninvalid","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oninvalid","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninvalid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninvalid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oninvalid","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninvalid"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oninvalid"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oninvalid"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":836426675,"Kind":"Components.EventHandler","Name":"onreset","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onreset","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreset","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreset","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onreset","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreset"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onreset"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onreset"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1485878008,"Kind":"Components.EventHandler","Name":"onselect","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onselect","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onselect","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselect"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onselect"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onselect"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1818652440,"Kind":"Components.EventHandler","Name":"onselectstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onselectstart","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onselectstart","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onselectstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onselectstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-758644927,"Kind":"Components.EventHandler","Name":"onselectionchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onselectionchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectionchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectionchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onselectionchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectionchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onselectionchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onselectionchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1853778474,"Kind":"Components.EventHandler","Name":"onsubmit","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onsubmit","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsubmit","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onsubmit","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsubmit"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onsubmit"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onsubmit"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1478138657,"Kind":"Components.EventHandler","Name":"onbeforecopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforecopy","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforecopy","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforecopy"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforecopy"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1954762307,"Kind":"Components.EventHandler","Name":"onbeforecut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforecut","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforecut","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforecut"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforecut"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":68240426,"Kind":"Components.EventHandler","Name":"onbeforepaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforepaste","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforepaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforepaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforepaste","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforepaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforepaste"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforepaste"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1936131299,"Kind":"Components.EventHandler","Name":"oncopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncopy","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":{"Id":14,"Args":["@oncopy","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncopy"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncopy"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-651207526,"Kind":"Components.EventHandler","Name":"oncut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncut","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":{"Id":14,"Args":["@oncut","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncut"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncut"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1089411740,"Kind":"Components.EventHandler","Name":"onpaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpaste","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":{"Id":14,"Args":["@onpaste","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpaste"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpaste"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-679554340,"Kind":"Components.EventHandler","Name":"ontouchcancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchcancel","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchcancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchcancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchcancel","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchcancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchcancel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchcancel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":943674983,"Kind":"Components.EventHandler","Name":"ontouchend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchend","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchend","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":257218252,"Kind":"Components.EventHandler","Name":"ontouchmove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchmove","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchmove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchmove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchmove","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchmove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchmove"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchmove"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":2036593677,"Kind":"Components.EventHandler","Name":"ontouchstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchstart","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchstart","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1103757234,"Kind":"Components.EventHandler","Name":"ontouchenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchenter","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchenter","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-530801748,"Kind":"Components.EventHandler","Name":"ontouchleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchleave","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchleave","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1577454197,"Kind":"Components.EventHandler","Name":"ongotpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ongotpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ongotpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@ongotpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ongotpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ongotpointercapture"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ongotpointercapture"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-2091195272,"Kind":"Components.EventHandler","Name":"onlostpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onlostpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onlostpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onlostpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onlostpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onlostpointercapture"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onlostpointercapture"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-2045316255,"Kind":"Components.EventHandler","Name":"onpointercancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointercancel","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointercancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointercancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointercancel","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointercancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointercancel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointercancel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1382687032,"Kind":"Components.EventHandler","Name":"onpointerdown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerdown","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerdown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerdown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerdown","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerdown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerdown"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerdown"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":101473625,"Kind":"Components.EventHandler","Name":"onpointerenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerenter","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerenter","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1542789096,"Kind":"Components.EventHandler","Name":"onpointerleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerleave","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerleave","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1970868744,"Kind":"Components.EventHandler","Name":"onpointermove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointermove","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointermove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointermove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointermove","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointermove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointermove"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointermove"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1496598645,"Kind":"Components.EventHandler","Name":"onpointerout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerout","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerout","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-80282310,"Kind":"Components.EventHandler","Name":"onpointerover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerover","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerover","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerover"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerover"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1553651268,"Kind":"Components.EventHandler","Name":"onpointerup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerup","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerup","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerup"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerup"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-536806730,"Kind":"Components.EventHandler","Name":"oncanplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncanplay","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oncanplay","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncanplay"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncanplay"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":908414765,"Kind":"Components.EventHandler","Name":"oncanplaythrough","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncanplaythrough","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplaythrough","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oncanplaythrough","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplaythrough"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncanplaythrough"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncanplaythrough"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-129079417,"Kind":"Components.EventHandler","Name":"oncuechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncuechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncuechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncuechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oncuechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncuechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncuechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncuechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":790156873,"Kind":"Components.EventHandler","Name":"ondurationchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondurationchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondurationchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondurationchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ondurationchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondurationchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondurationchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondurationchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":476976603,"Kind":"Components.EventHandler","Name":"onemptied","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onemptied","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onemptied","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onemptied","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onemptied","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onemptied"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onemptied"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onemptied"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1456525810,"Kind":"Components.EventHandler","Name":"onpause","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpause","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpause","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpause","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onpause","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpause"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpause"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpause"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":177399041,"Kind":"Components.EventHandler","Name":"onplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onplay","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onplay","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onplay"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onplay"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1969236839,"Kind":"Components.EventHandler","Name":"onplaying","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onplaying","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplaying","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplaying","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onplaying","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplaying"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onplaying"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onplaying"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-738595097,"Kind":"Components.EventHandler","Name":"onratechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onratechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onratechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onratechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onratechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onratechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onratechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onratechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-955105252,"Kind":"Components.EventHandler","Name":"onseeked","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onseeked","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onseeked","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeked"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onseeked"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onseeked"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-187878019,"Kind":"Components.EventHandler","Name":"onseeking","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onseeking","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeking","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onseeking","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeking"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onseeking"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onseeking"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1115466435,"Kind":"Components.EventHandler","Name":"onstalled","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onstalled","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstalled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstalled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onstalled","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstalled"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onstalled"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onstalled"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":14718909,"Kind":"Components.EventHandler","Name":"onstop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onstop","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onstop","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onstop"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onstop"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1798193991,"Kind":"Components.EventHandler","Name":"onsuspend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onsuspend","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsuspend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsuspend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onsuspend","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsuspend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onsuspend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onsuspend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-83598432,"Kind":"Components.EventHandler","Name":"ontimeupdate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontimeupdate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeupdate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeupdate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ontimeupdate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeupdate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontimeupdate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontimeupdate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-546088352,"Kind":"Components.EventHandler","Name":"onvolumechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onvolumechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onvolumechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onvolumechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onvolumechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onvolumechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onvolumechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onvolumechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-147712496,"Kind":"Components.EventHandler","Name":"onwaiting","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onwaiting","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwaiting","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwaiting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onwaiting","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwaiting"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onwaiting"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onwaiting"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1877397063,"Kind":"Components.EventHandler","Name":"onloadstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadstart","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onloadstart","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-93156651,"Kind":"Components.EventHandler","Name":"ontimeout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontimeout","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@ontimeout","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontimeout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontimeout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1530156502,"Kind":"Components.EventHandler","Name":"onabort","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onabort","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onabort","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onabort","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onabort","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onabort"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onabort"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onabort"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":841018137,"Kind":"Components.EventHandler","Name":"onload","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onload","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onload","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onload","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onload"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onload"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onload"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1646323413,"Kind":"Components.EventHandler","Name":"onloadend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadend","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onloadend","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1805914554,"Kind":"Components.EventHandler","Name":"onprogress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onprogress","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onprogress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onprogress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onprogress","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onprogress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onprogress"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onprogress"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1414019166,"Kind":"Components.EventHandler","Name":"onerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onerror","Microsoft.AspNetCore.Components.Web.ErrorEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>","Documentation":{"Id":14,"Args":["@onerror","Microsoft.AspNetCore.Components.Web.ErrorEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onerror"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onerror"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ErrorEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1684286683,"Kind":"Components.EventHandler","Name":"onactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1877185334,"Kind":"Components.EventHandler","Name":"onbeforeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforeactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforeactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforeactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforeactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1604892650,"Kind":"Components.EventHandler","Name":"onbeforedeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforedeactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforedeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforedeactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforedeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforedeactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforedeactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":455610339,"Kind":"Components.EventHandler","Name":"ondeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondeactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ondeactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondeactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondeactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":484371961,"Kind":"Components.EventHandler","Name":"onended","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onended","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onended","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onended","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onended","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onended"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onended"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onended"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":2000527016,"Kind":"Components.EventHandler","Name":"onfullscreenchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfullscreenchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onfullscreenchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfullscreenchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfullscreenchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1453016704,"Kind":"Components.EventHandler","Name":"onfullscreenerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfullscreenerror","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onfullscreenerror","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfullscreenerror"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfullscreenerror"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1255032978,"Kind":"Components.EventHandler","Name":"onloadeddata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadeddata","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadeddata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadeddata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onloadeddata","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadeddata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadeddata"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadeddata"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":166892546,"Kind":"Components.EventHandler","Name":"onloadedmetadata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadedmetadata","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadedmetadata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onloadedmetadata","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadedmetadata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadedmetadata"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadedmetadata"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1619086998,"Kind":"Components.EventHandler","Name":"onpointerlockchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerlockchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onpointerlockchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerlockchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerlockchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":183890027,"Kind":"Components.EventHandler","Name":"onpointerlockerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerlockerror","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onpointerlockerror","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerlockerror"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerlockerror"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-960344618,"Kind":"Components.EventHandler","Name":"onreadystatechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onreadystatechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreadystatechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreadystatechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onreadystatechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreadystatechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onreadystatechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onreadystatechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":823383190,"Kind":"Components.EventHandler","Name":"onscroll","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onscroll","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onscroll","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onscroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onscroll","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onscroll"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onscroll"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onscroll"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":830423229,"Kind":"Components.EventHandler","Name":"ontoggle","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontoggle","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontoggle","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontoggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ontoggle","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontoggle"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontoggle"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontoggle"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1658677927,"Kind":"Components.Splat","Name":"Attributes","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":19},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@attributes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Splat","Name":"@attributes","TypeName":"System.Object","Documentation":{"Id":19},"Metadata":{"Common.PropertyName":"Attributes","Common.DirectiveAttribute":"True"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Attributes","Components.IsSpecialKind":"Components.Splat","Runtime.Name":"Components.None"}},{"HashCode":87783689,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":0},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@bind-","NameComparison":1,"Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-...","TypeName":"System.Collections.Generic.Dictionary<string, object>","IndexerNamePrefix":"@bind-","IndexerTypeName":"System.Object","Documentation":{"Id":0},"Metadata":{"Common.PropertyName":"Bind","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":2},"Metadata":{"Common.PropertyName":"Format"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":1,"Args":["@bind-..."]},"Metadata":{"Common.PropertyName":"Event"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Bind","Common.TypeNameIdentifier":"Bind","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.Bind.Fallback":"True","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1886728056,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-751468505,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-897546298,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["checked","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["checked","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_checked"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_checked"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-checked","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_checked"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.TypeAttribute":"checkbox","Components.Bind.ValueAttribute":"checked","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2077438364,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.TypeAttribute":"text","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-478655573,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"number","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1727219745,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"number","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1609103576,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"date","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-263506177,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"date","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1699770350,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"datetime-local","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1138129442,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"datetime-local","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-342334592,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"month","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2016351310,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"month","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-3753525,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"HH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"time","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-191892789,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"HH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"time","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-380241744,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"select","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1598759353,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"textarea","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1267702651,"Kind":"Components.Bind","Name":"MudBlazor.MudBooleanInput<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBooleanInput","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBooleanInput","Attributes":[{"Name":"@bind-Checked:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Checked:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"Metadata":{"Common.PropertyName":"Checked","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudBooleanInput<T>","Common.TypeNameIdentifier":"MudBooleanInput","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ValueAttribute":"Checked","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":910045012,"Kind":"Components.Bind","Name":"MudBlazor.MudBooleanInput<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudBooleanInput","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudBooleanInput","Attributes":[{"Name":"@bind-Checked:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Checked:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"Metadata":{"Common.PropertyName":"Checked","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudBooleanInput<T>","Common.TypeNameIdentifier":"MudBooleanInput","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ValueAttribute":"Checked","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1598580534,"Kind":"Components.Bind","Name":"MudBlazor.MudAutocomplete<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudAutocomplete","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudAutocomplete","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2094814110,"Kind":"Components.Bind","Name":"MudBlazor.MudAutocomplete<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudAutocomplete","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudAutocomplete","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-749833174,"Kind":"Components.Bind","Name":"MudBlazor.MudAutocomplete<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudAutocomplete","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudAutocomplete","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2048198524,"Kind":"Components.Bind","Name":"MudBlazor.MudAutocomplete<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudAutocomplete","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudAutocomplete","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudAutocomplete<T>","Common.TypeNameIdentifier":"MudAutocomplete","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1073933979,"Kind":"Components.Bind","Name":"MudBlazor.MudToggleIconButton","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Toggled","ToggledChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudToggleIconButton","Attributes":[{"Name":"@bind-Toggled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudToggleIconButton","Attributes":[{"Name":"@bind-Toggled:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Toggled:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Toggled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Toggled","ToggledChanged"]},"Metadata":{"Common.PropertyName":"Toggled","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudToggleIconButton","Common.TypeNameIdentifier":"MudToggleIconButton","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ToggledChanged","Components.Bind.ValueAttribute":"Toggled","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-149061768,"Kind":"Components.Bind","Name":"MudBlazor.MudToggleIconButton","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Toggled","ToggledChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudToggleIconButton","Attributes":[{"Name":"@bind-Toggled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudToggleIconButton","Attributes":[{"Name":"@bind-Toggled:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Toggled:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Toggled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Toggled","ToggledChanged"]},"Metadata":{"Common.PropertyName":"Toggled","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudToggleIconButton","Common.TypeNameIdentifier":"MudToggleIconButton","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ToggledChanged","Components.Bind.ValueAttribute":"Toggled","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":613921428,"Kind":"Components.Bind","Name":"MudBlazor.MudCarousel<TData>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCarousel","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudCarousel","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":605438905,"Kind":"Components.Bind","Name":"MudBlazor.MudCarousel<TData>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCarousel","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudCarousel","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudCarousel<TData>","Common.TypeNameIdentifier":"MudCarousel","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2102021193,"Kind":"Components.Bind","Name":"MudBlazor.MudCheckBox<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCheckBox","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudCheckBox","Attributes":[{"Name":"@bind-Checked:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Checked:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"Metadata":{"Common.PropertyName":"Checked","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudCheckBox<T>","Common.TypeNameIdentifier":"MudCheckBox","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ValueAttribute":"Checked","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2021109041,"Kind":"Components.Bind","Name":"MudBlazor.MudCheckBox<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCheckBox","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudCheckBox","Attributes":[{"Name":"@bind-Checked:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Checked:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"Metadata":{"Common.PropertyName":"Checked","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudCheckBox<T>","Common.TypeNameIdentifier":"MudCheckBox","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ValueAttribute":"Checked","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1864389194,"Kind":"Components.Bind","Name":"MudBlazor.MudChipSet","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedChip","SelectedChipChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudChipSet","Attributes":[{"Name":"@bind-SelectedChip","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudChipSet","Attributes":[{"Name":"@bind-SelectedChip:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedChip:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedChip","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip>","Documentation":{"Id":10,"Args":["SelectedChip","SelectedChipChanged"]},"Metadata":{"Common.PropertyName":"SelectedChip","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudChipSet","Common.TypeNameIdentifier":"MudChipSet","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedChipChanged","Components.Bind.ValueAttribute":"SelectedChip","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1649884513,"Kind":"Components.Bind","Name":"MudBlazor.MudChipSet","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedChips","SelectedChipsChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudChipSet","Attributes":[{"Name":"@bind-SelectedChips","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudChipSet","Attributes":[{"Name":"@bind-SelectedChips:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedChips:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedChips","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip[]>","Documentation":{"Id":10,"Args":["SelectedChips","SelectedChipsChanged"]},"Metadata":{"Common.PropertyName":"SelectedChips","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudChipSet","Common.TypeNameIdentifier":"MudChipSet","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedChipsChanged","Components.Bind.ValueAttribute":"SelectedChips","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":832122266,"Kind":"Components.Bind","Name":"MudBlazor.MudChipSet","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedValues","SelectedValuesChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudChipSet","Attributes":[{"Name":"@bind-SelectedValues","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudChipSet","Attributes":[{"Name":"@bind-SelectedValues:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedValues:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedValues","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.ICollection<System.Object>>","Documentation":{"Id":10,"Args":["SelectedValues","SelectedValuesChanged"]},"Metadata":{"Common.PropertyName":"SelectedValues","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudChipSet","Common.TypeNameIdentifier":"MudChipSet","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedValuesChanged","Components.Bind.ValueAttribute":"SelectedValues","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1722686504,"Kind":"Components.Bind","Name":"MudBlazor.MudChipSet","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedChip","SelectedChipChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudChipSet","Attributes":[{"Name":"@bind-SelectedChip","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudChipSet","Attributes":[{"Name":"@bind-SelectedChip:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedChip:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedChip","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip>","Documentation":{"Id":10,"Args":["SelectedChip","SelectedChipChanged"]},"Metadata":{"Common.PropertyName":"SelectedChip","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudChipSet","Common.TypeNameIdentifier":"MudChipSet","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedChipChanged","Components.Bind.ValueAttribute":"SelectedChip","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1964869120,"Kind":"Components.Bind","Name":"MudBlazor.MudChipSet","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedChips","SelectedChipsChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudChipSet","Attributes":[{"Name":"@bind-SelectedChips","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudChipSet","Attributes":[{"Name":"@bind-SelectedChips:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedChips:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedChips","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudChip[]>","Documentation":{"Id":10,"Args":["SelectedChips","SelectedChipsChanged"]},"Metadata":{"Common.PropertyName":"SelectedChips","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudChipSet","Common.TypeNameIdentifier":"MudChipSet","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedChipsChanged","Components.Bind.ValueAttribute":"SelectedChips","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":280255539,"Kind":"Components.Bind","Name":"MudBlazor.MudChipSet","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedValues","SelectedValuesChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudChipSet","Attributes":[{"Name":"@bind-SelectedValues","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudChipSet","Attributes":[{"Name":"@bind-SelectedValues:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedValues:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedValues","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.ICollection<System.Object>>","Documentation":{"Id":10,"Args":["SelectedValues","SelectedValuesChanged"]},"Metadata":{"Common.PropertyName":"SelectedValues","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudChipSet","Common.TypeNameIdentifier":"MudChipSet","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedValuesChanged","Components.Bind.ValueAttribute":"SelectedValues","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":299882545,"Kind":"Components.Bind","Name":"MudBlazor.MudCollapse","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudCollapse","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudCollapse","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"Metadata":{"Common.PropertyName":"Expanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudCollapse","Common.TypeNameIdentifier":"MudCollapse","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ExpandedChanged","Components.Bind.ValueAttribute":"Expanded","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":595038179,"Kind":"Components.Bind","Name":"MudBlazor.MudCollapse","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudCollapse","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudCollapse","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"Metadata":{"Common.PropertyName":"Expanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudCollapse","Common.TypeNameIdentifier":"MudCollapse","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ExpandedChanged","Components.Bind.ValueAttribute":"Expanded","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":530327992,"Kind":"Components.Bind","Name":"MudBlazor.MudColorPicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudColorPicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudColorPicker","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Utilities.MudColor>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudColorPicker","Common.TypeNameIdentifier":"MudColorPicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1413047436,"Kind":"Components.Bind","Name":"MudBlazor.MudColorPicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudColorPicker","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudColorPicker","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudColorPicker","Common.TypeNameIdentifier":"MudColorPicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-514835145,"Kind":"Components.Bind","Name":"MudBlazor.MudColorPicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudColorPicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudColorPicker","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Utilities.MudColor>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudColorPicker","Common.TypeNameIdentifier":"MudColorPicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1344315567,"Kind":"Components.Bind","Name":"MudBlazor.MudColorPicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudColorPicker","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudColorPicker","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudColorPicker","Common.TypeNameIdentifier":"MudColorPicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2135646608,"Kind":"Components.Bind","Name":"MudBlazor.Column<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Column","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Column","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":729420775,"Kind":"Components.Bind","Name":"MudBlazor.Column<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Hidden","HiddenChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Column","Attributes":[{"Name":"@bind-Hidden","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Column","Attributes":[{"Name":"@bind-Hidden:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Hidden:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Hidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Hidden","HiddenChanged"]},"Metadata":{"Common.PropertyName":"Hidden","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"HiddenChanged","Components.Bind.ValueAttribute":"Hidden","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-129417434,"Kind":"Components.Bind","Name":"MudBlazor.Column<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Column","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.Column","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-790268262,"Kind":"Components.Bind","Name":"MudBlazor.Column<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Hidden","HiddenChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Column","Attributes":[{"Name":"@bind-Hidden","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.Column","Attributes":[{"Name":"@bind-Hidden:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Hidden:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Hidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Hidden","HiddenChanged"]},"Metadata":{"Common.PropertyName":"Hidden","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Column<T>","Common.TypeNameIdentifier":"Column","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"HiddenChanged","Components.Bind.ValueAttribute":"Hidden","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1661241061,"Kind":"Components.Bind","Name":"MudBlazor.MudDataGrid<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDataGrid","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDataGrid","Attributes":[{"Name":"@bind-SelectedItem:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItem:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"Metadata":{"Common.PropertyName":"SelectedItem","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedItemChanged","Components.Bind.ValueAttribute":"SelectedItem","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":506756978,"Kind":"Components.Bind","Name":"MudBlazor.MudDataGrid<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedItems","SelectedItemsChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDataGrid","Attributes":[{"Name":"@bind-SelectedItems","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDataGrid","Attributes":[{"Name":"@bind-SelectedItems:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItems:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItems","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<T>>","Documentation":{"Id":10,"Args":["SelectedItems","SelectedItemsChanged"]},"Metadata":{"Common.PropertyName":"SelectedItems","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedItemsChanged","Components.Bind.ValueAttribute":"SelectedItems","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2042450038,"Kind":"Components.Bind","Name":"MudBlazor.MudDataGrid<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDataGrid","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDataGrid","Attributes":[{"Name":"@bind-SelectedItem:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItem:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"Metadata":{"Common.PropertyName":"SelectedItem","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedItemChanged","Components.Bind.ValueAttribute":"SelectedItem","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1535311466,"Kind":"Components.Bind","Name":"MudBlazor.MudDataGrid<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedItems","SelectedItemsChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDataGrid","Attributes":[{"Name":"@bind-SelectedItems","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDataGrid","Attributes":[{"Name":"@bind-SelectedItems:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItems:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItems","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<T>>","Documentation":{"Id":10,"Args":["SelectedItems","SelectedItemsChanged"]},"Metadata":{"Common.PropertyName":"SelectedItems","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDataGrid<T>","Common.TypeNameIdentifier":"MudDataGrid","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedItemsChanged","Components.Bind.ValueAttribute":"SelectedItems","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1086892119,"Kind":"Components.Bind","Name":"MudBlazor.MudDatePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Date","DateChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDatePicker","Attributes":[{"Name":"@bind-Date","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDatePicker","Attributes":[{"Name":"@bind-Date:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Date:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Date","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":{"Id":10,"Args":["Date","DateChanged"]},"Metadata":{"Common.PropertyName":"Date","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDatePicker","Common.TypeNameIdentifier":"MudDatePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"DateChanged","Components.Bind.ValueAttribute":"Date","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":824665974,"Kind":"Components.Bind","Name":"MudBlazor.MudDatePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["PickerMonth","PickerMonthChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDatePicker","Attributes":[{"Name":"@bind-PickerMonth","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDatePicker","Attributes":[{"Name":"@bind-PickerMonth:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-PickerMonth:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PickerMonth","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":{"Id":10,"Args":["PickerMonth","PickerMonthChanged"]},"Metadata":{"Common.PropertyName":"PickerMonth","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDatePicker","Common.TypeNameIdentifier":"MudDatePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"PickerMonthChanged","Components.Bind.ValueAttribute":"PickerMonth","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1217388674,"Kind":"Components.Bind","Name":"MudBlazor.MudDatePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDatePicker","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDatePicker","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDatePicker","Common.TypeNameIdentifier":"MudDatePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":258039892,"Kind":"Components.Bind","Name":"MudBlazor.MudDatePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Date","DateChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDatePicker","Attributes":[{"Name":"@bind-Date","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDatePicker","Attributes":[{"Name":"@bind-Date:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Date:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Date","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":{"Id":10,"Args":["Date","DateChanged"]},"Metadata":{"Common.PropertyName":"Date","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDatePicker","Common.TypeNameIdentifier":"MudDatePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"DateChanged","Components.Bind.ValueAttribute":"Date","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1692853171,"Kind":"Components.Bind","Name":"MudBlazor.MudDatePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["PickerMonth","PickerMonthChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDatePicker","Attributes":[{"Name":"@bind-PickerMonth","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDatePicker","Attributes":[{"Name":"@bind-PickerMonth:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-PickerMonth:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PickerMonth","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":{"Id":10,"Args":["PickerMonth","PickerMonthChanged"]},"Metadata":{"Common.PropertyName":"PickerMonth","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDatePicker","Common.TypeNameIdentifier":"MudDatePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"PickerMonthChanged","Components.Bind.ValueAttribute":"PickerMonth","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":72474787,"Kind":"Components.Bind","Name":"MudBlazor.MudDatePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDatePicker","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDatePicker","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDatePicker","Common.TypeNameIdentifier":"MudDatePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":16483943,"Kind":"Components.Bind","Name":"MudBlazor.MudDateRangePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["DateRange","DateRangeChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDateRangePicker","Attributes":[{"Name":"@bind-DateRange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDateRangePicker","Attributes":[{"Name":"@bind-DateRange:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-DateRange:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DateRange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.DateRange>","Documentation":{"Id":10,"Args":["DateRange","DateRangeChanged"]},"Metadata":{"Common.PropertyName":"DateRange","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDateRangePicker","Common.TypeNameIdentifier":"MudDateRangePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"DateRangeChanged","Components.Bind.ValueAttribute":"DateRange","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1958179180,"Kind":"Components.Bind","Name":"MudBlazor.MudDateRangePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["PickerMonth","PickerMonthChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDateRangePicker","Attributes":[{"Name":"@bind-PickerMonth","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDateRangePicker","Attributes":[{"Name":"@bind-PickerMonth:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-PickerMonth:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PickerMonth","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":{"Id":10,"Args":["PickerMonth","PickerMonthChanged"]},"Metadata":{"Common.PropertyName":"PickerMonth","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDateRangePicker","Common.TypeNameIdentifier":"MudDateRangePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"PickerMonthChanged","Components.Bind.ValueAttribute":"PickerMonth","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-598086096,"Kind":"Components.Bind","Name":"MudBlazor.MudDateRangePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDateRangePicker","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDateRangePicker","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDateRangePicker","Common.TypeNameIdentifier":"MudDateRangePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-771751813,"Kind":"Components.Bind","Name":"MudBlazor.MudDateRangePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["DateRange","DateRangeChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDateRangePicker","Attributes":[{"Name":"@bind-DateRange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDateRangePicker","Attributes":[{"Name":"@bind-DateRange:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-DateRange:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DateRange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.DateRange>","Documentation":{"Id":10,"Args":["DateRange","DateRangeChanged"]},"Metadata":{"Common.PropertyName":"DateRange","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDateRangePicker","Common.TypeNameIdentifier":"MudDateRangePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"DateRangeChanged","Components.Bind.ValueAttribute":"DateRange","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":877820113,"Kind":"Components.Bind","Name":"MudBlazor.MudDateRangePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["PickerMonth","PickerMonthChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDateRangePicker","Attributes":[{"Name":"@bind-PickerMonth","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDateRangePicker","Attributes":[{"Name":"@bind-PickerMonth:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-PickerMonth:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PickerMonth","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":{"Id":10,"Args":["PickerMonth","PickerMonthChanged"]},"Metadata":{"Common.PropertyName":"PickerMonth","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDateRangePicker","Common.TypeNameIdentifier":"MudDateRangePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"PickerMonthChanged","Components.Bind.ValueAttribute":"PickerMonth","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-881054457,"Kind":"Components.Bind","Name":"MudBlazor.MudDateRangePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDateRangePicker","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDateRangePicker","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDateRangePicker","Common.TypeNameIdentifier":"MudDateRangePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1900747848,"Kind":"Components.Bind","Name":"MudBlazor.MudDialog","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDialog","Attributes":[{"Name":"@bind-IsVisible","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDialog","Attributes":[{"Name":"@bind-IsVisible:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsVisible:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsVisible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"Metadata":{"Common.PropertyName":"IsVisible","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialog","Common.TypeNameIdentifier":"MudDialog","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsVisibleChanged","Components.Bind.ValueAttribute":"IsVisible","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1718836150,"Kind":"Components.Bind","Name":"MudBlazor.MudDialog","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDialog","Attributes":[{"Name":"@bind-IsVisible","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDialog","Attributes":[{"Name":"@bind-IsVisible:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsVisible:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsVisible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"Metadata":{"Common.PropertyName":"IsVisible","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDialog","Common.TypeNameIdentifier":"MudDialog","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsVisibleChanged","Components.Bind.ValueAttribute":"IsVisible","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1229099719,"Kind":"Components.Bind","Name":"MudBlazor.MudDrawer","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Open","OpenChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDrawer","Attributes":[{"Name":"@bind-Open","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDrawer","Attributes":[{"Name":"@bind-Open:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Open:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Open","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Open","OpenChanged"]},"Metadata":{"Common.PropertyName":"Open","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawer","Common.TypeNameIdentifier":"MudDrawer","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"OpenChanged","Components.Bind.ValueAttribute":"Open","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1979607252,"Kind":"Components.Bind","Name":"MudBlazor.MudDrawer","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Open","OpenChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDrawer","Attributes":[{"Name":"@bind-Open","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDrawer","Attributes":[{"Name":"@bind-Open:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Open:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Open","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Open","OpenChanged"]},"Metadata":{"Common.PropertyName":"Open","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDrawer","Common.TypeNameIdentifier":"MudDrawer","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"OpenChanged","Components.Bind.ValueAttribute":"Open","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1531697325,"Kind":"Components.Bind","Name":"MudBlazor.MudElement","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Ref","RefChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudElement","Attributes":[{"Name":"@bind-Ref","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudElement","Attributes":[{"Name":"@bind-Ref:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Ref:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Ref","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>","Documentation":{"Id":10,"Args":["Ref","RefChanged"]},"Metadata":{"Common.PropertyName":"Ref","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudElement","Common.TypeNameIdentifier":"MudElement","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"RefChanged","Components.Bind.ValueAttribute":"Ref","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1770491652,"Kind":"Components.Bind","Name":"MudBlazor.MudElement","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Ref","RefChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudElement","Attributes":[{"Name":"@bind-Ref","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudElement","Attributes":[{"Name":"@bind-Ref:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Ref:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Ref","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>","Documentation":{"Id":10,"Args":["Ref","RefChanged"]},"Metadata":{"Common.PropertyName":"Ref","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudElement","Common.TypeNameIdentifier":"MudElement","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"RefChanged","Components.Bind.ValueAttribute":"Ref","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1643323178,"Kind":"Components.Bind","Name":"MudBlazor.MudExpansionPanel","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsExpanded","IsExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudExpansionPanel","Attributes":[{"Name":"@bind-IsExpanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudExpansionPanel","Attributes":[{"Name":"@bind-IsExpanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsExpanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsExpanded","IsExpandedChanged"]},"Metadata":{"Common.PropertyName":"IsExpanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanel","Common.TypeNameIdentifier":"MudExpansionPanel","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsExpandedChanged","Components.Bind.ValueAttribute":"IsExpanded","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-62414121,"Kind":"Components.Bind","Name":"MudBlazor.MudExpansionPanel","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsExpanded","IsExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudExpansionPanel","Attributes":[{"Name":"@bind-IsExpanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudExpansionPanel","Attributes":[{"Name":"@bind-IsExpanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsExpanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsExpanded","IsExpandedChanged"]},"Metadata":{"Common.PropertyName":"IsExpanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudExpansionPanel","Common.TypeNameIdentifier":"MudExpansionPanel","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsExpandedChanged","Components.Bind.ValueAttribute":"IsExpanded","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1992315453,"Kind":"Components.Bind","Name":"MudBlazor.MudFileUpload<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Files","FilesChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudFileUpload","Attributes":[{"Name":"@bind-Files","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudFileUpload","Attributes":[{"Name":"@bind-Files:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Files:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Files","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Files","FilesChanged"]},"Metadata":{"Common.PropertyName":"Files","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudFileUpload<T>","Common.TypeNameIdentifier":"MudFileUpload","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"FilesChanged","Components.Bind.ValueAttribute":"Files","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2007798749,"Kind":"Components.Bind","Name":"MudBlazor.MudFileUpload<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Files","FilesChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudFileUpload","Attributes":[{"Name":"@bind-Files","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudFileUpload","Attributes":[{"Name":"@bind-Files:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Files:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Files","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Files","FilesChanged"]},"Metadata":{"Common.PropertyName":"Files","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudFileUpload<T>","Common.TypeNameIdentifier":"MudFileUpload","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"FilesChanged","Components.Bind.ValueAttribute":"Files","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1405149798,"Kind":"Components.Bind","Name":"MudBlazor.MudForm","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsValid","IsValidChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudForm","Attributes":[{"Name":"@bind-IsValid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudForm","Attributes":[{"Name":"@bind-IsValid:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsValid:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsValid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsValid","IsValidChanged"]},"Metadata":{"Common.PropertyName":"IsValid","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudForm","Common.TypeNameIdentifier":"MudForm","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsValidChanged","Components.Bind.ValueAttribute":"IsValid","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1110204048,"Kind":"Components.Bind","Name":"MudBlazor.MudForm","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsTouched","IsTouchedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudForm","Attributes":[{"Name":"@bind-IsTouched","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudForm","Attributes":[{"Name":"@bind-IsTouched:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsTouched:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsTouched","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsTouched","IsTouchedChanged"]},"Metadata":{"Common.PropertyName":"IsTouched","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudForm","Common.TypeNameIdentifier":"MudForm","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsTouchedChanged","Components.Bind.ValueAttribute":"IsTouched","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1177114114,"Kind":"Components.Bind","Name":"MudBlazor.MudForm","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Errors","ErrorsChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudForm","Attributes":[{"Name":"@bind-Errors","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudForm","Attributes":[{"Name":"@bind-Errors:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Errors:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Errors","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":{"Id":10,"Args":["Errors","ErrorsChanged"]},"Metadata":{"Common.PropertyName":"Errors","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudForm","Common.TypeNameIdentifier":"MudForm","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ErrorsChanged","Components.Bind.ValueAttribute":"Errors","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-26934301,"Kind":"Components.Bind","Name":"MudBlazor.MudForm","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsValid","IsValidChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudForm","Attributes":[{"Name":"@bind-IsValid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudForm","Attributes":[{"Name":"@bind-IsValid:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsValid:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsValid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsValid","IsValidChanged"]},"Metadata":{"Common.PropertyName":"IsValid","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudForm","Common.TypeNameIdentifier":"MudForm","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsValidChanged","Components.Bind.ValueAttribute":"IsValid","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-659667526,"Kind":"Components.Bind","Name":"MudBlazor.MudForm","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsTouched","IsTouchedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudForm","Attributes":[{"Name":"@bind-IsTouched","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudForm","Attributes":[{"Name":"@bind-IsTouched:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsTouched:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsTouched","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsTouched","IsTouchedChanged"]},"Metadata":{"Common.PropertyName":"IsTouched","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudForm","Common.TypeNameIdentifier":"MudForm","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsTouchedChanged","Components.Bind.ValueAttribute":"IsTouched","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1561349424,"Kind":"Components.Bind","Name":"MudBlazor.MudForm","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Errors","ErrorsChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudForm","Attributes":[{"Name":"@bind-Errors","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudForm","Attributes":[{"Name":"@bind-Errors:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Errors:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Errors","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":{"Id":10,"Args":["Errors","ErrorsChanged"]},"Metadata":{"Common.PropertyName":"Errors","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudForm","Common.TypeNameIdentifier":"MudForm","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ErrorsChanged","Components.Bind.ValueAttribute":"Errors","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1237505399,"Kind":"Components.Bind","Name":"MudBlazor.MudHidden","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsHidden","IsHiddenChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudHidden","Attributes":[{"Name":"@bind-IsHidden","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudHidden","Attributes":[{"Name":"@bind-IsHidden:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsHidden:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsHidden","IsHiddenChanged"]},"Metadata":{"Common.PropertyName":"IsHidden","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudHidden","Common.TypeNameIdentifier":"MudHidden","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsHiddenChanged","Components.Bind.ValueAttribute":"IsHidden","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1612972582,"Kind":"Components.Bind","Name":"MudBlazor.MudHidden","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsHidden","IsHiddenChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudHidden","Attributes":[{"Name":"@bind-IsHidden","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudHidden","Attributes":[{"Name":"@bind-IsHidden:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsHidden:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsHidden","IsHiddenChanged"]},"Metadata":{"Common.PropertyName":"IsHidden","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudHidden","Common.TypeNameIdentifier":"MudHidden","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsHiddenChanged","Components.Bind.ValueAttribute":"IsHidden","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":943605409,"Kind":"Components.Bind","Name":"MudBlazor.MudInput<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudInput","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudInput","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudInput<T>","Common.TypeNameIdentifier":"MudInput","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2144962162,"Kind":"Components.Bind","Name":"MudBlazor.MudInput<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudInput<T>","Common.TypeNameIdentifier":"MudInput","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-891252309,"Kind":"Components.Bind","Name":"MudBlazor.MudInput<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudInput","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudInput","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudInput<T>","Common.TypeNameIdentifier":"MudInput","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1802903353,"Kind":"Components.Bind","Name":"MudBlazor.MudInput<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudInput<T>","Common.TypeNameIdentifier":"MudInput","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1216707815,"Kind":"Components.Bind","Name":"MudBlazor.MudInputString","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudInputString","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudInputString","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputString","Common.TypeNameIdentifier":"MudInputString","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-2141245583,"Kind":"Components.Bind","Name":"MudBlazor.MudInputString","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudInputString","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudInputString","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputString","Common.TypeNameIdentifier":"MudInputString","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-844071372,"Kind":"Components.Bind","Name":"MudBlazor.MudInputString","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudInputString","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudInputString","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputString","Common.TypeNameIdentifier":"MudInputString","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1664462330,"Kind":"Components.Bind","Name":"MudBlazor.MudInputString","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudInputString","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudInputString","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudInputString","Common.TypeNameIdentifier":"MudInputString","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1234371733,"Kind":"Components.Bind","Name":"MudBlazor.MudRangeInput<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRangeInput","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudRangeInput","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudRangeInput<T>","Common.TypeNameIdentifier":"MudRangeInput","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":894282085,"Kind":"Components.Bind","Name":"MudBlazor.MudRangeInput<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRangeInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudRangeInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Range<T>>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudRangeInput<T>","Common.TypeNameIdentifier":"MudRangeInput","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1798032466,"Kind":"Components.Bind","Name":"MudBlazor.MudRangeInput<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRangeInput","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudRangeInput","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudRangeInput<T>","Common.TypeNameIdentifier":"MudRangeInput","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":869281148,"Kind":"Components.Bind","Name":"MudBlazor.MudRangeInput<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRangeInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudRangeInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.Range<T>>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudRangeInput<T>","Common.TypeNameIdentifier":"MudRangeInput","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-647989358,"Kind":"Components.Bind","Name":"MudBlazor.MudList","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudList","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudList","Attributes":[{"Name":"@bind-SelectedItem:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItem:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudListItem>","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"Metadata":{"Common.PropertyName":"SelectedItem","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudList","Common.TypeNameIdentifier":"MudList","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedItemChanged","Components.Bind.ValueAttribute":"SelectedItem","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-772866507,"Kind":"Components.Bind","Name":"MudBlazor.MudList","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedValue","SelectedValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudList","Attributes":[{"Name":"@bind-SelectedValue","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudList","Attributes":[{"Name":"@bind-SelectedValue:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedValue:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":{"Id":10,"Args":["SelectedValue","SelectedValueChanged"]},"Metadata":{"Common.PropertyName":"SelectedValue","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudList","Common.TypeNameIdentifier":"MudList","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedValueChanged","Components.Bind.ValueAttribute":"SelectedValue","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-806838025,"Kind":"Components.Bind","Name":"MudBlazor.MudList","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudList","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudList","Attributes":[{"Name":"@bind-SelectedItem:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItem:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.MudListItem>","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"Metadata":{"Common.PropertyName":"SelectedItem","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudList","Common.TypeNameIdentifier":"MudList","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedItemChanged","Components.Bind.ValueAttribute":"SelectedItem","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":259418986,"Kind":"Components.Bind","Name":"MudBlazor.MudList","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedValue","SelectedValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudList","Attributes":[{"Name":"@bind-SelectedValue","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudList","Attributes":[{"Name":"@bind-SelectedValue:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedValue:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":{"Id":10,"Args":["SelectedValue","SelectedValueChanged"]},"Metadata":{"Common.PropertyName":"SelectedValue","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudList","Common.TypeNameIdentifier":"MudList","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedValueChanged","Components.Bind.ValueAttribute":"SelectedValue","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1107913959,"Kind":"Components.Bind","Name":"MudBlazor.MudListItem","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudListItem","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudListItem","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"Metadata":{"Common.PropertyName":"Expanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudListItem","Common.TypeNameIdentifier":"MudListItem","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ExpandedChanged","Components.Bind.ValueAttribute":"Expanded","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1648722355,"Kind":"Components.Bind","Name":"MudBlazor.MudListItem","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudListItem","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudListItem","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"Metadata":{"Common.PropertyName":"Expanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudListItem","Common.TypeNameIdentifier":"MudListItem","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ExpandedChanged","Components.Bind.ValueAttribute":"Expanded","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":385807045,"Kind":"Components.Bind","Name":"MudBlazor.MudMask","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudMask","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudMask","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudMask","Common.TypeNameIdentifier":"MudMask","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-2059857706,"Kind":"Components.Bind","Name":"MudBlazor.MudMask","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudMask","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudMask","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudMask","Common.TypeNameIdentifier":"MudMask","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-274453624,"Kind":"Components.Bind","Name":"MudBlazor.MudMask","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudMask","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudMask","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudMask","Common.TypeNameIdentifier":"MudMask","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1218872632,"Kind":"Components.Bind","Name":"MudBlazor.MudMask","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudMask","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudMask","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudMask","Common.TypeNameIdentifier":"MudMask","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":187097658,"Kind":"Components.Bind","Name":"MudBlazor.MudMessageBox","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudMessageBox","Attributes":[{"Name":"@bind-IsVisible","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudMessageBox","Attributes":[{"Name":"@bind-IsVisible:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsVisible:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsVisible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"Metadata":{"Common.PropertyName":"IsVisible","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsVisibleChanged","Components.Bind.ValueAttribute":"IsVisible","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-466475719,"Kind":"Components.Bind","Name":"MudBlazor.MudMessageBox","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudMessageBox","Attributes":[{"Name":"@bind-IsVisible","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudMessageBox","Attributes":[{"Name":"@bind-IsVisible:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsVisible:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsVisible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"Metadata":{"Common.PropertyName":"IsVisible","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudMessageBox","Common.TypeNameIdentifier":"MudMessageBox","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsVisibleChanged","Components.Bind.ValueAttribute":"IsVisible","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1028960424,"Kind":"Components.Bind","Name":"MudBlazor.MudNavGroup","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudNavGroup","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudNavGroup","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"Metadata":{"Common.PropertyName":"Expanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavGroup","Common.TypeNameIdentifier":"MudNavGroup","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ExpandedChanged","Components.Bind.ValueAttribute":"Expanded","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-889454502,"Kind":"Components.Bind","Name":"MudBlazor.MudNavGroup","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudNavGroup","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudNavGroup","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"Metadata":{"Common.PropertyName":"Expanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudNavGroup","Common.TypeNameIdentifier":"MudNavGroup","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ExpandedChanged","Components.Bind.ValueAttribute":"Expanded","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1644750148,"Kind":"Components.Bind","Name":"MudBlazor.MudNumericField<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudNumericField","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudNumericField","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudNumericField<T>","Common.TypeNameIdentifier":"MudNumericField","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1645378515,"Kind":"Components.Bind","Name":"MudBlazor.MudNumericField<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudNumericField","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudNumericField","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudNumericField<T>","Common.TypeNameIdentifier":"MudNumericField","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-2040049426,"Kind":"Components.Bind","Name":"MudBlazor.MudNumericField<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudNumericField","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudNumericField","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudNumericField<T>","Common.TypeNameIdentifier":"MudNumericField","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-559702246,"Kind":"Components.Bind","Name":"MudBlazor.MudNumericField<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudNumericField","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudNumericField","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudNumericField<T>","Common.TypeNameIdentifier":"MudNumericField","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":345005586,"Kind":"Components.Bind","Name":"MudBlazor.MudOverlay","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Visible","VisibleChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudOverlay","Attributes":[{"Name":"@bind-Visible","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudOverlay","Attributes":[{"Name":"@bind-Visible:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Visible:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Visible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Visible","VisibleChanged"]},"Metadata":{"Common.PropertyName":"Visible","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudOverlay","Common.TypeNameIdentifier":"MudOverlay","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"VisibleChanged","Components.Bind.ValueAttribute":"Visible","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-281672327,"Kind":"Components.Bind","Name":"MudBlazor.MudOverlay","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Visible","VisibleChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudOverlay","Attributes":[{"Name":"@bind-Visible","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudOverlay","Attributes":[{"Name":"@bind-Visible:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Visible:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Visible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Visible","VisibleChanged"]},"Metadata":{"Common.PropertyName":"Visible","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudOverlay","Common.TypeNameIdentifier":"MudOverlay","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"VisibleChanged","Components.Bind.ValueAttribute":"Visible","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":347226929,"Kind":"Components.Bind","Name":"MudBlazor.MudPagination","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Selected","SelectedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudPagination","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudPagination","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["Selected","SelectedChanged"]},"Metadata":{"Common.PropertyName":"Selected","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudPagination","Common.TypeNameIdentifier":"MudPagination","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedChanged","Components.Bind.ValueAttribute":"Selected","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":552533794,"Kind":"Components.Bind","Name":"MudBlazor.MudPagination","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Selected","SelectedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudPagination","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudPagination","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["Selected","SelectedChanged"]},"Metadata":{"Common.PropertyName":"Selected","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudPagination","Common.TypeNameIdentifier":"MudPagination","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedChanged","Components.Bind.ValueAttribute":"Selected","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-542412606,"Kind":"Components.Bind","Name":"MudBlazor.MudPicker<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudPicker","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudPicker","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudPicker<T>","Common.TypeNameIdentifier":"MudPicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1180190803,"Kind":"Components.Bind","Name":"MudBlazor.MudPicker<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudPicker","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudPicker","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudPicker<T>","Common.TypeNameIdentifier":"MudPicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1566594173,"Kind":"Components.Bind","Name":"MudBlazor.MudRadioGroup<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedOption","SelectedOptionChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRadioGroup","Attributes":[{"Name":"@bind-SelectedOption","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudRadioGroup","Attributes":[{"Name":"@bind-SelectedOption:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedOption:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedOption","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["SelectedOption","SelectedOptionChanged"]},"Metadata":{"Common.PropertyName":"SelectedOption","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudRadioGroup<T>","Common.TypeNameIdentifier":"MudRadioGroup","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedOptionChanged","Components.Bind.ValueAttribute":"SelectedOption","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1212663786,"Kind":"Components.Bind","Name":"MudBlazor.MudRadioGroup<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedOption","SelectedOptionChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRadioGroup","Attributes":[{"Name":"@bind-SelectedOption","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudRadioGroup","Attributes":[{"Name":"@bind-SelectedOption:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedOption:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedOption","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["SelectedOption","SelectedOptionChanged"]},"Metadata":{"Common.PropertyName":"SelectedOption","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudRadioGroup<T>","Common.TypeNameIdentifier":"MudRadioGroup","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedOptionChanged","Components.Bind.ValueAttribute":"SelectedOption","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1085403816,"Kind":"Components.Bind","Name":"MudBlazor.MudRating","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedValue","SelectedValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudRating","Attributes":[{"Name":"@bind-SelectedValue","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudRating","Attributes":[{"Name":"@bind-SelectedValue:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedValue:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedValue","SelectedValueChanged"]},"Metadata":{"Common.PropertyName":"SelectedValue","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudRating","Common.TypeNameIdentifier":"MudRating","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedValueChanged","Components.Bind.ValueAttribute":"SelectedValue","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-611518572,"Kind":"Components.Bind","Name":"MudBlazor.MudRating","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedValue","SelectedValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudRating","Attributes":[{"Name":"@bind-SelectedValue","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudRating","Attributes":[{"Name":"@bind-SelectedValue:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedValue:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedValue","SelectedValueChanged"]},"Metadata":{"Common.PropertyName":"SelectedValue","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudRating","Common.TypeNameIdentifier":"MudRating","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedValueChanged","Components.Bind.ValueAttribute":"SelectedValue","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-715040030,"Kind":"Components.Bind","Name":"MudBlazor.MudSelect<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedValues","SelectedValuesChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSelect","Attributes":[{"Name":"@bind-SelectedValues","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudSelect","Attributes":[{"Name":"@bind-SelectedValues:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedValues:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedValues","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<T>>","Documentation":{"Id":10,"Args":["SelectedValues","SelectedValuesChanged"]},"Metadata":{"Common.PropertyName":"SelectedValues","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelect<T>","Common.TypeNameIdentifier":"MudSelect","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedValuesChanged","Components.Bind.ValueAttribute":"SelectedValues","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-128596173,"Kind":"Components.Bind","Name":"MudBlazor.MudSelect<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSelect","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudSelect","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelect<T>","Common.TypeNameIdentifier":"MudSelect","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1583604096,"Kind":"Components.Bind","Name":"MudBlazor.MudSelect<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelect<T>","Common.TypeNameIdentifier":"MudSelect","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-163989815,"Kind":"Components.Bind","Name":"MudBlazor.MudSelect<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedValues","SelectedValuesChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSelect","Attributes":[{"Name":"@bind-SelectedValues","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudSelect","Attributes":[{"Name":"@bind-SelectedValues:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedValues:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedValues","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<T>>","Documentation":{"Id":10,"Args":["SelectedValues","SelectedValuesChanged"]},"Metadata":{"Common.PropertyName":"SelectedValues","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelect<T>","Common.TypeNameIdentifier":"MudSelect","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedValuesChanged","Components.Bind.ValueAttribute":"SelectedValues","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1958416145,"Kind":"Components.Bind","Name":"MudBlazor.MudSelect<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSelect","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudSelect","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelect<T>","Common.TypeNameIdentifier":"MudSelect","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":738373220,"Kind":"Components.Bind","Name":"MudBlazor.MudSelect<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSelect<T>","Common.TypeNameIdentifier":"MudSelect","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-218720034,"Kind":"Components.Bind","Name":"MudBlazor.MudSlider<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSlider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudSlider","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSlider<T>","Common.TypeNameIdentifier":"MudSlider","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1178094216,"Kind":"Components.Bind","Name":"MudBlazor.MudSlider<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSlider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudSlider","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSlider<T>","Common.TypeNameIdentifier":"MudSlider","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1400392955,"Kind":"Components.Bind","Name":"MudBlazor.MudSwitch<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSwitch","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudSwitch","Attributes":[{"Name":"@bind-Checked:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Checked:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"Metadata":{"Common.PropertyName":"Checked","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSwitch<T>","Common.TypeNameIdentifier":"MudSwitch","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ValueAttribute":"Checked","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1604874706,"Kind":"Components.Bind","Name":"MudBlazor.MudSwitch<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSwitch","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudSwitch","Attributes":[{"Name":"@bind-Checked:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Checked:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Checked","CheckedChanged"]},"Metadata":{"Common.PropertyName":"Checked","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSwitch<T>","Common.TypeNameIdentifier":"MudSwitch","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ValueAttribute":"Checked","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1637058575,"Kind":"Components.Bind","Name":"MudBlazor.MudColumn<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudColumn","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudColumn","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudColumn<T>","Common.TypeNameIdentifier":"MudColumn","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1567564805,"Kind":"Components.Bind","Name":"MudBlazor.MudColumn<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudColumn","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudColumn","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudColumn<T>","Common.TypeNameIdentifier":"MudColumn","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":628020263,"Kind":"Components.Bind","Name":"MudBlazor.MudSortableColumn<T, ModelType>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudSortableColumn","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudSortableColumn","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSortableColumn<T, ModelType>","Common.TypeNameIdentifier":"MudSortableColumn","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1532588435,"Kind":"Components.Bind","Name":"MudBlazor.MudSortableColumn<T, ModelType>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudSortableColumn","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudSortableColumn","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudSortableColumn<T, ModelType>","Common.TypeNameIdentifier":"MudSortableColumn","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1630335682,"Kind":"Components.Bind","Name":"MudBlazor.MudTable<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTable","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTable","Attributes":[{"Name":"@bind-SelectedItem:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItem:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"Metadata":{"Common.PropertyName":"SelectedItem","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedItemChanged","Components.Bind.ValueAttribute":"SelectedItem","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2050686722,"Kind":"Components.Bind","Name":"MudBlazor.MudTable<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedItems","SelectedItemsChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTable","Attributes":[{"Name":"@bind-SelectedItems","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTable","Attributes":[{"Name":"@bind-SelectedItems:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItems:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItems","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<T>>","Documentation":{"Id":10,"Args":["SelectedItems","SelectedItemsChanged"]},"Metadata":{"Common.PropertyName":"SelectedItems","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedItemsChanged","Components.Bind.ValueAttribute":"SelectedItems","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1784061816,"Kind":"Components.Bind","Name":"MudBlazor.MudTable<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["RowsPerPage","RowsPerPageChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTable","Attributes":[{"Name":"@bind-RowsPerPage","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTable","Attributes":[{"Name":"@bind-RowsPerPage:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-RowsPerPage:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-RowsPerPage","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["RowsPerPage","RowsPerPageChanged"]},"Metadata":{"Common.PropertyName":"RowsPerPage","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"RowsPerPageChanged","Components.Bind.ValueAttribute":"RowsPerPage","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-674244738,"Kind":"Components.Bind","Name":"MudBlazor.MudTable<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTable","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTable","Attributes":[{"Name":"@bind-SelectedItem:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItem:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["SelectedItem","SelectedItemChanged"]},"Metadata":{"Common.PropertyName":"SelectedItem","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedItemChanged","Components.Bind.ValueAttribute":"SelectedItem","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2056894074,"Kind":"Components.Bind","Name":"MudBlazor.MudTable<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedItems","SelectedItemsChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTable","Attributes":[{"Name":"@bind-SelectedItems","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTable","Attributes":[{"Name":"@bind-SelectedItems:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItems:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItems","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<T>>","Documentation":{"Id":10,"Args":["SelectedItems","SelectedItemsChanged"]},"Metadata":{"Common.PropertyName":"SelectedItems","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedItemsChanged","Components.Bind.ValueAttribute":"SelectedItems","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-258527148,"Kind":"Components.Bind","Name":"MudBlazor.MudTable<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["RowsPerPage","RowsPerPageChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTable","Attributes":[{"Name":"@bind-RowsPerPage","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTable","Attributes":[{"Name":"@bind-RowsPerPage:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-RowsPerPage:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-RowsPerPage","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["RowsPerPage","RowsPerPageChanged"]},"Metadata":{"Common.PropertyName":"RowsPerPage","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTable<T>","Common.TypeNameIdentifier":"MudTable","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"RowsPerPageChanged","Components.Bind.ValueAttribute":"RowsPerPage","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1863375986,"Kind":"Components.Bind","Name":"MudBlazor.MudTableSortLabel<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SortDirection","SortDirectionChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTableSortLabel","Attributes":[{"Name":"@bind-SortDirection","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTableSortLabel","Attributes":[{"Name":"@bind-SortDirection:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SortDirection:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SortDirection","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.SortDirection>","IsEnum":true,"Documentation":{"Id":10,"Args":["SortDirection","SortDirectionChanged"]},"Metadata":{"Common.PropertyName":"SortDirection","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableSortLabel<T>","Common.TypeNameIdentifier":"MudTableSortLabel","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SortDirectionChanged","Components.Bind.ValueAttribute":"SortDirection","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-2013537897,"Kind":"Components.Bind","Name":"MudBlazor.MudTableSortLabel<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SortDirection","SortDirectionChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTableSortLabel","Attributes":[{"Name":"@bind-SortDirection","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTableSortLabel","Attributes":[{"Name":"@bind-SortDirection:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SortDirection:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SortDirection","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MudBlazor.SortDirection>","IsEnum":true,"Documentation":{"Id":10,"Args":["SortDirection","SortDirectionChanged"]},"Metadata":{"Common.PropertyName":"SortDirection","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTableSortLabel<T>","Common.TypeNameIdentifier":"MudTableSortLabel","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SortDirectionChanged","Components.Bind.ValueAttribute":"SortDirection","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-276235468,"Kind":"Components.Bind","Name":"MudBlazor.MudTr","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsChecked","IsCheckedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTr","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTr","Attributes":[{"Name":"@bind-IsChecked:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsChecked:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsChecked","IsCheckedChanged"]},"Metadata":{"Common.PropertyName":"IsChecked","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTr","Common.TypeNameIdentifier":"MudTr","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsCheckedChanged","Components.Bind.ValueAttribute":"IsChecked","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-316472004,"Kind":"Components.Bind","Name":"MudBlazor.MudTr","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsChecked","IsCheckedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTr","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTr","Attributes":[{"Name":"@bind-IsChecked:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsChecked:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsChecked","IsCheckedChanged"]},"Metadata":{"Common.PropertyName":"IsChecked","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTr","Common.TypeNameIdentifier":"MudTr","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsCheckedChanged","Components.Bind.ValueAttribute":"IsChecked","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-380513675,"Kind":"Components.Bind","Name":"MudBlazor.MudDynamicTabs","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["ActivePanelIndex","ActivePanelIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudDynamicTabs","Attributes":[{"Name":"@bind-ActivePanelIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudDynamicTabs","Attributes":[{"Name":"@bind-ActivePanelIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActivePanelIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActivePanelIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["ActivePanelIndex","ActivePanelIndexChanged"]},"Metadata":{"Common.PropertyName":"ActivePanelIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ActivePanelIndexChanged","Components.Bind.ValueAttribute":"ActivePanelIndex","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":698855195,"Kind":"Components.Bind","Name":"MudBlazor.MudDynamicTabs","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["ActivePanelIndex","ActivePanelIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudDynamicTabs","Attributes":[{"Name":"@bind-ActivePanelIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudDynamicTabs","Attributes":[{"Name":"@bind-ActivePanelIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActivePanelIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActivePanelIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["ActivePanelIndex","ActivePanelIndexChanged"]},"Metadata":{"Common.PropertyName":"ActivePanelIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudDynamicTabs","Common.TypeNameIdentifier":"MudDynamicTabs","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ActivePanelIndexChanged","Components.Bind.ValueAttribute":"ActivePanelIndex","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-213001924,"Kind":"Components.Bind","Name":"MudBlazor.MudTabs","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["ActivePanelIndex","ActivePanelIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTabs","Attributes":[{"Name":"@bind-ActivePanelIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTabs","Attributes":[{"Name":"@bind-ActivePanelIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActivePanelIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActivePanelIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["ActivePanelIndex","ActivePanelIndexChanged"]},"Metadata":{"Common.PropertyName":"ActivePanelIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ActivePanelIndexChanged","Components.Bind.ValueAttribute":"ActivePanelIndex","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1013929546,"Kind":"Components.Bind","Name":"MudBlazor.MudTabs","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["ActivePanelIndex","ActivePanelIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTabs","Attributes":[{"Name":"@bind-ActivePanelIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTabs","Attributes":[{"Name":"@bind-ActivePanelIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActivePanelIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActivePanelIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["ActivePanelIndex","ActivePanelIndexChanged"]},"Metadata":{"Common.PropertyName":"ActivePanelIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTabs","Common.TypeNameIdentifier":"MudTabs","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ActivePanelIndexChanged","Components.Bind.ValueAttribute":"ActivePanelIndex","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-723114278,"Kind":"Components.Bind","Name":"MudBlazor.MudTextField<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTextField","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTextField","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextField<T>","Common.TypeNameIdentifier":"MudTextField","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1157428067,"Kind":"Components.Bind","Name":"MudBlazor.MudTextField<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTextField","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTextField","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextField<T>","Common.TypeNameIdentifier":"MudTextField","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-724593077,"Kind":"Components.Bind","Name":"MudBlazor.MudTextField<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTextField","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTextField","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextField<T>","Common.TypeNameIdentifier":"MudTextField","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":659234242,"Kind":"Components.Bind","Name":"MudBlazor.MudTextField<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTextField","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTextField","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextField<T>","Common.TypeNameIdentifier":"MudTextField","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":53029308,"Kind":"Components.Bind","Name":"MudBlazor.MudTextFieldString","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTextFieldString","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTextFieldString","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextFieldString","Common.TypeNameIdentifier":"MudTextFieldString","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":395960273,"Kind":"Components.Bind","Name":"MudBlazor.MudTextFieldString","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTextFieldString","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTextFieldString","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextFieldString","Common.TypeNameIdentifier":"MudTextFieldString","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1915420051,"Kind":"Components.Bind","Name":"MudBlazor.MudTextFieldString","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTextFieldString","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTextFieldString","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextFieldString","Common.TypeNameIdentifier":"MudTextFieldString","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":686442794,"Kind":"Components.Bind","Name":"MudBlazor.MudTextFieldString","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTextFieldString","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTextFieldString","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTextFieldString","Common.TypeNameIdentifier":"MudTextFieldString","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1141798332,"Kind":"Components.Bind","Name":"MudBlazor.BaseMudThemeProvider","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsDarkMode","IsDarkModeChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMudThemeProvider","Attributes":[{"Name":"@bind-IsDarkMode","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMudThemeProvider","Attributes":[{"Name":"@bind-IsDarkMode:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsDarkMode:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDarkMode","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsDarkMode","IsDarkModeChanged"]},"Metadata":{"Common.PropertyName":"IsDarkMode","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.BaseMudThemeProvider","Common.TypeNameIdentifier":"BaseMudThemeProvider","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsDarkModeChanged","Components.Bind.ValueAttribute":"IsDarkMode","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-444138900,"Kind":"Components.Bind","Name":"MudBlazor.BaseMudThemeProvider","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsDarkMode","IsDarkModeChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.BaseMudThemeProvider","Attributes":[{"Name":"@bind-IsDarkMode","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.BaseMudThemeProvider","Attributes":[{"Name":"@bind-IsDarkMode:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsDarkMode:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDarkMode","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsDarkMode","IsDarkModeChanged"]},"Metadata":{"Common.PropertyName":"IsDarkMode","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.BaseMudThemeProvider","Common.TypeNameIdentifier":"BaseMudThemeProvider","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsDarkModeChanged","Components.Bind.ValueAttribute":"IsDarkMode","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2088258024,"Kind":"Components.Bind","Name":"MudBlazor.MudTimeline","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTimeline","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTimeline","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimeline","Common.TypeNameIdentifier":"MudTimeline","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1923300720,"Kind":"Components.Bind","Name":"MudBlazor.MudTimeline","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTimeline","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTimeline","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimeline","Common.TypeNameIdentifier":"MudTimeline","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1908507381,"Kind":"Components.Bind","Name":"MudBlazor.MudTimePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Time","TimeChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTimePicker","Attributes":[{"Name":"@bind-Time","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTimePicker","Attributes":[{"Name":"@bind-Time:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Time:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Time","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan?>","Documentation":{"Id":10,"Args":["Time","TimeChanged"]},"Metadata":{"Common.PropertyName":"Time","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimePicker","Common.TypeNameIdentifier":"MudTimePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TimeChanged","Components.Bind.ValueAttribute":"Time","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-2140378041,"Kind":"Components.Bind","Name":"MudBlazor.MudTimePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTimePicker","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTimePicker","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimePicker","Common.TypeNameIdentifier":"MudTimePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1237440901,"Kind":"Components.Bind","Name":"MudBlazor.MudTimePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Time","TimeChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTimePicker","Attributes":[{"Name":"@bind-Time","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTimePicker","Attributes":[{"Name":"@bind-Time:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Time:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Time","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan?>","Documentation":{"Id":10,"Args":["Time","TimeChanged"]},"Metadata":{"Common.PropertyName":"Time","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimePicker","Common.TypeNameIdentifier":"MudTimePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TimeChanged","Components.Bind.ValueAttribute":"Time","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":253698758,"Kind":"Components.Bind","Name":"MudBlazor.MudTimePicker","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTimePicker","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTimePicker","Attributes":[{"Name":"@bind-Text:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Text:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Text","TextChanged"]},"Metadata":{"Common.PropertyName":"Text","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTimePicker","Common.TypeNameIdentifier":"MudTimePicker","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"TextChanged","Components.Bind.ValueAttribute":"Text","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":614592960,"Kind":"Components.Bind","Name":"MudBlazor.MudTooltip","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTooltip","Attributes":[{"Name":"@bind-IsVisible","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTooltip","Attributes":[{"Name":"@bind-IsVisible:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsVisible:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsVisible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"Metadata":{"Common.PropertyName":"IsVisible","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTooltip","Common.TypeNameIdentifier":"MudTooltip","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsVisibleChanged","Components.Bind.ValueAttribute":"IsVisible","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1279054254,"Kind":"Components.Bind","Name":"MudBlazor.MudTooltip","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTooltip","Attributes":[{"Name":"@bind-IsVisible","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTooltip","Attributes":[{"Name":"@bind-IsVisible:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsVisible:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsVisible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsVisible","IsVisibleChanged"]},"Metadata":{"Common.PropertyName":"IsVisible","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTooltip","Common.TypeNameIdentifier":"MudTooltip","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsVisibleChanged","Components.Bind.ValueAttribute":"IsVisible","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":619656397,"Kind":"Components.Bind","Name":"MudBlazor.MudTreeViewItem<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTreeViewItem","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTreeViewItem","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"Metadata":{"Common.PropertyName":"Expanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ExpandedChanged","Components.Bind.ValueAttribute":"Expanded","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1017510477,"Kind":"Components.Bind","Name":"MudBlazor.MudTreeViewItem<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Activated","ActivatedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTreeViewItem","Attributes":[{"Name":"@bind-Activated","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTreeViewItem","Attributes":[{"Name":"@bind-Activated:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Activated:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Activated","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Activated","ActivatedChanged"]},"Metadata":{"Common.PropertyName":"Activated","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ActivatedChanged","Components.Bind.ValueAttribute":"Activated","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-2107185334,"Kind":"Components.Bind","Name":"MudBlazor.MudTreeViewItem<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Selected","SelectedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTreeViewItem","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTreeViewItem","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Selected","SelectedChanged"]},"Metadata":{"Common.PropertyName":"Selected","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedChanged","Components.Bind.ValueAttribute":"Selected","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":417614065,"Kind":"Components.Bind","Name":"MudBlazor.MudTreeViewItem<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTreeViewItem","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTreeViewItem","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"Metadata":{"Common.PropertyName":"Expanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ExpandedChanged","Components.Bind.ValueAttribute":"Expanded","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-603404010,"Kind":"Components.Bind","Name":"MudBlazor.MudTreeViewItem<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Activated","ActivatedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTreeViewItem","Attributes":[{"Name":"@bind-Activated","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTreeViewItem","Attributes":[{"Name":"@bind-Activated:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Activated:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Activated","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Activated","ActivatedChanged"]},"Metadata":{"Common.PropertyName":"Activated","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ActivatedChanged","Components.Bind.ValueAttribute":"Activated","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1059062592,"Kind":"Components.Bind","Name":"MudBlazor.MudTreeViewItem<T>","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Selected","SelectedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTreeViewItem","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTreeViewItem","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Selected","SelectedChanged"]},"Metadata":{"Common.PropertyName":"Selected","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItem<T>","Common.TypeNameIdentifier":"MudTreeViewItem","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedChanged","Components.Bind.ValueAttribute":"Selected","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":40856621,"Kind":"Components.Bind","Name":"MudBlazor.MudChart","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudChart","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudChart","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudChart","Common.TypeNameIdentifier":"MudChart","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1291598046,"Kind":"Components.Bind","Name":"MudBlazor.MudChart","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudChart","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudChart","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudChart","Common.TypeNameIdentifier":"MudChart","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1118296083,"Kind":"Components.Bind","Name":"MudBlazor.MudThemeProvider","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsDarkMode","IsDarkModeChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudThemeProvider","Attributes":[{"Name":"@bind-IsDarkMode","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudThemeProvider","Attributes":[{"Name":"@bind-IsDarkMode:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsDarkMode:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDarkMode","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsDarkMode","IsDarkModeChanged"]},"Metadata":{"Common.PropertyName":"IsDarkMode","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudThemeProvider","Common.TypeNameIdentifier":"MudThemeProvider","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsDarkModeChanged","Components.Bind.ValueAttribute":"IsDarkMode","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":245085355,"Kind":"Components.Bind","Name":"MudBlazor.MudThemeProvider","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["IsDarkMode","IsDarkModeChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudThemeProvider","Attributes":[{"Name":"@bind-IsDarkMode","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudThemeProvider","Attributes":[{"Name":"@bind-IsDarkMode:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsDarkMode:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDarkMode","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["IsDarkMode","IsDarkModeChanged"]},"Metadata":{"Common.PropertyName":"IsDarkMode","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudThemeProvider","Common.TypeNameIdentifier":"MudThemeProvider","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"IsDarkModeChanged","Components.Bind.ValueAttribute":"IsDarkMode","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-168723135,"Kind":"Components.Bind","Name":"MudBlazor.MudTreeViewItemToggleButton","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudTreeViewItemToggleButton","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudTreeViewItemToggleButton","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"Metadata":{"Common.PropertyName":"Expanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItemToggleButton","Common.TypeNameIdentifier":"MudTreeViewItemToggleButton","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ExpandedChanged","Components.Bind.ValueAttribute":"Expanded","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":835542115,"Kind":"Components.Bind","Name":"MudBlazor.MudTreeViewItemToggleButton","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.MudTreeViewItemToggleButton","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.MudTreeViewItemToggleButton","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Expanded","ExpandedChanged"]},"Metadata":{"Common.PropertyName":"Expanded","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.MudTreeViewItemToggleButton","Common.TypeNameIdentifier":"MudTreeViewItemToggleButton","Common.TypeNamespace":"MudBlazor","Components.Bind.ChangeAttribute":"ExpandedChanged","Components.Bind.ValueAttribute":"Expanded","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-876767234,"Kind":"Components.Bind","Name":"MudBlazor.Charts.Bar","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Bar","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Bar","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Bar","Common.TypeNameIdentifier":"Bar","Common.TypeNamespace":"MudBlazor.Charts","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1816898163,"Kind":"Components.Bind","Name":"MudBlazor.Charts.Bar","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Bar","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.Charts.Bar","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Bar","Common.TypeNameIdentifier":"Bar","Common.TypeNamespace":"MudBlazor.Charts","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-811681911,"Kind":"Components.Bind","Name":"MudBlazor.Charts.Donut","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Donut","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Donut","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Donut","Common.TypeNameIdentifier":"Donut","Common.TypeNamespace":"MudBlazor.Charts","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-2041586889,"Kind":"Components.Bind","Name":"MudBlazor.Charts.Donut","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Donut","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.Charts.Donut","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Donut","Common.TypeNameIdentifier":"Donut","Common.TypeNamespace":"MudBlazor.Charts","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-95632883,"Kind":"Components.Bind","Name":"MudBlazor.Charts.Line","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Line","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Line","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Line","Common.TypeNameIdentifier":"Line","Common.TypeNamespace":"MudBlazor.Charts","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1831710494,"Kind":"Components.Bind","Name":"MudBlazor.Charts.Line","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Line","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.Charts.Line","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Line","Common.TypeNameIdentifier":"Line","Common.TypeNamespace":"MudBlazor.Charts","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":576100164,"Kind":"Components.Bind","Name":"MudBlazor.Charts.Pie","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Pie","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Pie","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Pie","Common.TypeNameIdentifier":"Pie","Common.TypeNamespace":"MudBlazor.Charts","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":270603017,"Kind":"Components.Bind","Name":"MudBlazor.Charts.Pie","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Pie","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.Charts.Pie","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Pie","Common.TypeNameIdentifier":"Pie","Common.TypeNamespace":"MudBlazor.Charts","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-153218552,"Kind":"Components.Bind","Name":"MudBlazor.Charts.Legend","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Legend","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Legend","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Legend","Common.TypeNameIdentifier":"Legend","Common.TypeNamespace":"MudBlazor.Charts","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":119517549,"Kind":"Components.Bind","Name":"MudBlazor.Charts.Legend","AssemblyName":"MudBlazor","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"MudBlazor.Charts.Legend","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MudBlazor.Charts.Legend","Attributes":[{"Name":"@bind-SelectedIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":{"Id":10,"Args":["SelectedIndex","SelectedIndexChanged"]},"Metadata":{"Common.PropertyName":"SelectedIndex","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"MudBlazor.Charts.Legend","Common.TypeNameIdentifier":"Legend","Common.TypeNamespace":"MudBlazor.Charts","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Components.Bind.ValueAttribute":"SelectedIndex","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1728660936,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-135059254,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2079193430,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1332181074,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1272104786,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-2049750376,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-233555445,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-785714819,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2032267197,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":811581651,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1148665271,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-115855893,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-403255426,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":721455144,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1143631698,"Kind":"Components.Ref","Name":"Ref","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":18},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ref","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Ref","Name":"@ref","TypeName":"System.Object","Documentation":{"Id":18},"Metadata":{"Common.PropertyName":"Ref","Common.DirectiveAttribute":"True"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Ref","Components.IsSpecialKind":"Components.Ref","Runtime.Name":"Components.None"}},{"HashCode":-1000828397,"Kind":"Components.Key","Name":"Key","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":17},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@key","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Key","Name":"@key","TypeName":"System.Object","Documentation":{"Id":17},"Metadata":{"Common.PropertyName":"Key","Common.DirectiveAttribute":"True"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Key","Components.IsSpecialKind":"Components.Key","Runtime.Name":"Components.None"}}],"CSharpLanguageVersion":1000},"RootNamespace":"MudBlazorUICRUDApp.Client","Documents":[{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\Auth\\Register.razor","TargetPath":"Pages\\Auth\\Register.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Shared\\SurveyPrompt.razor","TargetPath":"Shared\\SurveyPrompt.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\Auth\\UserInfo.razor","TargetPath":"Pages\\Auth\\UserInfo.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\Students\\AddEditStudent.razor","TargetPath":"Pages\\Students\\AddEditStudent.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\App.razor","TargetPath":"App.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\Auth\\Logout.razor","TargetPath":"Pages\\Auth\\Logout.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\Counter.razor","TargetPath":"Pages\\Counter.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\FetchData.razor","TargetPath":"Pages\\FetchData.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Shared\\NavMenu.razor","TargetPath":"Shared\\NavMenu.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\Index.razor","TargetPath":"Pages\\Index.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Shared\\LoginDisplay.razor","TargetPath":"Shared\\LoginDisplay.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Shared\\MainLayout.razor","TargetPath":"Shared\\MainLayout.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\Students\\StudentList.razor","TargetPath":"Pages\\Students\\StudentList.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\Auth\\ChangePassword.razor","TargetPath":"Pages\\Auth\\ChangePassword.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\Auth\\ResetPassword.razor","TargetPath":"Pages\\Auth\\ResetPassword.razor","FileKind":"component"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\_Imports.razor","TargetPath":"_Imports.razor","FileKind":"componentImport"},{"FilePath":"C:\\Users\\sahar\\source\\repos\\MudBlazorUICRUDApp\\Client\\Pages\\Auth\\Login.razor","TargetPath":"Pages\\Auth\\Login.razor","FileKind":"component"}],"SerializationFormat":"0.3"}